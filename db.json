{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"af29cb70298b76ff7e938370e4327c186292968f","modified":1525486221443},{"_id":"source/CNAME","hash":"90621995f3ffcca7fcff9bb1334110fe90641e66","modified":1525490363416},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1525486221468},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1525486221468},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1525486221470},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1525486221469},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1525486221470},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1525486221470},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1525486221470},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1525486221470},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1525486221470},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1525486221471},{"_id":"themes/next/README.cn.md","hash":"2c766b3369ed477bce134a5450dab45bef161504","modified":1525486221471},{"_id":"themes/next/README.md","hash":"8ce60ce578963eb4e1eb5e33e1efc2fc4779af9c","modified":1525486221471},{"_id":"themes/next/_config.yml","hash":"5ff37e90e4d6812c8fc40c03fa6e1d903d743470","modified":1525486221472},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1525486221472},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1525486221472},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1525486221490},{"_id":"source/.idea/misc.xml","hash":"7df46872d1421797d543d0323da2e81710cc573d","modified":1525486221444},{"_id":"source/.idea/workspace.xml","hash":"cfd2da50b8d142158ff6eaf3f438a0f1b60c7404","modified":1525486221444},{"_id":"source/_posts/CentOS防火墙设置与端口开放的方法.md","hash":"08473f5c5b61039a983263aa01887fa45a994cdf","modified":1525486221444},{"_id":"source/_posts/IntelliJ-IDEA开发快捷键-IDEA-tool-Keyboard-shutcuts.md","hash":"2479d8e5c6284471f62ca7bff36c711b8d922b04","modified":1530669881829},{"_id":"source/_posts/Hexo博客备份.md","hash":"5d8d080d2fb8f0aa6252e5940cfc2d93ccbeeb74","modified":1525504196968},{"_id":"source/_posts/Kotlin.md","hash":"225949f528904c0f06a88d02745db1978dafdc1c","modified":1525486221444},{"_id":"source/_posts/Learn-Linux.md","hash":"ae1431a93403b0f2855eca8cf111f8ec5bfe042f","modified":1525486221445},{"_id":"source/_posts/Linux下tar-gz-tar-bz2-zip等压缩与解压缩总结.md","hash":"447ca85ca3d69f87dabbe16f0031c402e3a42b5e","modified":1525486221445},{"_id":"source/_posts/Linux简介.md","hash":"12f3a2de3baf52940767fe3fe37ba63c2d60238c","modified":1525486221445},{"_id":"source/_posts/My-New-Post.md","hash":"b00602dee00d569bb4d08046b903653e3b049865","modified":1525486221445},{"_id":"source/_posts/LeetCode.md","hash":"6bb6a9d3b59f83750c85d62b322bf61f1f3e5784","modified":1527754812166},{"_id":"source/_posts/Ubuntu-Linux下安装软件方法.md","hash":"e0980d02e74c4bd73bce764be1cf233b197b35fe","modified":1525486221445},{"_id":"source/_posts/Ubuntu-远程连接22端口.md","hash":"efd6e80743b43eccc63326734055e20ab2eab95b","modified":1525486221446},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1525486221446},{"_id":"source/_posts/learning-hexo.md","hash":"7f5484f92c0bff82ca9c84a52a81ba35cdc11e9e","modified":1525486221446},{"_id":"source/_posts/WARNING-REMOTE-HOST-IDENTIFICATION-HAS-CHANGED.md","hash":"f16a5782fc65b8a708ac1642034642ae56cfc5ca","modified":1526018226335},{"_id":"source/_posts/linux环境变量总结.md","hash":"50ed7ec4df91688ccc45e3d677ecc8203069aa96","modified":1527489462107},{"_id":"source/_posts/hhkb配置Mac.md","hash":"123172299557071e631116e421b13a48dc4467c0","modified":1525672602281},{"_id":"source/_posts/mac下chrome快捷键.md","hash":"d03e99390216e67aaee4ec37f7a5b80626f7b7df","modified":1526279840941},{"_id":"source/_posts/php中unset详解.md","hash":"d521226433e1407d1f69c127b0a6ac0821c9b4a7","modified":1529458207368},{"_id":"source/_posts/ubuntu16-04_The_system_is_running_in_low_graphics_mode终极解决办法.md","hash":"ca077b12ca19a50f6038747ffeaf768b127b97d4","modified":1525486221447},{"_id":"source/_posts/php调用shell的方法.md","hash":"6f924b7e38af97118bfcb2401d03b4e869a9abd7","modified":1525486221447},{"_id":"source/_posts/zip和-tar-gz的文件有什么区别.md","hash":"41f86534096e376e288ea7c909027fb29e11d6b6","modified":1525486221448},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1525486221469},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1525486221469},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1525486221469},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1525486221469},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1525486221476},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1525486221489},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1525486221489},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1525486221489},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1525486221489},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1525486221489},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1525486221490},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1525486221490},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1525486221490},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1525486221490},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1525486221472},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1525486221472},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1525486221472},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1525486221473},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1525486221473},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1525486221473},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1525486221473},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1525486221474},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1525486221473},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1525486221474},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1525486221474},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1525486221474},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1525486221474},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1525486221475},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1525486221475},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1525486221475},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1525486221553},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1525486221553},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1525486221553},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1525486221512},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1525486221475},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1525486221475},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1525486221480},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1525486221481},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1525486221482},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1525486221486},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1525486221486},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1525486221487},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1525486221487},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1525486221487},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1525486221487},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1525486221487},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1525486221476},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1525486221476},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1525486221477},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1525486221477},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1525486221477},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1525486221477},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1525486221477},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1525486221478},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1525486221478},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1525486221479},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1525486221479},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1525486221479},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1525486221491},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1525486221491},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1525486221491},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1525486221491},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1525486221491},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1525486221492},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1525486221492},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1525486221492},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1525486221492},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1525486221479},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1525486221512},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1525486221512},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1525486221513},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1525486221513},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1525486221513},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1525486221514},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1525486221513},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1525486221514},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1525486221514},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1525486221514},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1525486221515},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1525486221515},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1525486221515},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1525486221516},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1525486221515},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1525486221516},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1525486221516},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1525486221516},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1525486221516},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1525486221481},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1525486221481},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1525486221511},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1525486221512},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1525486221506},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1525486221506},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1525486221506},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1525486221481},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1525486221481},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1525486221481},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1525486221482},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1525486221482},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1525486221482},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1525486221483},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1525486221483},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1525486221484},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1525486221483},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1525486221483},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1525486221483},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1525486221484},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1525486221484},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1525486221484},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1525486221484},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1525486221485},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1525486221485},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1525486221485},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1525486221485},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1525486221485},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1525486221486},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1525486221486},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1525486221486},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1525486221486},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1525486221488},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1525486221488},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1525486221489},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1525486221488},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1525486221478},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1525486221478},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1525486221479},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1525486221479},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1525486221480},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1525486221480},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1525486221480},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1525486221480},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1525486221480},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1525486221511},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1525486221511},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1525486221511},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1525486221512},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1525486221506},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1525486221506},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1525486221506},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1525486221505},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1525486221525},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1525486221522},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1525486221525},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1525486221529},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1525486221529},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1525486221529},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1525486221530},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1525486221540},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1525486221541},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1525486221541},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1525486221541},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1525486221541},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1525486221531},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1525486221541},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1525486221542},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1525486221530},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1525486221531},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1525486221531},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1525486221532},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1525486221542},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1525486221542},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1525486221543},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1525486221546},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1525486221546},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1525486221546},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1525486221543},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1525486221543},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1525486221543},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1525486221543},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1525486221544},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1525486221544},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1525486221544},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1525486221544},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1525486221544},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1525486221544},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1525486221545},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1525486221545},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1525486221545},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1525486221545},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1525486221550},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1525486221550},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1525486221551},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1525486221552},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1525486221552},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1525486221517},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1525486221517},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1525486221517},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1525486221517},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1525486221517},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1525486221518},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1525486221518},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1525486221518},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1525486221518},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1525486221518},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1525486221519},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1525486221540},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1525486221488},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1525486221504},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1525486221504},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1525486221488},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1525486221505},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1525486221505},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1525486221505},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1525486221505},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1525486221505},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1525486221492},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1525486221493},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1525486221493},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1525486221493},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1525486221493},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1525486221496},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1525486221501},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1525486221507},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1525486221507},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1525486221507},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1525486221507},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1525486221507},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1525486221508},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1525486221508},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1525486221508},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1525486221509},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1525486221509},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1525486221509},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1525486221509},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1525486221510},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1525486221509},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1525486221510},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1525486221510},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1525486221511},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1525486221510},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1525486221511},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1525486221522},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1525486221522},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1525486221521},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1525486221525},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1525486221525},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1525486221526},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1525486221526},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1525486221526},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1525486221526},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1525486221528},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1525486221528},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1525486221529},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1525486221530},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1525486221530},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1525486221532},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1525486221532},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1525486221533},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1525486221549},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1525486221549},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1525486221518},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1525486221521},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1525486221539},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1525486221540},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1525486221551},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1525486221493},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1525486221494},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1525486221495},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1525486221495},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1525486221493},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1525486221494},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1525486221494},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1525486221494},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1525486221494},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1525486221495},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1525486221495},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1525486221496},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1525486221495},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1525486221496},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1525486221496},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1525486221496},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1525486221497},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1525486221497},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1525486221497},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1525486221497},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1525486221497},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1525486221497},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1525486221498},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1525486221498},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1525486221498},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1525486221498},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1525486221499},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1525486221499},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1525486221498},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1525486221499},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1525486221499},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1525486221499},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1525486221500},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1525486221500},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1525486221500},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1525486221500},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1525486221501},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1525486221500},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1525486221500},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1525486221501},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1525486221501},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1525486221501},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1525486221502},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1525486221502},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1525486221502},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1525486221502},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1525486221502},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1525486221503},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1525486221503},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1525486221503},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1525486221503},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1525486221504},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1525486221503},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1525486221504},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1525486221504},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1525486221503},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1525486221504},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1525486221501},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1525486221508},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1525486221508},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1525486221510},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1525486221519},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1525486221519},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1525486221520},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1525486221520},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1525486221520},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1525486221527},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1525486221527},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1525486221527},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1525486221527},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1525486221528},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1525486221527},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1525486221534},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1525486221535},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1525486221539},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1525486221524},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1525486221549},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1525486221537},{"_id":"public/2018/05/31/LeetCode/index.html","hash":"56b9d78216a22fccd81424d9efc001f79ca64004","modified":1530670050782},{"_id":"public/2018/05/11/WARNING-REMOTE-HOST-IDENTIFICATION-HAS-CHANGED/index.html","hash":"9392e06928c495f196153c258852daa42e3c93af","modified":1530670050783},{"_id":"public/2018/05/07/hhkb配置Mac/index.html","hash":"ac166c808824d989943065444a911286d9fcb68c","modified":1530670050783},{"_id":"public/2018/05/05/Hexo博客备份/index.html","hash":"07cb044a200ec67a6045c58492812235440fa2a3","modified":1530670050783},{"_id":"public/2018/05/05/hello-world/index.html","hash":"27ad0010e172193914ca94b569a0a5627e7d0980","modified":1530670050783},{"_id":"public/2018/04/27/zip和-tar-gz的文件有什么区别/index.html","hash":"3cb9a3779ac634901fdb0f395cb5b5fb49b94a84","modified":1530670050783},{"_id":"public/2018/04/26/ubuntu16-04_The_system_is_running_in_low_graphics_mode终极解决办法/index.html","hash":"b59e294df379603963dd8cd3a9c86cdac4cc584b","modified":1530670050783},{"_id":"public/2018/04/23/CentOS防火墙设置与端口开放的方法/index.html","hash":"3f19b33a90b444a59304397220fb1b2f9ba21ea3","modified":1530670050783},{"_id":"public/2018/04/23/Ubuntu-远程连接22端口/index.html","hash":"e91bc0ae0fa3b4bd587f916764c6d25eec0bc0c0","modified":1530670050783},{"_id":"public/2018/04/20/Kotlin/index.html","hash":"1ecec65cb18e2d5cfc407a935a6b3d42dffa6f4d","modified":1530670050783},{"_id":"public/2018/04/20/My-New-Post/index.html","hash":"a26949d733f6203ed1ac579ca1582d773b379ffb","modified":1530670050784},{"_id":"public/2018/03/29/learning-hexo/index.html","hash":"a918b08135fe64bdf401fcaf6632b368201f16fc","modified":1530670050784},{"_id":"public/archives/index.html","hash":"483740201f389faf259e624cf3116e582bda8f22","modified":1530670050784},{"_id":"public/archives/page/2/index.html","hash":"b2e195fc6e439f21bf347bde5894da0b8370eb65","modified":1530670050784},{"_id":"public/archives/2018/index.html","hash":"1817192de6e3f5a1b8c5a173d0c60caf8a4dbe21","modified":1530670050784},{"_id":"public/archives/2018/page/2/index.html","hash":"995b2d9f07922b14c4f4da5323ddfbb24b0153bd","modified":1530670050784},{"_id":"public/archives/2018/03/index.html","hash":"7436af3f8385fbb9527bb237492f91c1c5400c6b","modified":1530670050784},{"_id":"public/archives/2018/04/index.html","hash":"56b7ff5e8562c88625c39b086842e25e35a83c4f","modified":1530670050784},{"_id":"public/archives/2018/04/page/2/index.html","hash":"db7d07ebb480ef443115304c50acfce525b92141","modified":1530670050784},{"_id":"public/archives/2018/05/index.html","hash":"b4f50f38684094226576d53c60e60dbc0e5d766d","modified":1530670050784},{"_id":"public/2018/05/28/linux环境变量总结/index.html","hash":"b3ed1fc3352b8918781d0b6ae1c039517b4124b6","modified":1530670050784},{"_id":"public/2018/05/09/mac下chrome快捷键/index.html","hash":"efd40aca31d54dede59512c9830ea6793bce5473","modified":1530670050784},{"_id":"public/2018/04/28/Linux下tar-gz-tar-bz2-zip等压缩与解压缩总结/index.html","hash":"8fb31a1184851fefc8d5f4dee1fb215d5790a265","modified":1530670050784},{"_id":"public/2018/04/24/Linux简介/index.html","hash":"1bc6a483a8c70e1d730b05e5f3fa2d85156fda2d","modified":1530670050784},{"_id":"public/2018/04/20/Ubuntu-Linux下安装软件方法/index.html","hash":"c0d6b14858e5947a02fb02a8d327a4839ab4995c","modified":1530670050784},{"_id":"public/2018/04/20/Learn-Linux/index.html","hash":"df955a40cab2e97a05e07b0448b1de9b9cce31ef","modified":1530670050785},{"_id":"public/2018/04/20/php调用shell的方法/index.html","hash":"386678baa05e8886c5e1a769900a7263983d12b4","modified":1530670050785},{"_id":"public/index.html","hash":"c6cba1aeb089a188dd3ca22435a6a44299ad3061","modified":1530670050785},{"_id":"public/page/2/index.html","hash":"df21cb690416e3004cb04d7bf543b35c30e67aa9","modified":1530670050785},{"_id":"public/2018/07/04/IntelliJ-IDEA开发快捷键-IDEA-tool-Keyboard-shutcuts/index.html","hash":"22337203a0a0d176a9e7ee9051e1c206dfab4d81","modified":1530670050786},{"_id":"public/2018/06/20/php中unset详解/index.html","hash":"38e526fc6cda3b841406c3667eb4f9e041d50fbb","modified":1530670050786},{"_id":"public/archives/page/3/index.html","hash":"d2c6f2d81986e85defffe4f895f6647364d61e84","modified":1530670050786},{"_id":"public/archives/2018/page/3/index.html","hash":"b5435adc7e9785530a10ec26ba3109cd8152193d","modified":1530670050786},{"_id":"public/archives/2018/06/index.html","hash":"c113db1b3254ae3de32b2049e4cd7b6234bc4857","modified":1530670050786},{"_id":"public/archives/2018/07/index.html","hash":"871c0fd640b8253d73faa557ac61f37ae5086c0f","modified":1530670050786},{"_id":"public/page/3/index.html","hash":"876091e540ea5b043e7d5f388b6e21d501569a47","modified":1530670050786}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"CentOS防火墙设置与端口开放的方法","date":"2018-04-23T06:42:25.000Z","_content":"\n    Centos升级到7后,内置的防火墙已经从iptables变成了firewalld,所以,端口\n    的开启还是要从两种情况来说明的,即iptables和firewalld.\n    更多内容请参考Rehat官网\n    \n### iptables\n    \n    开启防火墙(重启后永久有效) : chkconfig iptables on\n    \n    关闭防火墙(重启后永久有效) : chkconfig iptables off\n    \n    开启防火墙(即时生效,重启后失效) : service iptables start\n    \n    关闭防火墙(即时生效,重启后失效) : service iptables stop\n    \n    重启防火墙 :service iptables restartd\n    \n    查看打开的端口\n    /etc/init.d/iptables status\n    \n    打开某个端口(以8080为例)\n    \n    (1) 开启端口\n    \n    iptables -A INPUT -p tcp --dport 8080 -j ACCEPT\n    \n    (2)保存并重启防火墙\n    \n    /etc/rc.d/init.d/iptables save\n    /etc/init.d/iptables restart\n    \n    打开49152~65534之间的端口\n    \n    iptables -A INPUT -p tcp --dport 49152:65534 -j ACCEPT\n    \n    同样,这里需要对设置进行保存,并重启防火墙.\n    \n    其他打开方式\n    \n    我们还可以通过修改/etc/sysconfig/iptables文件方式开启端口,如下\n    \n    vi /etc/sysconfig/iptables\n    \n    然后再文件中增加一行\n    \n    -A RH-Firewall-1-INPUT -m state -state NEW -m tcp -p tcp -dport 8080 -j ACCEPT\n    \n    参数说明:\n    \n    -A 参数就看成是添加一条规则\n    -p 指定是什么协议,我们常用的tcp协议,当然也有udp,例如53端口的DNS\n    -dport 就是目标端口,当数据从外部进入服务器为目标端口\n    -sport 数据从服务器出去,则为数据源端口使用\n    -j 就是指定是ACCEPT -接收或者DROP不接收\n    \n### firewalld  \n\n    Centos7默认安装了firewalld,如果没有安装的话,可以使用\n    yum install firewalld firewalld-config进行安装.\n    \n    1启动防火墙\n    \n    systemctl start firewalld\n    \n    2 禁用防火墙\n    \n    systemctl stop firewalld\n    \n    3 设置开机启动\n    \n    systemctl enable firewalld\n    \n    4 停止并禁用开机启动\n    \n    systemctl disable firewalld\n    \n    5 重启防火墙\n    \n    firewall-cmd --reload\n    \n    6 查看状态\n    \n    systemctl status firewalld或者 firewall-cmd --state\n    \n    7查看版本\n    \n    firewall-cmd --version\n    \n    8查看帮助\n    \n    firewall-cmd --help\n    \n    9查看区域信息\n    \n    firewall-cmd --get-active-zones\n    \n    10查看指定接口所属区域信息\n    \n    firewall-cmd --get-zone-of-interface=eth0\n    \n    11 拒绝所有包\n    \n    firewall-cmd --panic-on\n    \n    12 取消拒绝状态\n    \n    firewall-cmd --panic-off\n    \n    13 查看是否拒绝\n    \n    firewall-cmd --query-panic\n    \n    14将接口添加到区域(默认接口都在public)\n    \n    firewall-cmd --zone=public --add-interface=eth0(永久生效再加上 --permanent 然后reload防火墙)\n    \n    15 设置默认接口区域\n    \n    firewall-cmd --set-default-zone=public(立即生效,无需重启)\n    \n    16 更新防火墙规则\n    \n    firewall-cmd --reload或firewall-cmd --complete-reload(两\n    者的区别就是第一个无需断开连接,就是firewalld特性之一动态\n    添加规则,第二个需要断开连接,类似重启服务)\n    \n    17 查看指定区域所有打开的端口  \n    \n    firewall-cmd --zone=public --list-ports\n    \n    18指定区域打开端口(记得重启防火墙)\n    \n    firewall-comd --zone=public --add-port=80/tcp(永久生效再加上 --permanent)\n    \n    说明:\n    -zone 作用域\n    -add-port=8080/tcp 添加端口,格式为:端口/通讯协议\n    -permanent #永久生效,没有此参数重启后失效\n    \n    参考文章：\n    http://havee.me/linux/2015-01/using-firewalls-on-centos-7.html\n","source":"_posts/CentOS防火墙设置与端口开放的方法.md","raw":"---\ntitle: CentOS防火墙设置与端口开放的方法\ndate: 2018-04-23 14:42:25\ntags:\n---\n\n    Centos升级到7后,内置的防火墙已经从iptables变成了firewalld,所以,端口\n    的开启还是要从两种情况来说明的,即iptables和firewalld.\n    更多内容请参考Rehat官网\n    \n### iptables\n    \n    开启防火墙(重启后永久有效) : chkconfig iptables on\n    \n    关闭防火墙(重启后永久有效) : chkconfig iptables off\n    \n    开启防火墙(即时生效,重启后失效) : service iptables start\n    \n    关闭防火墙(即时生效,重启后失效) : service iptables stop\n    \n    重启防火墙 :service iptables restartd\n    \n    查看打开的端口\n    /etc/init.d/iptables status\n    \n    打开某个端口(以8080为例)\n    \n    (1) 开启端口\n    \n    iptables -A INPUT -p tcp --dport 8080 -j ACCEPT\n    \n    (2)保存并重启防火墙\n    \n    /etc/rc.d/init.d/iptables save\n    /etc/init.d/iptables restart\n    \n    打开49152~65534之间的端口\n    \n    iptables -A INPUT -p tcp --dport 49152:65534 -j ACCEPT\n    \n    同样,这里需要对设置进行保存,并重启防火墙.\n    \n    其他打开方式\n    \n    我们还可以通过修改/etc/sysconfig/iptables文件方式开启端口,如下\n    \n    vi /etc/sysconfig/iptables\n    \n    然后再文件中增加一行\n    \n    -A RH-Firewall-1-INPUT -m state -state NEW -m tcp -p tcp -dport 8080 -j ACCEPT\n    \n    参数说明:\n    \n    -A 参数就看成是添加一条规则\n    -p 指定是什么协议,我们常用的tcp协议,当然也有udp,例如53端口的DNS\n    -dport 就是目标端口,当数据从外部进入服务器为目标端口\n    -sport 数据从服务器出去,则为数据源端口使用\n    -j 就是指定是ACCEPT -接收或者DROP不接收\n    \n### firewalld  \n\n    Centos7默认安装了firewalld,如果没有安装的话,可以使用\n    yum install firewalld firewalld-config进行安装.\n    \n    1启动防火墙\n    \n    systemctl start firewalld\n    \n    2 禁用防火墙\n    \n    systemctl stop firewalld\n    \n    3 设置开机启动\n    \n    systemctl enable firewalld\n    \n    4 停止并禁用开机启动\n    \n    systemctl disable firewalld\n    \n    5 重启防火墙\n    \n    firewall-cmd --reload\n    \n    6 查看状态\n    \n    systemctl status firewalld或者 firewall-cmd --state\n    \n    7查看版本\n    \n    firewall-cmd --version\n    \n    8查看帮助\n    \n    firewall-cmd --help\n    \n    9查看区域信息\n    \n    firewall-cmd --get-active-zones\n    \n    10查看指定接口所属区域信息\n    \n    firewall-cmd --get-zone-of-interface=eth0\n    \n    11 拒绝所有包\n    \n    firewall-cmd --panic-on\n    \n    12 取消拒绝状态\n    \n    firewall-cmd --panic-off\n    \n    13 查看是否拒绝\n    \n    firewall-cmd --query-panic\n    \n    14将接口添加到区域(默认接口都在public)\n    \n    firewall-cmd --zone=public --add-interface=eth0(永久生效再加上 --permanent 然后reload防火墙)\n    \n    15 设置默认接口区域\n    \n    firewall-cmd --set-default-zone=public(立即生效,无需重启)\n    \n    16 更新防火墙规则\n    \n    firewall-cmd --reload或firewall-cmd --complete-reload(两\n    者的区别就是第一个无需断开连接,就是firewalld特性之一动态\n    添加规则,第二个需要断开连接,类似重启服务)\n    \n    17 查看指定区域所有打开的端口  \n    \n    firewall-cmd --zone=public --list-ports\n    \n    18指定区域打开端口(记得重启防火墙)\n    \n    firewall-comd --zone=public --add-port=80/tcp(永久生效再加上 --permanent)\n    \n    说明:\n    -zone 作用域\n    -add-port=8080/tcp 添加端口,格式为:端口/通讯协议\n    -permanent #永久生效,没有此参数重启后失效\n    \n    参考文章：\n    http://havee.me/linux/2015-01/using-firewalls-on-centos-7.html\n","slug":"CentOS防火墙设置与端口开放的方法","published":1,"updated":"2018-05-05T02:10:21.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jvi000035fy3b43lgi4","content":"<pre><code>Centos升级到7后,内置的防火墙已经从iptables变成了firewalld,所以,端口\n的开启还是要从两种情况来说明的,即iptables和firewalld.\n更多内容请参考Rehat官网\n</code></pre><h3 id=\"iptables\"><a href=\"#iptables\" class=\"headerlink\" title=\"iptables\"></a>iptables</h3><pre><code>开启防火墙(重启后永久有效) : chkconfig iptables on\n\n关闭防火墙(重启后永久有效) : chkconfig iptables off\n\n开启防火墙(即时生效,重启后失效) : service iptables start\n\n关闭防火墙(即时生效,重启后失效) : service iptables stop\n\n重启防火墙 :service iptables restartd\n\n查看打开的端口\n/etc/init.d/iptables status\n\n打开某个端口(以8080为例)\n\n(1) 开启端口\n\niptables -A INPUT -p tcp --dport 8080 -j ACCEPT\n\n(2)保存并重启防火墙\n\n/etc/rc.d/init.d/iptables save\n/etc/init.d/iptables restart\n\n打开49152~65534之间的端口\n\niptables -A INPUT -p tcp --dport 49152:65534 -j ACCEPT\n\n同样,这里需要对设置进行保存,并重启防火墙.\n\n其他打开方式\n\n我们还可以通过修改/etc/sysconfig/iptables文件方式开启端口,如下\n\nvi /etc/sysconfig/iptables\n\n然后再文件中增加一行\n\n-A RH-Firewall-1-INPUT -m state -state NEW -m tcp -p tcp -dport 8080 -j ACCEPT\n\n参数说明:\n\n-A 参数就看成是添加一条规则\n-p 指定是什么协议,我们常用的tcp协议,当然也有udp,例如53端口的DNS\n-dport 就是目标端口,当数据从外部进入服务器为目标端口\n-sport 数据从服务器出去,则为数据源端口使用\n-j 就是指定是ACCEPT -接收或者DROP不接收\n</code></pre><h3 id=\"firewalld\"><a href=\"#firewalld\" class=\"headerlink\" title=\"firewalld\"></a>firewalld</h3><pre><code>Centos7默认安装了firewalld,如果没有安装的话,可以使用\nyum install firewalld firewalld-config进行安装.\n\n1启动防火墙\n\nsystemctl start firewalld\n\n2 禁用防火墙\n\nsystemctl stop firewalld\n\n3 设置开机启动\n\nsystemctl enable firewalld\n\n4 停止并禁用开机启动\n\nsystemctl disable firewalld\n\n5 重启防火墙\n\nfirewall-cmd --reload\n\n6 查看状态\n\nsystemctl status firewalld或者 firewall-cmd --state\n\n7查看版本\n\nfirewall-cmd --version\n\n8查看帮助\n\nfirewall-cmd --help\n\n9查看区域信息\n\nfirewall-cmd --get-active-zones\n\n10查看指定接口所属区域信息\n\nfirewall-cmd --get-zone-of-interface=eth0\n\n11 拒绝所有包\n\nfirewall-cmd --panic-on\n\n12 取消拒绝状态\n\nfirewall-cmd --panic-off\n\n13 查看是否拒绝\n\nfirewall-cmd --query-panic\n\n14将接口添加到区域(默认接口都在public)\n\nfirewall-cmd --zone=public --add-interface=eth0(永久生效再加上 --permanent 然后reload防火墙)\n\n15 设置默认接口区域\n\nfirewall-cmd --set-default-zone=public(立即生效,无需重启)\n\n16 更新防火墙规则\n\nfirewall-cmd --reload或firewall-cmd --complete-reload(两\n者的区别就是第一个无需断开连接,就是firewalld特性之一动态\n添加规则,第二个需要断开连接,类似重启服务)\n\n17 查看指定区域所有打开的端口  \n\nfirewall-cmd --zone=public --list-ports\n\n18指定区域打开端口(记得重启防火墙)\n\nfirewall-comd --zone=public --add-port=80/tcp(永久生效再加上 --permanent)\n\n说明:\n-zone 作用域\n-add-port=8080/tcp 添加端口,格式为:端口/通讯协议\n-permanent #永久生效,没有此参数重启后失效\n\n参考文章：\nhttp://havee.me/linux/2015-01/using-firewalls-on-centos-7.html\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<pre><code>Centos升级到7后,内置的防火墙已经从iptables变成了firewalld,所以,端口\n的开启还是要从两种情况来说明的,即iptables和firewalld.\n更多内容请参考Rehat官网\n</code></pre><h3 id=\"iptables\"><a href=\"#iptables\" class=\"headerlink\" title=\"iptables\"></a>iptables</h3><pre><code>开启防火墙(重启后永久有效) : chkconfig iptables on\n\n关闭防火墙(重启后永久有效) : chkconfig iptables off\n\n开启防火墙(即时生效,重启后失效) : service iptables start\n\n关闭防火墙(即时生效,重启后失效) : service iptables stop\n\n重启防火墙 :service iptables restartd\n\n查看打开的端口\n/etc/init.d/iptables status\n\n打开某个端口(以8080为例)\n\n(1) 开启端口\n\niptables -A INPUT -p tcp --dport 8080 -j ACCEPT\n\n(2)保存并重启防火墙\n\n/etc/rc.d/init.d/iptables save\n/etc/init.d/iptables restart\n\n打开49152~65534之间的端口\n\niptables -A INPUT -p tcp --dport 49152:65534 -j ACCEPT\n\n同样,这里需要对设置进行保存,并重启防火墙.\n\n其他打开方式\n\n我们还可以通过修改/etc/sysconfig/iptables文件方式开启端口,如下\n\nvi /etc/sysconfig/iptables\n\n然后再文件中增加一行\n\n-A RH-Firewall-1-INPUT -m state -state NEW -m tcp -p tcp -dport 8080 -j ACCEPT\n\n参数说明:\n\n-A 参数就看成是添加一条规则\n-p 指定是什么协议,我们常用的tcp协议,当然也有udp,例如53端口的DNS\n-dport 就是目标端口,当数据从外部进入服务器为目标端口\n-sport 数据从服务器出去,则为数据源端口使用\n-j 就是指定是ACCEPT -接收或者DROP不接收\n</code></pre><h3 id=\"firewalld\"><a href=\"#firewalld\" class=\"headerlink\" title=\"firewalld\"></a>firewalld</h3><pre><code>Centos7默认安装了firewalld,如果没有安装的话,可以使用\nyum install firewalld firewalld-config进行安装.\n\n1启动防火墙\n\nsystemctl start firewalld\n\n2 禁用防火墙\n\nsystemctl stop firewalld\n\n3 设置开机启动\n\nsystemctl enable firewalld\n\n4 停止并禁用开机启动\n\nsystemctl disable firewalld\n\n5 重启防火墙\n\nfirewall-cmd --reload\n\n6 查看状态\n\nsystemctl status firewalld或者 firewall-cmd --state\n\n7查看版本\n\nfirewall-cmd --version\n\n8查看帮助\n\nfirewall-cmd --help\n\n9查看区域信息\n\nfirewall-cmd --get-active-zones\n\n10查看指定接口所属区域信息\n\nfirewall-cmd --get-zone-of-interface=eth0\n\n11 拒绝所有包\n\nfirewall-cmd --panic-on\n\n12 取消拒绝状态\n\nfirewall-cmd --panic-off\n\n13 查看是否拒绝\n\nfirewall-cmd --query-panic\n\n14将接口添加到区域(默认接口都在public)\n\nfirewall-cmd --zone=public --add-interface=eth0(永久生效再加上 --permanent 然后reload防火墙)\n\n15 设置默认接口区域\n\nfirewall-cmd --set-default-zone=public(立即生效,无需重启)\n\n16 更新防火墙规则\n\nfirewall-cmd --reload或firewall-cmd --complete-reload(两\n者的区别就是第一个无需断开连接,就是firewalld特性之一动态\n添加规则,第二个需要断开连接,类似重启服务)\n\n17 查看指定区域所有打开的端口  \n\nfirewall-cmd --zone=public --list-ports\n\n18指定区域打开端口(记得重启防火墙)\n\nfirewall-comd --zone=public --add-port=80/tcp(永久生效再加上 --permanent)\n\n说明:\n-zone 作用域\n-add-port=8080/tcp 添加端口,格式为:端口/通讯协议\n-permanent #永久生效,没有此参数重启后失效\n\n参考文章：\nhttp://havee.me/linux/2015-01/using-firewalls-on-centos-7.html\n</code></pre>"},{"title":"IntelliJ IDEA开发快捷键(IDEA tool Keyboard shutcuts)","date":"2018-07-04T01:46:52.000Z","_content":"\nIDEA tool Keyboard shutcuts：\n\n| Action | Mac OSX | Win/Linux|\n| :-- | :-- | :-- |\n| 注释代码(//) | Cmd + / | Ctrl + / | \n| 注释代码(/**/) | Cmd + Option + / | Ctrl + Shift + / | \n| 格式化代码 | Cmd + Option + L | Ctrl + Alt + L | \n| 清除无效包引用 | Option + Control + O | Alt + Ctrl + O | \n| 查找 | Cmd + F | Ctrl + F | \n| 查找+替换 | Cmd + R | Ctrl + R | \n| 上下移动代码 | Option + Shift + Up/Down | Alt + Shift + Up/Down | \n| 删除行 | Cmd + Delete | Ctrl + Y | \n| 扩大缩小选中范围 | Option + Up/Down| Ctrl + W/Ctrl + Shift + W |\n| 快捷生成结构体 | Cmd + Option + T | Ctrl + Alt + T |\n| 快捷覆写方法 | Cmd + O | Ctrl + O |\n| 快捷定位到行首/尾 | Cmd + Left/Right | Ctrl + Left/Right |\n| 折叠展开代码块 | Cmd + Plus,Minus | Ctrl + Plus/Minus |\n| 折叠展开全部代码块 | Cmd + Shift + Plus,Minus | Ctrl + Shift + Plus,Minus |\n| 文件方法结构 | Cmd + F12 | Ctrl + F12 |\n| 查找调用的位置 | Ctrl + Option + H | Ctrl + Alt + H |\n| 大小写转换 | Cmd + Shift + U | Ctrl + Shift + U |\n| 找到使用 | Alt+F7 | Alt+F7 |\n| 显示使用 | Ctrl+Alt+F7 | Ctrl+Alt+F7 |\n\n","source":"_posts/IntelliJ-IDEA开发快捷键-IDEA-tool-Keyboard-shutcuts.md","raw":"---\ntitle: IntelliJ IDEA开发快捷键(IDEA tool Keyboard shutcuts)\ndate: 2018-07-04 09:46:52\ntags:\n---\n\nIDEA tool Keyboard shutcuts：\n\n| Action | Mac OSX | Win/Linux|\n| :-- | :-- | :-- |\n| 注释代码(//) | Cmd + / | Ctrl + / | \n| 注释代码(/**/) | Cmd + Option + / | Ctrl + Shift + / | \n| 格式化代码 | Cmd + Option + L | Ctrl + Alt + L | \n| 清除无效包引用 | Option + Control + O | Alt + Ctrl + O | \n| 查找 | Cmd + F | Ctrl + F | \n| 查找+替换 | Cmd + R | Ctrl + R | \n| 上下移动代码 | Option + Shift + Up/Down | Alt + Shift + Up/Down | \n| 删除行 | Cmd + Delete | Ctrl + Y | \n| 扩大缩小选中范围 | Option + Up/Down| Ctrl + W/Ctrl + Shift + W |\n| 快捷生成结构体 | Cmd + Option + T | Ctrl + Alt + T |\n| 快捷覆写方法 | Cmd + O | Ctrl + O |\n| 快捷定位到行首/尾 | Cmd + Left/Right | Ctrl + Left/Right |\n| 折叠展开代码块 | Cmd + Plus,Minus | Ctrl + Plus/Minus |\n| 折叠展开全部代码块 | Cmd + Shift + Plus,Minus | Ctrl + Shift + Plus,Minus |\n| 文件方法结构 | Cmd + F12 | Ctrl + F12 |\n| 查找调用的位置 | Ctrl + Option + H | Ctrl + Alt + H |\n| 大小写转换 | Cmd + Shift + U | Ctrl + Shift + U |\n| 找到使用 | Alt+F7 | Alt+F7 |\n| 显示使用 | Ctrl+Alt+F7 | Ctrl+Alt+F7 |\n\n","slug":"IntelliJ-IDEA开发快捷键-IDEA-tool-Keyboard-shutcuts","published":1,"updated":"2018-07-04T02:04:41.829Z","_id":"cjj6h8jvm000135fyidzzk98n","comments":1,"layout":"post","photos":[],"link":"","content":"<p>IDEA tool Keyboard shutcuts：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Action</th>\n<th style=\"text-align:left\">Mac OSX</th>\n<th style=\"text-align:left\">Win/Linux</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">注释代码(//)</td>\n<td style=\"text-align:left\">Cmd + /</td>\n<td style=\"text-align:left\">Ctrl + /</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">注释代码(/**/)</td>\n<td style=\"text-align:left\">Cmd + Option + /</td>\n<td style=\"text-align:left\">Ctrl + Shift + /</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">格式化代码</td>\n<td style=\"text-align:left\">Cmd + Option + L</td>\n<td style=\"text-align:left\">Ctrl + Alt + L</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">清除无效包引用</td>\n<td style=\"text-align:left\">Option + Control + O</td>\n<td style=\"text-align:left\">Alt + Ctrl + O</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">查找</td>\n<td style=\"text-align:left\">Cmd + F</td>\n<td style=\"text-align:left\">Ctrl + F</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">查找+替换</td>\n<td style=\"text-align:left\">Cmd + R</td>\n<td style=\"text-align:left\">Ctrl + R</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">上下移动代码</td>\n<td style=\"text-align:left\">Option + Shift + Up/Down</td>\n<td style=\"text-align:left\">Alt + Shift + Up/Down</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">删除行</td>\n<td style=\"text-align:left\">Cmd + Delete</td>\n<td style=\"text-align:left\">Ctrl + Y</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">扩大缩小选中范围</td>\n<td style=\"text-align:left\">Option + Up/Down</td>\n<td style=\"text-align:left\">Ctrl + W/Ctrl + Shift + W</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">快捷生成结构体</td>\n<td style=\"text-align:left\">Cmd + Option + T</td>\n<td style=\"text-align:left\">Ctrl + Alt + T</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">快捷覆写方法</td>\n<td style=\"text-align:left\">Cmd + O</td>\n<td style=\"text-align:left\">Ctrl + O</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">快捷定位到行首/尾</td>\n<td style=\"text-align:left\">Cmd + Left/Right</td>\n<td style=\"text-align:left\">Ctrl + Left/Right</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">折叠展开代码块</td>\n<td style=\"text-align:left\">Cmd + Plus,Minus</td>\n<td style=\"text-align:left\">Ctrl + Plus/Minus</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">折叠展开全部代码块</td>\n<td style=\"text-align:left\">Cmd + Shift + Plus,Minus</td>\n<td style=\"text-align:left\">Ctrl + Shift + Plus,Minus</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">文件方法结构</td>\n<td style=\"text-align:left\">Cmd + F12</td>\n<td style=\"text-align:left\">Ctrl + F12</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">查找调用的位置</td>\n<td style=\"text-align:left\">Ctrl + Option + H</td>\n<td style=\"text-align:left\">Ctrl + Alt + H</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">大小写转换</td>\n<td style=\"text-align:left\">Cmd + Shift + U</td>\n<td style=\"text-align:left\">Ctrl + Shift + U</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">找到使用</td>\n<td style=\"text-align:left\">Alt+F7</td>\n<td style=\"text-align:left\">Alt+F7</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">显示使用</td>\n<td style=\"text-align:left\">Ctrl+Alt+F7</td>\n<td style=\"text-align:left\">Ctrl+Alt+F7</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<p>IDEA tool Keyboard shutcuts：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Action</th>\n<th style=\"text-align:left\">Mac OSX</th>\n<th style=\"text-align:left\">Win/Linux</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">注释代码(//)</td>\n<td style=\"text-align:left\">Cmd + /</td>\n<td style=\"text-align:left\">Ctrl + /</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">注释代码(/**/)</td>\n<td style=\"text-align:left\">Cmd + Option + /</td>\n<td style=\"text-align:left\">Ctrl + Shift + /</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">格式化代码</td>\n<td style=\"text-align:left\">Cmd + Option + L</td>\n<td style=\"text-align:left\">Ctrl + Alt + L</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">清除无效包引用</td>\n<td style=\"text-align:left\">Option + Control + O</td>\n<td style=\"text-align:left\">Alt + Ctrl + O</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">查找</td>\n<td style=\"text-align:left\">Cmd + F</td>\n<td style=\"text-align:left\">Ctrl + F</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">查找+替换</td>\n<td style=\"text-align:left\">Cmd + R</td>\n<td style=\"text-align:left\">Ctrl + R</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">上下移动代码</td>\n<td style=\"text-align:left\">Option + Shift + Up/Down</td>\n<td style=\"text-align:left\">Alt + Shift + Up/Down</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">删除行</td>\n<td style=\"text-align:left\">Cmd + Delete</td>\n<td style=\"text-align:left\">Ctrl + Y</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">扩大缩小选中范围</td>\n<td style=\"text-align:left\">Option + Up/Down</td>\n<td style=\"text-align:left\">Ctrl + W/Ctrl + Shift + W</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">快捷生成结构体</td>\n<td style=\"text-align:left\">Cmd + Option + T</td>\n<td style=\"text-align:left\">Ctrl + Alt + T</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">快捷覆写方法</td>\n<td style=\"text-align:left\">Cmd + O</td>\n<td style=\"text-align:left\">Ctrl + O</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">快捷定位到行首/尾</td>\n<td style=\"text-align:left\">Cmd + Left/Right</td>\n<td style=\"text-align:left\">Ctrl + Left/Right</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">折叠展开代码块</td>\n<td style=\"text-align:left\">Cmd + Plus,Minus</td>\n<td style=\"text-align:left\">Ctrl + Plus/Minus</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">折叠展开全部代码块</td>\n<td style=\"text-align:left\">Cmd + Shift + Plus,Minus</td>\n<td style=\"text-align:left\">Ctrl + Shift + Plus,Minus</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">文件方法结构</td>\n<td style=\"text-align:left\">Cmd + F12</td>\n<td style=\"text-align:left\">Ctrl + F12</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">查找调用的位置</td>\n<td style=\"text-align:left\">Ctrl + Option + H</td>\n<td style=\"text-align:left\">Ctrl + Alt + H</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">大小写转换</td>\n<td style=\"text-align:left\">Cmd + Shift + U</td>\n<td style=\"text-align:left\">Ctrl + Shift + U</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">找到使用</td>\n<td style=\"text-align:left\">Alt+F7</td>\n<td style=\"text-align:left\">Alt+F7</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">显示使用</td>\n<td style=\"text-align:left\">Ctrl+Alt+F7</td>\n<td style=\"text-align:left\">Ctrl+Alt+F7</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Hexo博客备份","date":"2018-05-05T03:52:33.000Z","_content":"\n## 参考：https://www.jianshu.com/p/57b5a384f234\n\n遇到的坑\n\n    CNAME必须放在source目录中不然会导致页面无法访问404\n    \n    注意千万不要合并主干否则......你懂的\n    \n    ","source":"_posts/Hexo博客备份.md","raw":"---\ntitle: Hexo博客备份\ndate: 2018-05-05 11:52:33\ntags:\n---\n\n## 参考：https://www.jianshu.com/p/57b5a384f234\n\n遇到的坑\n\n    CNAME必须放在source目录中不然会导致页面无法访问404\n    \n    注意千万不要合并主干否则......你懂的\n    \n    ","slug":"Hexo博客备份","published":1,"updated":"2018-05-05T07:09:56.968Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jvo000235fyldtcj7cv","content":"<h2 id=\"参考：https-www-jianshu-com-p-57b5a384f234\"><a href=\"#参考：https-www-jianshu-com-p-57b5a384f234\" class=\"headerlink\" title=\"参考：https://www.jianshu.com/p/57b5a384f234\"></a>参考：<a href=\"https://www.jianshu.com/p/57b5a384f234\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/57b5a384f234</a></h2><p>遇到的坑</p>\n<pre><code>CNAME必须放在source目录中不然会导致页面无法访问404\n\n注意千万不要合并主干否则......你懂的\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"参考：https-www-jianshu-com-p-57b5a384f234\"><a href=\"#参考：https-www-jianshu-com-p-57b5a384f234\" class=\"headerlink\" title=\"参考：https://www.jianshu.com/p/57b5a384f234\"></a>参考：<a href=\"https://www.jianshu.com/p/57b5a384f234\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/57b5a384f234</a></h2><p>遇到的坑</p>\n<pre><code>CNAME必须放在source目录中不然会导致页面无法访问404\n\n注意千万不要合并主干否则......你懂的\n</code></pre>"},{"title":"Kotlin","date":"2018-04-20T09:34:49.000Z","_content":"\n## 引用: https://baike.baidu.com/item/Kotlin/1133714?fr=aladdin\n\n    Kotlin 是一个用于现代多平台应用的静态编程语言,有JetBrains开\n    发.\n    \n    Kotlin可以编译称为Java字节码,也可以编译成JavaScript,方便在没有\n    JVM的设备上运行.\n    \n    Kotlin已正式成为Android官方支持开发语言.\n    \n## 简介\n\n    JetBrains,作为广受欢迎的java IDE intelliJ的提供商,在Apache许可\n    下已经开源其Kotlin编程语言.\n    \n## 设计目标\n    \n    创建一种兼容java的语言\n    \n    让它比java更安全,能够静态检测常见的陷阱.如:引用空指针\n    让它比java更简洁,通过支持variable type inference,higher-order\n    function(closures),extension functions,mixins and first-class\n    delegation等实现.\n    \n    让它比最成熟的竞争对手Scala语言更加简洁.\n    \n## 开发源代码\n\n    其基础编译器(他们将其改为kompiler---开创了一系列以K字打头的用语\n    ---甚至连 contributors这类词他们也用改成了kontributors)可以被独立\n    出来并嵌入到Maven Ant或Gradle工具链中,这使得在IDE中开发的代码能够\n    利用已有的机制来构建,从而尽可能的减少了在新环境中使用所受的干预,哪\n    怕与那些没有安装Kotlin插件的开发人员一起合作项目也没有问题.\n    \n    The Intellij Kotlin插件扩展了Java编译器使得Kotlin代码能够得以编写 \n    编译和调试.除此之外,关于基本的Java集合,已经有编写好的帮助函数,可以\n    更顺畅地衔接在java8中出现的集合扩展.\n    \n    有两篇文章对Kotlin与Java以及Scala分别进行了比较,对各自特性和异同进\n    行了对比.即便Scala可能还是更为强大些,Kotlin还是尝试提供比java更好\n    的函数 模式匹配 空指针预防和泛型.该语言同时支持特征(traits)和模式匹配\n    \n    Kotlin插件在当前版本的IntelliJ和Eclipse中均已能使用.\n    \n    Kotlin,类似Xtend一样,旨在提供一种更好的java而非重建整个新平台.这两种\n    语言都向下编译为字节码(虽然Xtend是首先转换成相应的java代码,再让java\n    编译器完成繁重的工作),而且两者都引入了函数和扩展函数(在某个有限范围\n    内静态地增加一个新方法到某个已有类型的能力).Xtend是基于Eclipse的,而\n    Kotlin是基于IntelliJ的,两者都提供无界面构建.能够首先演变到其他IDE的语\n    言有可能成为最后的赢家.\n    \n    \n    \n    \n    \n    \n\n","source":"_posts/Kotlin.md","raw":"---\ntitle: Kotlin\ndate: 2018-04-20 17:34:49\ntags:\n---\n\n## 引用: https://baike.baidu.com/item/Kotlin/1133714?fr=aladdin\n\n    Kotlin 是一个用于现代多平台应用的静态编程语言,有JetBrains开\n    发.\n    \n    Kotlin可以编译称为Java字节码,也可以编译成JavaScript,方便在没有\n    JVM的设备上运行.\n    \n    Kotlin已正式成为Android官方支持开发语言.\n    \n## 简介\n\n    JetBrains,作为广受欢迎的java IDE intelliJ的提供商,在Apache许可\n    下已经开源其Kotlin编程语言.\n    \n## 设计目标\n    \n    创建一种兼容java的语言\n    \n    让它比java更安全,能够静态检测常见的陷阱.如:引用空指针\n    让它比java更简洁,通过支持variable type inference,higher-order\n    function(closures),extension functions,mixins and first-class\n    delegation等实现.\n    \n    让它比最成熟的竞争对手Scala语言更加简洁.\n    \n## 开发源代码\n\n    其基础编译器(他们将其改为kompiler---开创了一系列以K字打头的用语\n    ---甚至连 contributors这类词他们也用改成了kontributors)可以被独立\n    出来并嵌入到Maven Ant或Gradle工具链中,这使得在IDE中开发的代码能够\n    利用已有的机制来构建,从而尽可能的减少了在新环境中使用所受的干预,哪\n    怕与那些没有安装Kotlin插件的开发人员一起合作项目也没有问题.\n    \n    The Intellij Kotlin插件扩展了Java编译器使得Kotlin代码能够得以编写 \n    编译和调试.除此之外,关于基本的Java集合,已经有编写好的帮助函数,可以\n    更顺畅地衔接在java8中出现的集合扩展.\n    \n    有两篇文章对Kotlin与Java以及Scala分别进行了比较,对各自特性和异同进\n    行了对比.即便Scala可能还是更为强大些,Kotlin还是尝试提供比java更好\n    的函数 模式匹配 空指针预防和泛型.该语言同时支持特征(traits)和模式匹配\n    \n    Kotlin插件在当前版本的IntelliJ和Eclipse中均已能使用.\n    \n    Kotlin,类似Xtend一样,旨在提供一种更好的java而非重建整个新平台.这两种\n    语言都向下编译为字节码(虽然Xtend是首先转换成相应的java代码,再让java\n    编译器完成繁重的工作),而且两者都引入了函数和扩展函数(在某个有限范围\n    内静态地增加一个新方法到某个已有类型的能力).Xtend是基于Eclipse的,而\n    Kotlin是基于IntelliJ的,两者都提供无界面构建.能够首先演变到其他IDE的语\n    言有可能成为最后的赢家.\n    \n    \n    \n    \n    \n    \n\n","slug":"Kotlin","published":1,"updated":"2018-05-05T02:10:21.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jvp000335fyzk2r09m2","content":"<h2 id=\"引用-https-baike-baidu-com-item-Kotlin-1133714-fr-aladdin\"><a href=\"#引用-https-baike-baidu-com-item-Kotlin-1133714-fr-aladdin\" class=\"headerlink\" title=\"引用: https://baike.baidu.com/item/Kotlin/1133714?fr=aladdin\"></a>引用: <a href=\"https://baike.baidu.com/item/Kotlin/1133714?fr=aladdin\" target=\"_blank\" rel=\"noopener\">https://baike.baidu.com/item/Kotlin/1133714?fr=aladdin</a></h2><pre><code>Kotlin 是一个用于现代多平台应用的静态编程语言,有JetBrains开\n发.\n\nKotlin可以编译称为Java字节码,也可以编译成JavaScript,方便在没有\nJVM的设备上运行.\n\nKotlin已正式成为Android官方支持开发语言.\n</code></pre><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><pre><code>JetBrains,作为广受欢迎的java IDE intelliJ的提供商,在Apache许可\n下已经开源其Kotlin编程语言.\n</code></pre><h2 id=\"设计目标\"><a href=\"#设计目标\" class=\"headerlink\" title=\"设计目标\"></a>设计目标</h2><pre><code>创建一种兼容java的语言\n\n让它比java更安全,能够静态检测常见的陷阱.如:引用空指针\n让它比java更简洁,通过支持variable type inference,higher-order\nfunction(closures),extension functions,mixins and first-class\ndelegation等实现.\n\n让它比最成熟的竞争对手Scala语言更加简洁.\n</code></pre><h2 id=\"开发源代码\"><a href=\"#开发源代码\" class=\"headerlink\" title=\"开发源代码\"></a>开发源代码</h2><pre><code>其基础编译器(他们将其改为kompiler---开创了一系列以K字打头的用语\n---甚至连 contributors这类词他们也用改成了kontributors)可以被独立\n出来并嵌入到Maven Ant或Gradle工具链中,这使得在IDE中开发的代码能够\n利用已有的机制来构建,从而尽可能的减少了在新环境中使用所受的干预,哪\n怕与那些没有安装Kotlin插件的开发人员一起合作项目也没有问题.\n\nThe Intellij Kotlin插件扩展了Java编译器使得Kotlin代码能够得以编写 \n编译和调试.除此之外,关于基本的Java集合,已经有编写好的帮助函数,可以\n更顺畅地衔接在java8中出现的集合扩展.\n\n有两篇文章对Kotlin与Java以及Scala分别进行了比较,对各自特性和异同进\n行了对比.即便Scala可能还是更为强大些,Kotlin还是尝试提供比java更好\n的函数 模式匹配 空指针预防和泛型.该语言同时支持特征(traits)和模式匹配\n\nKotlin插件在当前版本的IntelliJ和Eclipse中均已能使用.\n\nKotlin,类似Xtend一样,旨在提供一种更好的java而非重建整个新平台.这两种\n语言都向下编译为字节码(虽然Xtend是首先转换成相应的java代码,再让java\n编译器完成繁重的工作),而且两者都引入了函数和扩展函数(在某个有限范围\n内静态地增加一个新方法到某个已有类型的能力).Xtend是基于Eclipse的,而\nKotlin是基于IntelliJ的,两者都提供无界面构建.能够首先演变到其他IDE的语\n言有可能成为最后的赢家.\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"引用-https-baike-baidu-com-item-Kotlin-1133714-fr-aladdin\"><a href=\"#引用-https-baike-baidu-com-item-Kotlin-1133714-fr-aladdin\" class=\"headerlink\" title=\"引用: https://baike.baidu.com/item/Kotlin/1133714?fr=aladdin\"></a>引用: <a href=\"https://baike.baidu.com/item/Kotlin/1133714?fr=aladdin\" target=\"_blank\" rel=\"noopener\">https://baike.baidu.com/item/Kotlin/1133714?fr=aladdin</a></h2><pre><code>Kotlin 是一个用于现代多平台应用的静态编程语言,有JetBrains开\n发.\n\nKotlin可以编译称为Java字节码,也可以编译成JavaScript,方便在没有\nJVM的设备上运行.\n\nKotlin已正式成为Android官方支持开发语言.\n</code></pre><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><pre><code>JetBrains,作为广受欢迎的java IDE intelliJ的提供商,在Apache许可\n下已经开源其Kotlin编程语言.\n</code></pre><h2 id=\"设计目标\"><a href=\"#设计目标\" class=\"headerlink\" title=\"设计目标\"></a>设计目标</h2><pre><code>创建一种兼容java的语言\n\n让它比java更安全,能够静态检测常见的陷阱.如:引用空指针\n让它比java更简洁,通过支持variable type inference,higher-order\nfunction(closures),extension functions,mixins and first-class\ndelegation等实现.\n\n让它比最成熟的竞争对手Scala语言更加简洁.\n</code></pre><h2 id=\"开发源代码\"><a href=\"#开发源代码\" class=\"headerlink\" title=\"开发源代码\"></a>开发源代码</h2><pre><code>其基础编译器(他们将其改为kompiler---开创了一系列以K字打头的用语\n---甚至连 contributors这类词他们也用改成了kontributors)可以被独立\n出来并嵌入到Maven Ant或Gradle工具链中,这使得在IDE中开发的代码能够\n利用已有的机制来构建,从而尽可能的减少了在新环境中使用所受的干预,哪\n怕与那些没有安装Kotlin插件的开发人员一起合作项目也没有问题.\n\nThe Intellij Kotlin插件扩展了Java编译器使得Kotlin代码能够得以编写 \n编译和调试.除此之外,关于基本的Java集合,已经有编写好的帮助函数,可以\n更顺畅地衔接在java8中出现的集合扩展.\n\n有两篇文章对Kotlin与Java以及Scala分别进行了比较,对各自特性和异同进\n行了对比.即便Scala可能还是更为强大些,Kotlin还是尝试提供比java更好\n的函数 模式匹配 空指针预防和泛型.该语言同时支持特征(traits)和模式匹配\n\nKotlin插件在当前版本的IntelliJ和Eclipse中均已能使用.\n\nKotlin,类似Xtend一样,旨在提供一种更好的java而非重建整个新平台.这两种\n语言都向下编译为字节码(虽然Xtend是首先转换成相应的java代码,再让java\n编译器完成繁重的工作),而且两者都引入了函数和扩展函数(在某个有限范围\n内静态地增加一个新方法到某个已有类型的能力).Xtend是基于Eclipse的,而\nKotlin是基于IntelliJ的,两者都提供无界面构建.能够首先演变到其他IDE的语\n言有可能成为最后的赢家.\n</code></pre>"},{"title":"Learn Linux","date":"2018-04-20T03:40:30.000Z","_content":"\n# 学习Linux问题与总结\n\n## 1 如何打开Ubuntu命令行工具\n\n   * 按快捷键,Ctrl+Alt+F2/F3/F4/F5/F6,后面的F2到6是或者的意思\n\n   * 然后会进入命令行的登录界面,这时候需要输入用户名和密码.\n\n   * 密码是不可见的,输入后直接回车即可\n\n## 2 如何关闭Ubuntu命令行工具(即切换到桌面)\n\n   * 按快捷键,Ctrl+Alt+F7\n\n## 3 Ubuntu下查看IP\n\n   * ifconfig -a\n\n## 4 使用locale查看系统当前编码\n\n## 5 Ubuntu设置root用户初始密码\n\n### 安装ubuntu成功后,都是普通用户权限,并没有最高root权限\n    如果需要root权限的时候,通常都会在命令前面加上sudo.有时\n    候感觉很麻烦...\n    \n    我们一般使用su命令来直接切换到root用户的,但是如果没有设\n    置root初始密码,就会抛出su : Authentication failure这样的\n    问题.所以我们只要给root用户设置一个初始密码就好了.\n    \n    输入sudo passwd命令,输入一般用户密码并设定root用户密码.\n    设定root密码成功后,输入su命令,并输入刚才设定的root密码,\n    就可以切换成root 了.提示符$代表一般用户,提示符#代表root用户\n    \n   * 总结 sudo passwd 设置初始root用户密码\n\n## 6 查看所有用户组\n\n    $cat /etc/group\n    ssl-cert:x:110:postgres\n    最前面一个字段ssl-cert是用户组名,最后一个字段postgres是用户名\n    \n## 7 查看所有用户\n\n    $sudo cat /etc/shadow\n    postgres:$6$m8anDHdE$FDY4j0CdAbgeLOM90EH1xCW/IMqHEZwM87sepyHHjUYccdmFOCVaFealGTd2zGBVfDV.AR9CWTlGz0Sw/JivL1:15910:0:99999:7:::  \n    postgres是用户名\n    \n## 8 远程连接Linux(Ubuntu配置SSH服务)端口22\n    安装OpenSSH\n    Ubuntu缺省没有安装SSH Server,使用一下命令安装:\n    \n    sudo apt-get install openssh-server openssh-client\n    \n    不过Ubuntu缺省已经安装了ssh client.\n    \n    配置完成后重启:\n    \n    sudo /etc/init.d/ssh restart\n    \n    windows客户端用putty连接命令shell模式\n    \n## 9 如何查看Linux系统版本信息\n\n### 查看Linux内核版本命令(两种方式)\n\n   * cat /proc/version \n   \n   * uname -a\n   \n### 查看Linux系统版本命令(3种方式)\n\n   * lsb_release -a \n   \n    这个命令适用于所有的Linux发行版,包括ReHat SUSE Debian...等发行版\n    \n   * cat /etc/redhat-release,\n   \n    这种方式只适合Redhat系的Linux\n    \n   * cat /etc/issue\n   \n    这种方式适用于所有的Linux发行版\n    \n## 10 ubuntu 安装 上传下载工具lrzsz\n\n    apt-get install lrzsz y\n    \n## 11 Linux中运行.sh(Shell脚本)文件\n\n    有两种方法:\n    \n    1 直接./加文件名.sh,如运行hello.sh为./hello.sh[hello.sh必须有x权限]\n    \n    2 直接sh加上文件名.sh,如运行hello.sh为sh hello.sh[hello.sh]可以没有x权限]\n    \n    步骤\n    \n    1 cd到.sh文件所在目录\n    \n    2 给.sh文件添加x执行权限,已hello.sh文件为例\n    chmod u+x hello.sh\n    \n    3 执行 ./hello.sh 或者 sh hello.sh\n    \n    备注 绝对路径执行*.sh以hello.sh 为例\n    \n    ./home/test/shell/hello.sh ,可以这样运行时因为当前登录用户是root,当前路径\n    是在/下,.代表当前路径.\n    \n    /home/test/shll/hello.sh,此路径为真实绝对路径,但此方法运行的条件是该用户对\n    hello.sh拥有执行权限,即已执行chmod u+x hello.sh\n    \n    sh/home/test/shell/hello.sh,用sh命令执行shell脚本不需要该用户拥有hello.sh的执行\n    权限即可执行.\n    \n## 12 zip 或unzip的安装和使用\n\n    Linux系统没有自带的压缩解压缩工具;需要我们自己安装;当用到zip或者unzip如果没有安装\n    就会出现unzip:Command Not Found 或 zip:Command Not Found;\n    \n    1 apt-get安装:\n    apt-get install zip\n    \n    2 yum安装\n    yum install -y unzip zip\n    \n## 13 虚拟机中CentOS无法上网(connect:network is unreachable)\n\n    表现:ping时提示connet network is unreachable\n    \n    原因: ifconfig发现网卡没有分配IP地址,考虑是DHCP的问题.\n    \n    临时解决方案: sudo dhclient,发现可以上网,重启又没有IP了,\n    \n    一劳永逸解决方案: 修改etc目录下网卡配置信息\n    vim /etc/sysconfig/network-scripts/ifcfg-[网络设备名]\n    发现最后一行的ONBOOT选项竟然是no,将其改为yes,然后就正常了.\n    \n## 14 重启系统 reboot init 6\n\n## 15 关机\n    \n    halt 立刻关机\n    \n    poweroff 立刻关机\n    \n    shutdown -h now 立刻关机(root用户使用)\n    \n    shutdown -h 10 10分钟后自动关机\n    \n    如果是通过shutdown命令设置关机的话,可以用shutdown -c命令取消重启\n    \n    推荐使用shutdown命令\n    \n## 16 centOS安装lrzsz\n    \n    yum install lrzsz\n    \n    \n    \n    \n    \n    \n    \n    \n\n\n","source":"_posts/Learn-Linux.md","raw":"---\ntitle: Learn Linux\ndate: 2018-04-20 11:40:30\ntags:\n---\n\n# 学习Linux问题与总结\n\n## 1 如何打开Ubuntu命令行工具\n\n   * 按快捷键,Ctrl+Alt+F2/F3/F4/F5/F6,后面的F2到6是或者的意思\n\n   * 然后会进入命令行的登录界面,这时候需要输入用户名和密码.\n\n   * 密码是不可见的,输入后直接回车即可\n\n## 2 如何关闭Ubuntu命令行工具(即切换到桌面)\n\n   * 按快捷键,Ctrl+Alt+F7\n\n## 3 Ubuntu下查看IP\n\n   * ifconfig -a\n\n## 4 使用locale查看系统当前编码\n\n## 5 Ubuntu设置root用户初始密码\n\n### 安装ubuntu成功后,都是普通用户权限,并没有最高root权限\n    如果需要root权限的时候,通常都会在命令前面加上sudo.有时\n    候感觉很麻烦...\n    \n    我们一般使用su命令来直接切换到root用户的,但是如果没有设\n    置root初始密码,就会抛出su : Authentication failure这样的\n    问题.所以我们只要给root用户设置一个初始密码就好了.\n    \n    输入sudo passwd命令,输入一般用户密码并设定root用户密码.\n    设定root密码成功后,输入su命令,并输入刚才设定的root密码,\n    就可以切换成root 了.提示符$代表一般用户,提示符#代表root用户\n    \n   * 总结 sudo passwd 设置初始root用户密码\n\n## 6 查看所有用户组\n\n    $cat /etc/group\n    ssl-cert:x:110:postgres\n    最前面一个字段ssl-cert是用户组名,最后一个字段postgres是用户名\n    \n## 7 查看所有用户\n\n    $sudo cat /etc/shadow\n    postgres:$6$m8anDHdE$FDY4j0CdAbgeLOM90EH1xCW/IMqHEZwM87sepyHHjUYccdmFOCVaFealGTd2zGBVfDV.AR9CWTlGz0Sw/JivL1:15910:0:99999:7:::  \n    postgres是用户名\n    \n## 8 远程连接Linux(Ubuntu配置SSH服务)端口22\n    安装OpenSSH\n    Ubuntu缺省没有安装SSH Server,使用一下命令安装:\n    \n    sudo apt-get install openssh-server openssh-client\n    \n    不过Ubuntu缺省已经安装了ssh client.\n    \n    配置完成后重启:\n    \n    sudo /etc/init.d/ssh restart\n    \n    windows客户端用putty连接命令shell模式\n    \n## 9 如何查看Linux系统版本信息\n\n### 查看Linux内核版本命令(两种方式)\n\n   * cat /proc/version \n   \n   * uname -a\n   \n### 查看Linux系统版本命令(3种方式)\n\n   * lsb_release -a \n   \n    这个命令适用于所有的Linux发行版,包括ReHat SUSE Debian...等发行版\n    \n   * cat /etc/redhat-release,\n   \n    这种方式只适合Redhat系的Linux\n    \n   * cat /etc/issue\n   \n    这种方式适用于所有的Linux发行版\n    \n## 10 ubuntu 安装 上传下载工具lrzsz\n\n    apt-get install lrzsz y\n    \n## 11 Linux中运行.sh(Shell脚本)文件\n\n    有两种方法:\n    \n    1 直接./加文件名.sh,如运行hello.sh为./hello.sh[hello.sh必须有x权限]\n    \n    2 直接sh加上文件名.sh,如运行hello.sh为sh hello.sh[hello.sh]可以没有x权限]\n    \n    步骤\n    \n    1 cd到.sh文件所在目录\n    \n    2 给.sh文件添加x执行权限,已hello.sh文件为例\n    chmod u+x hello.sh\n    \n    3 执行 ./hello.sh 或者 sh hello.sh\n    \n    备注 绝对路径执行*.sh以hello.sh 为例\n    \n    ./home/test/shell/hello.sh ,可以这样运行时因为当前登录用户是root,当前路径\n    是在/下,.代表当前路径.\n    \n    /home/test/shll/hello.sh,此路径为真实绝对路径,但此方法运行的条件是该用户对\n    hello.sh拥有执行权限,即已执行chmod u+x hello.sh\n    \n    sh/home/test/shell/hello.sh,用sh命令执行shell脚本不需要该用户拥有hello.sh的执行\n    权限即可执行.\n    \n## 12 zip 或unzip的安装和使用\n\n    Linux系统没有自带的压缩解压缩工具;需要我们自己安装;当用到zip或者unzip如果没有安装\n    就会出现unzip:Command Not Found 或 zip:Command Not Found;\n    \n    1 apt-get安装:\n    apt-get install zip\n    \n    2 yum安装\n    yum install -y unzip zip\n    \n## 13 虚拟机中CentOS无法上网(connect:network is unreachable)\n\n    表现:ping时提示connet network is unreachable\n    \n    原因: ifconfig发现网卡没有分配IP地址,考虑是DHCP的问题.\n    \n    临时解决方案: sudo dhclient,发现可以上网,重启又没有IP了,\n    \n    一劳永逸解决方案: 修改etc目录下网卡配置信息\n    vim /etc/sysconfig/network-scripts/ifcfg-[网络设备名]\n    发现最后一行的ONBOOT选项竟然是no,将其改为yes,然后就正常了.\n    \n## 14 重启系统 reboot init 6\n\n## 15 关机\n    \n    halt 立刻关机\n    \n    poweroff 立刻关机\n    \n    shutdown -h now 立刻关机(root用户使用)\n    \n    shutdown -h 10 10分钟后自动关机\n    \n    如果是通过shutdown命令设置关机的话,可以用shutdown -c命令取消重启\n    \n    推荐使用shutdown命令\n    \n## 16 centOS安装lrzsz\n    \n    yum install lrzsz\n    \n    \n    \n    \n    \n    \n    \n    \n\n\n","slug":"Learn-Linux","published":1,"updated":"2018-05-05T02:10:21.445Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jvq000435fy9ynx4xsv","content":"<h1 id=\"学习Linux问题与总结\"><a href=\"#学习Linux问题与总结\" class=\"headerlink\" title=\"学习Linux问题与总结\"></a>学习Linux问题与总结</h1><h2 id=\"1-如何打开Ubuntu命令行工具\"><a href=\"#1-如何打开Ubuntu命令行工具\" class=\"headerlink\" title=\"1 如何打开Ubuntu命令行工具\"></a>1 如何打开Ubuntu命令行工具</h2><ul>\n<li><p>按快捷键,Ctrl+Alt+F2/F3/F4/F5/F6,后面的F2到6是或者的意思</p>\n</li>\n<li><p>然后会进入命令行的登录界面,这时候需要输入用户名和密码.</p>\n</li>\n<li><p>密码是不可见的,输入后直接回车即可</p>\n</li>\n</ul>\n<h2 id=\"2-如何关闭Ubuntu命令行工具-即切换到桌面\"><a href=\"#2-如何关闭Ubuntu命令行工具-即切换到桌面\" class=\"headerlink\" title=\"2 如何关闭Ubuntu命令行工具(即切换到桌面)\"></a>2 如何关闭Ubuntu命令行工具(即切换到桌面)</h2><ul>\n<li>按快捷键,Ctrl+Alt+F7</li>\n</ul>\n<h2 id=\"3-Ubuntu下查看IP\"><a href=\"#3-Ubuntu下查看IP\" class=\"headerlink\" title=\"3 Ubuntu下查看IP\"></a>3 Ubuntu下查看IP</h2><ul>\n<li>ifconfig -a</li>\n</ul>\n<h2 id=\"4-使用locale查看系统当前编码\"><a href=\"#4-使用locale查看系统当前编码\" class=\"headerlink\" title=\"4 使用locale查看系统当前编码\"></a>4 使用locale查看系统当前编码</h2><h2 id=\"5-Ubuntu设置root用户初始密码\"><a href=\"#5-Ubuntu设置root用户初始密码\" class=\"headerlink\" title=\"5 Ubuntu设置root用户初始密码\"></a>5 Ubuntu设置root用户初始密码</h2><h3 id=\"安装ubuntu成功后-都是普通用户权限-并没有最高root权限\"><a href=\"#安装ubuntu成功后-都是普通用户权限-并没有最高root权限\" class=\"headerlink\" title=\"安装ubuntu成功后,都是普通用户权限,并没有最高root权限\"></a>安装ubuntu成功后,都是普通用户权限,并没有最高root权限</h3><pre><code>如果需要root权限的时候,通常都会在命令前面加上sudo.有时\n候感觉很麻烦...\n\n我们一般使用su命令来直接切换到root用户的,但是如果没有设\n置root初始密码,就会抛出su : Authentication failure这样的\n问题.所以我们只要给root用户设置一个初始密码就好了.\n\n输入sudo passwd命令,输入一般用户密码并设定root用户密码.\n设定root密码成功后,输入su命令,并输入刚才设定的root密码,\n就可以切换成root 了.提示符$代表一般用户,提示符#代表root用户\n</code></pre><ul>\n<li>总结 sudo passwd 设置初始root用户密码</li>\n</ul>\n<h2 id=\"6-查看所有用户组\"><a href=\"#6-查看所有用户组\" class=\"headerlink\" title=\"6 查看所有用户组\"></a>6 查看所有用户组</h2><pre><code>$cat /etc/group\nssl-cert:x:110:postgres\n最前面一个字段ssl-cert是用户组名,最后一个字段postgres是用户名\n</code></pre><h2 id=\"7-查看所有用户\"><a href=\"#7-查看所有用户\" class=\"headerlink\" title=\"7 查看所有用户\"></a>7 查看所有用户</h2><pre><code>$sudo cat /etc/shadow\npostgres:$6$m8anDHdE$FDY4j0CdAbgeLOM90EH1xCW/IMqHEZwM87sepyHHjUYccdmFOCVaFealGTd2zGBVfDV.AR9CWTlGz0Sw/JivL1:15910:0:99999:7:::  \npostgres是用户名\n</code></pre><h2 id=\"8-远程连接Linux-Ubuntu配置SSH服务-端口22\"><a href=\"#8-远程连接Linux-Ubuntu配置SSH服务-端口22\" class=\"headerlink\" title=\"8 远程连接Linux(Ubuntu配置SSH服务)端口22\"></a>8 远程连接Linux(Ubuntu配置SSH服务)端口22</h2><pre><code>安装OpenSSH\nUbuntu缺省没有安装SSH Server,使用一下命令安装:\n\nsudo apt-get install openssh-server openssh-client\n\n不过Ubuntu缺省已经安装了ssh client.\n\n配置完成后重启:\n\nsudo /etc/init.d/ssh restart\n\nwindows客户端用putty连接命令shell模式\n</code></pre><h2 id=\"9-如何查看Linux系统版本信息\"><a href=\"#9-如何查看Linux系统版本信息\" class=\"headerlink\" title=\"9 如何查看Linux系统版本信息\"></a>9 如何查看Linux系统版本信息</h2><h3 id=\"查看Linux内核版本命令-两种方式\"><a href=\"#查看Linux内核版本命令-两种方式\" class=\"headerlink\" title=\"查看Linux内核版本命令(两种方式)\"></a>查看Linux内核版本命令(两种方式)</h3><ul>\n<li><p>cat /proc/version </p>\n</li>\n<li><p>uname -a</p>\n</li>\n</ul>\n<h3 id=\"查看Linux系统版本命令-3种方式\"><a href=\"#查看Linux系统版本命令-3种方式\" class=\"headerlink\" title=\"查看Linux系统版本命令(3种方式)\"></a>查看Linux系统版本命令(3种方式)</h3><ul>\n<li><p>lsb_release -a </p>\n<p>这个命令适用于所有的Linux发行版,包括ReHat SUSE Debian…等发行版</p>\n</li>\n<li><p>cat /etc/redhat-release,</p>\n<p>这种方式只适合Redhat系的Linux</p>\n</li>\n<li><p>cat /etc/issue</p>\n<p>这种方式适用于所有的Linux发行版</p>\n</li>\n</ul>\n<h2 id=\"10-ubuntu-安装-上传下载工具lrzsz\"><a href=\"#10-ubuntu-安装-上传下载工具lrzsz\" class=\"headerlink\" title=\"10 ubuntu 安装 上传下载工具lrzsz\"></a>10 ubuntu 安装 上传下载工具lrzsz</h2><pre><code>apt-get install lrzsz y\n</code></pre><h2 id=\"11-Linux中运行-sh-Shell脚本-文件\"><a href=\"#11-Linux中运行-sh-Shell脚本-文件\" class=\"headerlink\" title=\"11 Linux中运行.sh(Shell脚本)文件\"></a>11 Linux中运行.sh(Shell脚本)文件</h2><pre><code>有两种方法:\n\n1 直接./加文件名.sh,如运行hello.sh为./hello.sh[hello.sh必须有x权限]\n\n2 直接sh加上文件名.sh,如运行hello.sh为sh hello.sh[hello.sh]可以没有x权限]\n\n步骤\n\n1 cd到.sh文件所在目录\n\n2 给.sh文件添加x执行权限,已hello.sh文件为例\nchmod u+x hello.sh\n\n3 执行 ./hello.sh 或者 sh hello.sh\n\n备注 绝对路径执行*.sh以hello.sh 为例\n\n./home/test/shell/hello.sh ,可以这样运行时因为当前登录用户是root,当前路径\n是在/下,.代表当前路径.\n\n/home/test/shll/hello.sh,此路径为真实绝对路径,但此方法运行的条件是该用户对\nhello.sh拥有执行权限,即已执行chmod u+x hello.sh\n\nsh/home/test/shell/hello.sh,用sh命令执行shell脚本不需要该用户拥有hello.sh的执行\n权限即可执行.\n</code></pre><h2 id=\"12-zip-或unzip的安装和使用\"><a href=\"#12-zip-或unzip的安装和使用\" class=\"headerlink\" title=\"12 zip 或unzip的安装和使用\"></a>12 zip 或unzip的安装和使用</h2><pre><code>Linux系统没有自带的压缩解压缩工具;需要我们自己安装;当用到zip或者unzip如果没有安装\n就会出现unzip:Command Not Found 或 zip:Command Not Found;\n\n1 apt-get安装:\napt-get install zip\n\n2 yum安装\nyum install -y unzip zip\n</code></pre><h2 id=\"13-虚拟机中CentOS无法上网-connect-network-is-unreachable\"><a href=\"#13-虚拟机中CentOS无法上网-connect-network-is-unreachable\" class=\"headerlink\" title=\"13 虚拟机中CentOS无法上网(connect:network is unreachable)\"></a>13 虚拟机中CentOS无法上网(connect:network is unreachable)</h2><pre><code>表现:ping时提示connet network is unreachable\n\n原因: ifconfig发现网卡没有分配IP地址,考虑是DHCP的问题.\n\n临时解决方案: sudo dhclient,发现可以上网,重启又没有IP了,\n\n一劳永逸解决方案: 修改etc目录下网卡配置信息\nvim /etc/sysconfig/network-scripts/ifcfg-[网络设备名]\n发现最后一行的ONBOOT选项竟然是no,将其改为yes,然后就正常了.\n</code></pre><h2 id=\"14-重启系统-reboot-init-6\"><a href=\"#14-重启系统-reboot-init-6\" class=\"headerlink\" title=\"14 重启系统 reboot init 6\"></a>14 重启系统 reboot init 6</h2><h2 id=\"15-关机\"><a href=\"#15-关机\" class=\"headerlink\" title=\"15 关机\"></a>15 关机</h2><pre><code>halt 立刻关机\n\npoweroff 立刻关机\n\nshutdown -h now 立刻关机(root用户使用)\n\nshutdown -h 10 10分钟后自动关机\n\n如果是通过shutdown命令设置关机的话,可以用shutdown -c命令取消重启\n\n推荐使用shutdown命令\n</code></pre><h2 id=\"16-centOS安装lrzsz\"><a href=\"#16-centOS安装lrzsz\" class=\"headerlink\" title=\"16 centOS安装lrzsz\"></a>16 centOS安装lrzsz</h2><pre><code>yum install lrzsz\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"学习Linux问题与总结\"><a href=\"#学习Linux问题与总结\" class=\"headerlink\" title=\"学习Linux问题与总结\"></a>学习Linux问题与总结</h1><h2 id=\"1-如何打开Ubuntu命令行工具\"><a href=\"#1-如何打开Ubuntu命令行工具\" class=\"headerlink\" title=\"1 如何打开Ubuntu命令行工具\"></a>1 如何打开Ubuntu命令行工具</h2><ul>\n<li><p>按快捷键,Ctrl+Alt+F2/F3/F4/F5/F6,后面的F2到6是或者的意思</p>\n</li>\n<li><p>然后会进入命令行的登录界面,这时候需要输入用户名和密码.</p>\n</li>\n<li><p>密码是不可见的,输入后直接回车即可</p>\n</li>\n</ul>\n<h2 id=\"2-如何关闭Ubuntu命令行工具-即切换到桌面\"><a href=\"#2-如何关闭Ubuntu命令行工具-即切换到桌面\" class=\"headerlink\" title=\"2 如何关闭Ubuntu命令行工具(即切换到桌面)\"></a>2 如何关闭Ubuntu命令行工具(即切换到桌面)</h2><ul>\n<li>按快捷键,Ctrl+Alt+F7</li>\n</ul>\n<h2 id=\"3-Ubuntu下查看IP\"><a href=\"#3-Ubuntu下查看IP\" class=\"headerlink\" title=\"3 Ubuntu下查看IP\"></a>3 Ubuntu下查看IP</h2><ul>\n<li>ifconfig -a</li>\n</ul>\n<h2 id=\"4-使用locale查看系统当前编码\"><a href=\"#4-使用locale查看系统当前编码\" class=\"headerlink\" title=\"4 使用locale查看系统当前编码\"></a>4 使用locale查看系统当前编码</h2><h2 id=\"5-Ubuntu设置root用户初始密码\"><a href=\"#5-Ubuntu设置root用户初始密码\" class=\"headerlink\" title=\"5 Ubuntu设置root用户初始密码\"></a>5 Ubuntu设置root用户初始密码</h2><h3 id=\"安装ubuntu成功后-都是普通用户权限-并没有最高root权限\"><a href=\"#安装ubuntu成功后-都是普通用户权限-并没有最高root权限\" class=\"headerlink\" title=\"安装ubuntu成功后,都是普通用户权限,并没有最高root权限\"></a>安装ubuntu成功后,都是普通用户权限,并没有最高root权限</h3><pre><code>如果需要root权限的时候,通常都会在命令前面加上sudo.有时\n候感觉很麻烦...\n\n我们一般使用su命令来直接切换到root用户的,但是如果没有设\n置root初始密码,就会抛出su : Authentication failure这样的\n问题.所以我们只要给root用户设置一个初始密码就好了.\n\n输入sudo passwd命令,输入一般用户密码并设定root用户密码.\n设定root密码成功后,输入su命令,并输入刚才设定的root密码,\n就可以切换成root 了.提示符$代表一般用户,提示符#代表root用户\n</code></pre><ul>\n<li>总结 sudo passwd 设置初始root用户密码</li>\n</ul>\n<h2 id=\"6-查看所有用户组\"><a href=\"#6-查看所有用户组\" class=\"headerlink\" title=\"6 查看所有用户组\"></a>6 查看所有用户组</h2><pre><code>$cat /etc/group\nssl-cert:x:110:postgres\n最前面一个字段ssl-cert是用户组名,最后一个字段postgres是用户名\n</code></pre><h2 id=\"7-查看所有用户\"><a href=\"#7-查看所有用户\" class=\"headerlink\" title=\"7 查看所有用户\"></a>7 查看所有用户</h2><pre><code>$sudo cat /etc/shadow\npostgres:$6$m8anDHdE$FDY4j0CdAbgeLOM90EH1xCW/IMqHEZwM87sepyHHjUYccdmFOCVaFealGTd2zGBVfDV.AR9CWTlGz0Sw/JivL1:15910:0:99999:7:::  \npostgres是用户名\n</code></pre><h2 id=\"8-远程连接Linux-Ubuntu配置SSH服务-端口22\"><a href=\"#8-远程连接Linux-Ubuntu配置SSH服务-端口22\" class=\"headerlink\" title=\"8 远程连接Linux(Ubuntu配置SSH服务)端口22\"></a>8 远程连接Linux(Ubuntu配置SSH服务)端口22</h2><pre><code>安装OpenSSH\nUbuntu缺省没有安装SSH Server,使用一下命令安装:\n\nsudo apt-get install openssh-server openssh-client\n\n不过Ubuntu缺省已经安装了ssh client.\n\n配置完成后重启:\n\nsudo /etc/init.d/ssh restart\n\nwindows客户端用putty连接命令shell模式\n</code></pre><h2 id=\"9-如何查看Linux系统版本信息\"><a href=\"#9-如何查看Linux系统版本信息\" class=\"headerlink\" title=\"9 如何查看Linux系统版本信息\"></a>9 如何查看Linux系统版本信息</h2><h3 id=\"查看Linux内核版本命令-两种方式\"><a href=\"#查看Linux内核版本命令-两种方式\" class=\"headerlink\" title=\"查看Linux内核版本命令(两种方式)\"></a>查看Linux内核版本命令(两种方式)</h3><ul>\n<li><p>cat /proc/version </p>\n</li>\n<li><p>uname -a</p>\n</li>\n</ul>\n<h3 id=\"查看Linux系统版本命令-3种方式\"><a href=\"#查看Linux系统版本命令-3种方式\" class=\"headerlink\" title=\"查看Linux系统版本命令(3种方式)\"></a>查看Linux系统版本命令(3种方式)</h3><ul>\n<li><p>lsb_release -a </p>\n<p>这个命令适用于所有的Linux发行版,包括ReHat SUSE Debian…等发行版</p>\n</li>\n<li><p>cat /etc/redhat-release,</p>\n<p>这种方式只适合Redhat系的Linux</p>\n</li>\n<li><p>cat /etc/issue</p>\n<p>这种方式适用于所有的Linux发行版</p>\n</li>\n</ul>\n<h2 id=\"10-ubuntu-安装-上传下载工具lrzsz\"><a href=\"#10-ubuntu-安装-上传下载工具lrzsz\" class=\"headerlink\" title=\"10 ubuntu 安装 上传下载工具lrzsz\"></a>10 ubuntu 安装 上传下载工具lrzsz</h2><pre><code>apt-get install lrzsz y\n</code></pre><h2 id=\"11-Linux中运行-sh-Shell脚本-文件\"><a href=\"#11-Linux中运行-sh-Shell脚本-文件\" class=\"headerlink\" title=\"11 Linux中运行.sh(Shell脚本)文件\"></a>11 Linux中运行.sh(Shell脚本)文件</h2><pre><code>有两种方法:\n\n1 直接./加文件名.sh,如运行hello.sh为./hello.sh[hello.sh必须有x权限]\n\n2 直接sh加上文件名.sh,如运行hello.sh为sh hello.sh[hello.sh]可以没有x权限]\n\n步骤\n\n1 cd到.sh文件所在目录\n\n2 给.sh文件添加x执行权限,已hello.sh文件为例\nchmod u+x hello.sh\n\n3 执行 ./hello.sh 或者 sh hello.sh\n\n备注 绝对路径执行*.sh以hello.sh 为例\n\n./home/test/shell/hello.sh ,可以这样运行时因为当前登录用户是root,当前路径\n是在/下,.代表当前路径.\n\n/home/test/shll/hello.sh,此路径为真实绝对路径,但此方法运行的条件是该用户对\nhello.sh拥有执行权限,即已执行chmod u+x hello.sh\n\nsh/home/test/shell/hello.sh,用sh命令执行shell脚本不需要该用户拥有hello.sh的执行\n权限即可执行.\n</code></pre><h2 id=\"12-zip-或unzip的安装和使用\"><a href=\"#12-zip-或unzip的安装和使用\" class=\"headerlink\" title=\"12 zip 或unzip的安装和使用\"></a>12 zip 或unzip的安装和使用</h2><pre><code>Linux系统没有自带的压缩解压缩工具;需要我们自己安装;当用到zip或者unzip如果没有安装\n就会出现unzip:Command Not Found 或 zip:Command Not Found;\n\n1 apt-get安装:\napt-get install zip\n\n2 yum安装\nyum install -y unzip zip\n</code></pre><h2 id=\"13-虚拟机中CentOS无法上网-connect-network-is-unreachable\"><a href=\"#13-虚拟机中CentOS无法上网-connect-network-is-unreachable\" class=\"headerlink\" title=\"13 虚拟机中CentOS无法上网(connect:network is unreachable)\"></a>13 虚拟机中CentOS无法上网(connect:network is unreachable)</h2><pre><code>表现:ping时提示connet network is unreachable\n\n原因: ifconfig发现网卡没有分配IP地址,考虑是DHCP的问题.\n\n临时解决方案: sudo dhclient,发现可以上网,重启又没有IP了,\n\n一劳永逸解决方案: 修改etc目录下网卡配置信息\nvim /etc/sysconfig/network-scripts/ifcfg-[网络设备名]\n发现最后一行的ONBOOT选项竟然是no,将其改为yes,然后就正常了.\n</code></pre><h2 id=\"14-重启系统-reboot-init-6\"><a href=\"#14-重启系统-reboot-init-6\" class=\"headerlink\" title=\"14 重启系统 reboot init 6\"></a>14 重启系统 reboot init 6</h2><h2 id=\"15-关机\"><a href=\"#15-关机\" class=\"headerlink\" title=\"15 关机\"></a>15 关机</h2><pre><code>halt 立刻关机\n\npoweroff 立刻关机\n\nshutdown -h now 立刻关机(root用户使用)\n\nshutdown -h 10 10分钟后自动关机\n\n如果是通过shutdown命令设置关机的话,可以用shutdown -c命令取消重启\n\n推荐使用shutdown命令\n</code></pre><h2 id=\"16-centOS安装lrzsz\"><a href=\"#16-centOS安装lrzsz\" class=\"headerlink\" title=\"16 centOS安装lrzsz\"></a>16 centOS安装lrzsz</h2><pre><code>yum install lrzsz\n</code></pre>"},{"title":"Linux下tar.gz,tar,bz2,zip等压缩与解压缩总结","date":"2018-04-28T01:42:39.000Z","_content":"\n## tar命令基本用法:\n\ntar命令的选项有很多(用man tar可以查看到),常用的就下面几个\n\n* tar -cf all.tar *.jpg\n\n    这条命令是将所有.jpg的文件打成一个名为all.tar的包.-c是表示\n\n    生成新的包,-f指定包的文件名.\n\n* tar -rf all.tar *.gif\n    \n    这条命令是将所有.gif的文件增加到all.tar的包里面去.-r是表示增\n    \n    加文件的意思.\n    \n* tar -uf all.tar logo.gif\n\n    更新原来all.tar中logo.gif文件,-u是表示更新文件的意思\n    \n* tar -tf all.tar    \n    \n    列出all.tar中的所有文件,-u表示更新文件的意思\n    \n* tar -xf all.tar    \n\n    解出all.tar中的所有文件,-x是解开文件的意思\n    \n以上就是tar的最基本的用法,为了方便用户在打包解包的同时可以压缩或解压\n文件,tar提供了一种特殊的功能.就是tar可以在打包或解包的同时调用其他的\n压缩程序,比如调用gzip bzip2等.\n\n## 1)tar调用gzip\n\ngzip是GNU组织开发的一个压缩程序,.gz结尾的文件是gzip压缩的结果.与gzip相对\n\n的解压程序是gunzip.tar中使用-z这个参数来调用gzip\n\n* # tar -czf all.tar.gz *.jpg  \n\n将所有.jpg的文件打成一个tar包,并将其用gzip压缩,生成一个gzip压缩过的包,\n包名为all.tar.gz\n\n* # tar -xzf all.tar.gz\n\n解压包\n\n\n## 2) tar调用bzip2\n\nbzip2是一个压缩能力更强的压缩程序,.bz2结尾的文件是bzip压缩的结果.\n\n与bzip相对的解压程序是bunzip2.tar中使用-j这个参数来调用gzip.\n\n* # tar -cjf all.tar.bz2 *.jpg\n\n这条命令是将所有.jpg的文件打成一个tar包,并且将其用bzip2压缩,生成一个\nbzip2相对的压缩\n\n\n    \n    \n    \n    \n\n    \n    \n","source":"_posts/Linux下tar-gz-tar-bz2-zip等压缩与解压缩总结.md","raw":"---\ntitle: 'Linux下tar.gz,tar,bz2,zip等压缩与解压缩总结'\ndate: 2018-04-28 09:42:39\ntags:\n---\n\n## tar命令基本用法:\n\ntar命令的选项有很多(用man tar可以查看到),常用的就下面几个\n\n* tar -cf all.tar *.jpg\n\n    这条命令是将所有.jpg的文件打成一个名为all.tar的包.-c是表示\n\n    生成新的包,-f指定包的文件名.\n\n* tar -rf all.tar *.gif\n    \n    这条命令是将所有.gif的文件增加到all.tar的包里面去.-r是表示增\n    \n    加文件的意思.\n    \n* tar -uf all.tar logo.gif\n\n    更新原来all.tar中logo.gif文件,-u是表示更新文件的意思\n    \n* tar -tf all.tar    \n    \n    列出all.tar中的所有文件,-u表示更新文件的意思\n    \n* tar -xf all.tar    \n\n    解出all.tar中的所有文件,-x是解开文件的意思\n    \n以上就是tar的最基本的用法,为了方便用户在打包解包的同时可以压缩或解压\n文件,tar提供了一种特殊的功能.就是tar可以在打包或解包的同时调用其他的\n压缩程序,比如调用gzip bzip2等.\n\n## 1)tar调用gzip\n\ngzip是GNU组织开发的一个压缩程序,.gz结尾的文件是gzip压缩的结果.与gzip相对\n\n的解压程序是gunzip.tar中使用-z这个参数来调用gzip\n\n* # tar -czf all.tar.gz *.jpg  \n\n将所有.jpg的文件打成一个tar包,并将其用gzip压缩,生成一个gzip压缩过的包,\n包名为all.tar.gz\n\n* # tar -xzf all.tar.gz\n\n解压包\n\n\n## 2) tar调用bzip2\n\nbzip2是一个压缩能力更强的压缩程序,.bz2结尾的文件是bzip压缩的结果.\n\n与bzip相对的解压程序是bunzip2.tar中使用-j这个参数来调用gzip.\n\n* # tar -cjf all.tar.bz2 *.jpg\n\n这条命令是将所有.jpg的文件打成一个tar包,并且将其用bzip2压缩,生成一个\nbzip2相对的压缩\n\n\n    \n    \n    \n    \n\n    \n    \n","slug":"Linux下tar-gz-tar-bz2-zip等压缩与解压缩总结","published":1,"updated":"2018-05-05T02:10:21.445Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jvr000535fyyowbq1bf","content":"<h2 id=\"tar命令基本用法\"><a href=\"#tar命令基本用法\" class=\"headerlink\" title=\"tar命令基本用法:\"></a>tar命令基本用法:</h2><p>tar命令的选项有很多(用man tar可以查看到),常用的就下面几个</p>\n<ul>\n<li><p>tar -cf all.tar *.jpg</p>\n<p>  这条命令是将所有.jpg的文件打成一个名为all.tar的包.-c是表示</p>\n<p>  生成新的包,-f指定包的文件名.</p>\n</li>\n<li><p>tar -rf all.tar *.gif</p>\n<p>  这条命令是将所有.gif的文件增加到all.tar的包里面去.-r是表示增</p>\n<p>  加文件的意思.</p>\n</li>\n<li><p>tar -uf all.tar logo.gif</p>\n<p>  更新原来all.tar中logo.gif文件,-u是表示更新文件的意思</p>\n</li>\n<li><p>tar -tf all.tar    </p>\n<p>  列出all.tar中的所有文件,-u表示更新文件的意思</p>\n</li>\n<li><p>tar -xf all.tar    </p>\n<p>  解出all.tar中的所有文件,-x是解开文件的意思</p>\n</li>\n</ul>\n<p>以上就是tar的最基本的用法,为了方便用户在打包解包的同时可以压缩或解压<br>文件,tar提供了一种特殊的功能.就是tar可以在打包或解包的同时调用其他的<br>压缩程序,比如调用gzip bzip2等.</p>\n<h2 id=\"1-tar调用gzip\"><a href=\"#1-tar调用gzip\" class=\"headerlink\" title=\"1)tar调用gzip\"></a>1)tar调用gzip</h2><p>gzip是GNU组织开发的一个压缩程序,.gz结尾的文件是gzip压缩的结果.与gzip相对</p>\n<p>的解压程序是gunzip.tar中使用-z这个参数来调用gzip</p>\n<ul>\n<li><h1 id=\"tar-czf-all-tar-gz-jpg\"><a href=\"#tar-czf-all-tar-gz-jpg\" class=\"headerlink\" title=\"tar -czf all.tar.gz *.jpg\"></a>tar -czf all.tar.gz *.jpg</h1></li>\n</ul>\n<p>将所有.jpg的文件打成一个tar包,并将其用gzip压缩,生成一个gzip压缩过的包,<br>包名为all.tar.gz</p>\n<ul>\n<li><h1 id=\"tar-xzf-all-tar-gz\"><a href=\"#tar-xzf-all-tar-gz\" class=\"headerlink\" title=\"tar -xzf all.tar.gz\"></a>tar -xzf all.tar.gz</h1></li>\n</ul>\n<p>解压包</p>\n<h2 id=\"2-tar调用bzip2\"><a href=\"#2-tar调用bzip2\" class=\"headerlink\" title=\"2) tar调用bzip2\"></a>2) tar调用bzip2</h2><p>bzip2是一个压缩能力更强的压缩程序,.bz2结尾的文件是bzip压缩的结果.</p>\n<p>与bzip相对的解压程序是bunzip2.tar中使用-j这个参数来调用gzip.</p>\n<ul>\n<li><h1 id=\"tar-cjf-all-tar-bz2-jpg\"><a href=\"#tar-cjf-all-tar-bz2-jpg\" class=\"headerlink\" title=\"tar -cjf all.tar.bz2 *.jpg\"></a>tar -cjf all.tar.bz2 *.jpg</h1></li>\n</ul>\n<p>这条命令是将所有.jpg的文件打成一个tar包,并且将其用bzip2压缩,生成一个<br>bzip2相对的压缩</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"tar命令基本用法\"><a href=\"#tar命令基本用法\" class=\"headerlink\" title=\"tar命令基本用法:\"></a>tar命令基本用法:</h2><p>tar命令的选项有很多(用man tar可以查看到),常用的就下面几个</p>\n<ul>\n<li><p>tar -cf all.tar *.jpg</p>\n<p>  这条命令是将所有.jpg的文件打成一个名为all.tar的包.-c是表示</p>\n<p>  生成新的包,-f指定包的文件名.</p>\n</li>\n<li><p>tar -rf all.tar *.gif</p>\n<p>  这条命令是将所有.gif的文件增加到all.tar的包里面去.-r是表示增</p>\n<p>  加文件的意思.</p>\n</li>\n<li><p>tar -uf all.tar logo.gif</p>\n<p>  更新原来all.tar中logo.gif文件,-u是表示更新文件的意思</p>\n</li>\n<li><p>tar -tf all.tar    </p>\n<p>  列出all.tar中的所有文件,-u表示更新文件的意思</p>\n</li>\n<li><p>tar -xf all.tar    </p>\n<p>  解出all.tar中的所有文件,-x是解开文件的意思</p>\n</li>\n</ul>\n<p>以上就是tar的最基本的用法,为了方便用户在打包解包的同时可以压缩或解压<br>文件,tar提供了一种特殊的功能.就是tar可以在打包或解包的同时调用其他的<br>压缩程序,比如调用gzip bzip2等.</p>\n<h2 id=\"1-tar调用gzip\"><a href=\"#1-tar调用gzip\" class=\"headerlink\" title=\"1)tar调用gzip\"></a>1)tar调用gzip</h2><p>gzip是GNU组织开发的一个压缩程序,.gz结尾的文件是gzip压缩的结果.与gzip相对</p>\n<p>的解压程序是gunzip.tar中使用-z这个参数来调用gzip</p>\n<ul>\n<li><h1 id=\"tar-czf-all-tar-gz-jpg\"><a href=\"#tar-czf-all-tar-gz-jpg\" class=\"headerlink\" title=\"tar -czf all.tar.gz *.jpg\"></a>tar -czf all.tar.gz *.jpg</h1></li>\n</ul>\n<p>将所有.jpg的文件打成一个tar包,并将其用gzip压缩,生成一个gzip压缩过的包,<br>包名为all.tar.gz</p>\n<ul>\n<li><h1 id=\"tar-xzf-all-tar-gz\"><a href=\"#tar-xzf-all-tar-gz\" class=\"headerlink\" title=\"tar -xzf all.tar.gz\"></a>tar -xzf all.tar.gz</h1></li>\n</ul>\n<p>解压包</p>\n<h2 id=\"2-tar调用bzip2\"><a href=\"#2-tar调用bzip2\" class=\"headerlink\" title=\"2) tar调用bzip2\"></a>2) tar调用bzip2</h2><p>bzip2是一个压缩能力更强的压缩程序,.bz2结尾的文件是bzip压缩的结果.</p>\n<p>与bzip相对的解压程序是bunzip2.tar中使用-j这个参数来调用gzip.</p>\n<ul>\n<li><h1 id=\"tar-cjf-all-tar-bz2-jpg\"><a href=\"#tar-cjf-all-tar-bz2-jpg\" class=\"headerlink\" title=\"tar -cjf all.tar.bz2 *.jpg\"></a>tar -cjf all.tar.bz2 *.jpg</h1></li>\n</ul>\n<p>这条命令是将所有.jpg的文件打成一个tar包,并且将其用bzip2压缩,生成一个<br>bzip2相对的压缩</p>\n"},{"title":"My New Post","date":"2018-04-20T02:02:54.000Z","_content":"","source":"_posts/My-New-Post.md","raw":"---\ntitle: My New Post\ndate: 2018-04-20 10:02:54\ntags:\n---\n","slug":"My-New-Post","published":1,"updated":"2018-05-05T02:10:21.445Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jvs000635fy901j2mqm","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Linux简介","date":"2018-04-24T08:19:03.000Z","_content":"\n\tLinux内核最初是由芬兰人李纳斯.托瓦兹(Linux Torvalds)在赫尔辛基上大学时出于个人爱好而编写的.\n\tLinux是一套免费使用和自由传播的类Unix操作系统.是一个基于POSIX和UNIX的多用户 多任务 支持多线\n\t程和多CPU的操作系统.\n\n\tLinux能运行主要的UNIX工具软件 应用程序和网络协议.它支持32位和64位硬件.Linux继承了Unix以网络\n\t为核心的设计思想,是一个性能稳定的多用户网络操作系统.\n\n## Linux的发行版本\n\n\tLinux的发行版本简单说就是讲Linux内核与应用软件做一个打包.\n\t目前市面上比较知名的发行版有:\n\t\n###\tUbuntu\n###\tReaHat\n###\tCentOS\n###\tDebian\n###\tFefora\n###\tSuSE\n###\tOpenSUSE\n###\tArch Linux\n###\tSolusOS\n\n## Linux 系统启动过程\n    \nLinux系统的启动的启动过程分为5个阶段\n\n* 内核的引导\n\n* 运行init\n\n* 系统初始化\n\n* 建立终端\n\n* 用户登录系统\n\n    init 程序的类型\n    \n    * SysV:init,CentOS5之前,配置文件: /etc/initab.\n    \n    * Upstart:init,CentOS6,配置文件: /etc/inittab,/etc/init/*.conf.\n    \n    * Systemd: systemd,CenOS 7配置文件: /user/lib/systemd/system  /etc/systemd/system\n    \n    \n## 内核引导\n\n当计算机打开电源后,首先是BIOS开机自检,按照BIOS中设置的启动设备(通常是硬盘)来启动.\n操作系统接管硬件以后,首先读入/boot目录下的内核文件\n\n操作系统 -----> boot --->\n\n## 运行init    \n\ninit进程是系统所有进程的起点,你可以把它比拟成系统所有进程的老祖宗,没有这个进程,系统\n中任何进程都不会启动.\ninit程序首先需要读取配置文件 /etc/inittab.\n\n操作系统 -----> boot ---> init进程 --->运行级别\n\nLinux系统有七个运行级别\n    \n   * 0 : 系统停机状态,系统默认运行级别不能设为0,否则不能正常启动\n   \n   * 1 : 单用户工作状态,root权限,用于系统维护,禁止远程登录\n   \n   * 2 : 多用户状态(没有NFS)\n   \n   * 3 : 完全的多用户状态,登录后进入控制台命令行模式\n   \n   * 4 : 系统未使用,保留\n   \n   * 5 : X11控制台,登录后进入图形GUI模式\n   \n   * 6 : 系统正常关闭并重启,默认运行级别不能设为6,否则不能正常启动\n   \n   \n## 系统初始化   \n\n在init的配置文件中有这么一行: si:sysinit:/etc/rc.d/rc.sysint 它调用执行了\n\n/etc/rc.d/rc.sysinit 它调用执行了/etc/rc.d/rc.sysinit,而rc.sysinit是一个bash\n\nshell 的脚本 ,它主要是完成一些系统初始化的工作,rc.sysinit是每一个运行级别都\n\n要首先运行的重要脚本.\n\n它主要完成的工作有:激活交换区,检查磁盘,加载硬件模块以及其他一些需要优先执行\n\n任务.\n\n15:5:wait:/etc/rc.d/rc 5\n\n这一行表示以5为参数运行/etc/rc.d/rc, /etc/rc.d/rc是一个shell脚本,它接收5作为参数\n\n,去执行/etc/rc.d/rc5.d/目录下的所有的rc启用脚本,/etc/rc.d/rc5.d/目录中的这些启动\n\n脚本实际上都是一些连接文件,而不是真正的rc启动脚本,真正的rc启动脚本实际上都是放在\n\n/etc/rc.d/init.d/目录下\n\n而这些rc启动脚本有着类似的用法,它们一般能接受start stop restart status等参数.\n\n/etc/rc.d/rc5.d/中的rc启动脚本通常是K或S开头的连接文件,用于以S开头的启动脚本\n\n,将以start参数来运行. 而如果发现存在相应的脚本也存在K打头的连接,而且已经处于运\n\n行状态了(以/var/lock/subsys/下的文件为标志),则将首先以stop为参数停止这些已经启动\n\n了的守护进程,然后再重新运行.\n\n这样做是为了保证当init改变运行级别时,所有相关的守护进程将重启.\n\n至于在每个运行级别中将运行哪些守护进程,用户可以通过chkconfig或setup中的\n\n\"System Services\"来自行设定.\n\n操作系统 ---> /boot ---> init进程 ---> 运行级别 ---> /etc/init.d\n\n\n## 建立终端\n\nrc执行完毕后,返回init.这时基本系统环境已经设置好了,各种守护进程也已经启动了.\n\ninit接下来会打开6个终端,以便用户登录系统.在inittab中的以下6行就是定义了6个终\n\n端:\n\n1:2345:respawn:/sbin/mingetty tty1\n\n2:2345:respawn:/sbin/mingetty tty2\n\n3:2345:respawn:/sbin/mingetty tty3\n\n4:2345:respawn:/sbin/mingetty tty4\n\n5:2345:respawn:/sbin/mingetty tty5\n\n6:2345:respawn:/sbin/mingetty tty6\n\n从上面可以看出在2 3 4 5的运行级别中都将以 respawn 方式运行mingetty程序能打开终端\n\n设置模式.同时它会显示一个文本登录界面,这个界面就是我们经常看到的登录界面,在这个等\n\n录界面中会提示用户输入用户名,而用户输入的用户名将作为参数传给login程序来验证用户的\n\n身份\n\n## 用户登录系统\n\n一般来说,用户的登录方式有三种:\n\n* 1 命令行登录\n\n* 2 ssh登录\n\n* 3 图形界面登录\n\n操作系统 --> /boot --> init进程 --> 运行级别 --> /etc/init.d --> 用户登录\n\n对于运行级别为5的图形方式用户来说,他们的登录是通过一个图形化的登录界面.登录\n\n成功后可以直接进入 KDE 或 Gnome 等窗口管理器 \n\n而本文主要讲的是文本登录:当我们看到mingetty的登录界面时,我们就可以输入用户名\n\n和密码来登录系统了.\n\nLinux的账号验证程序是login,login会接收mingetty传来的用户名作为用户名参数.\n\n然后login会对用户名进行分析:如果用户名不是root,且存在/etc/nologin文件,login\n\n将输出nologin文件的内容,然后退出.\n\n这通常用来系统维护时防止非root用户登录.只有/etc/securetty中登记了的终端才允许\n\nroot用户登录,如果不存在这个文件,则root用户可以在任何终端上登录.\n\n/etc/usetty文件用于对用户作出附加访问限制,如果不存在这个文件,则没有其他限制\n\n## 图形模式与文字模式的切换方式\n\nLinux预设提供了六个命令 窗口终端机让我们来登录.\n\n默认我们登录的就是第一个窗口,也就是tty1,这六个窗口分别为 tt1,tt2,tt3...tt6,\n你可以按下\n\nCtrl + Alt + F1 ~ F6\n\n来切换它们\n\n如果你安装了图形界面,默认情况下是进入图形界面的,此时你就可以按Ctrl+Alt+F1~F6来\n进入其中一个命令窗口界面.当你进入命令窗口界面后再返回图形界面只要按下\n\nCtrl + Alt + F7就回来了\n\n如果你用的vmware虚拟机,命令窗口切换的快捷键位Alt+Space+F1~F6.如果你在图形界面下\n\n请按Alt+Shift+Ctrl+F1~F6切换至命令窗口.\n\n操作系统 --> /boot --> init进程 --> 运行级别 --> /etc/init.d \n                                                        |\n                                                        |\n                                       login shell <--用户登录\n\n## Linux 关机\n\n在Linux领域内大多用再服务器上,很少遇到关机的操作,毕竟服务器上跑一个服务时永无止境的,\n除非特殊情况下,不得已才会关机.\n\n正确的关机流程为 : sync > shutdown > reboot > halt\n\n关机指令为 : shutdown,你可以man shutdown来看一下邦之文档.\n\n* sync 将数据由内存同步到硬盘中\n\n* shutdown 关机指令,你可以man shutdown来看一文档\n\n* shutdown -h 10  10分钟后关机\n\n* shutdown -h now 立马关机\n\n* shutdown -h 20:25 系统会在今天20:25关机\n\n* shutdown -h +10 十分钟后关机\n\n* shutdown -r now 立马重启\n\n* shutdown -r +10 十分钟后重启\n\n* reboot 重启,等同于 shutdown -r now\n\n* halt 关闭系统,等同于 shutdown -h now 和 poweroff\n\n最后总结一下，不管是重启系统还是关闭系统，首先要运行 sync 命令，把内存中的数据写到磁盘中。\n关机的命令有 shutdown –h now halt poweroff 和 init 0 , 重启系统的命令有 shutdown –r now reboot init 6。\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/Linux简介.md","raw":"---\ntitle: Linux简介\ndate: 2018-04-24 16:19:03\ntags:\n---\n\n\tLinux内核最初是由芬兰人李纳斯.托瓦兹(Linux Torvalds)在赫尔辛基上大学时出于个人爱好而编写的.\n\tLinux是一套免费使用和自由传播的类Unix操作系统.是一个基于POSIX和UNIX的多用户 多任务 支持多线\n\t程和多CPU的操作系统.\n\n\tLinux能运行主要的UNIX工具软件 应用程序和网络协议.它支持32位和64位硬件.Linux继承了Unix以网络\n\t为核心的设计思想,是一个性能稳定的多用户网络操作系统.\n\n## Linux的发行版本\n\n\tLinux的发行版本简单说就是讲Linux内核与应用软件做一个打包.\n\t目前市面上比较知名的发行版有:\n\t\n###\tUbuntu\n###\tReaHat\n###\tCentOS\n###\tDebian\n###\tFefora\n###\tSuSE\n###\tOpenSUSE\n###\tArch Linux\n###\tSolusOS\n\n## Linux 系统启动过程\n    \nLinux系统的启动的启动过程分为5个阶段\n\n* 内核的引导\n\n* 运行init\n\n* 系统初始化\n\n* 建立终端\n\n* 用户登录系统\n\n    init 程序的类型\n    \n    * SysV:init,CentOS5之前,配置文件: /etc/initab.\n    \n    * Upstart:init,CentOS6,配置文件: /etc/inittab,/etc/init/*.conf.\n    \n    * Systemd: systemd,CenOS 7配置文件: /user/lib/systemd/system  /etc/systemd/system\n    \n    \n## 内核引导\n\n当计算机打开电源后,首先是BIOS开机自检,按照BIOS中设置的启动设备(通常是硬盘)来启动.\n操作系统接管硬件以后,首先读入/boot目录下的内核文件\n\n操作系统 -----> boot --->\n\n## 运行init    \n\ninit进程是系统所有进程的起点,你可以把它比拟成系统所有进程的老祖宗,没有这个进程,系统\n中任何进程都不会启动.\ninit程序首先需要读取配置文件 /etc/inittab.\n\n操作系统 -----> boot ---> init进程 --->运行级别\n\nLinux系统有七个运行级别\n    \n   * 0 : 系统停机状态,系统默认运行级别不能设为0,否则不能正常启动\n   \n   * 1 : 单用户工作状态,root权限,用于系统维护,禁止远程登录\n   \n   * 2 : 多用户状态(没有NFS)\n   \n   * 3 : 完全的多用户状态,登录后进入控制台命令行模式\n   \n   * 4 : 系统未使用,保留\n   \n   * 5 : X11控制台,登录后进入图形GUI模式\n   \n   * 6 : 系统正常关闭并重启,默认运行级别不能设为6,否则不能正常启动\n   \n   \n## 系统初始化   \n\n在init的配置文件中有这么一行: si:sysinit:/etc/rc.d/rc.sysint 它调用执行了\n\n/etc/rc.d/rc.sysinit 它调用执行了/etc/rc.d/rc.sysinit,而rc.sysinit是一个bash\n\nshell 的脚本 ,它主要是完成一些系统初始化的工作,rc.sysinit是每一个运行级别都\n\n要首先运行的重要脚本.\n\n它主要完成的工作有:激活交换区,检查磁盘,加载硬件模块以及其他一些需要优先执行\n\n任务.\n\n15:5:wait:/etc/rc.d/rc 5\n\n这一行表示以5为参数运行/etc/rc.d/rc, /etc/rc.d/rc是一个shell脚本,它接收5作为参数\n\n,去执行/etc/rc.d/rc5.d/目录下的所有的rc启用脚本,/etc/rc.d/rc5.d/目录中的这些启动\n\n脚本实际上都是一些连接文件,而不是真正的rc启动脚本,真正的rc启动脚本实际上都是放在\n\n/etc/rc.d/init.d/目录下\n\n而这些rc启动脚本有着类似的用法,它们一般能接受start stop restart status等参数.\n\n/etc/rc.d/rc5.d/中的rc启动脚本通常是K或S开头的连接文件,用于以S开头的启动脚本\n\n,将以start参数来运行. 而如果发现存在相应的脚本也存在K打头的连接,而且已经处于运\n\n行状态了(以/var/lock/subsys/下的文件为标志),则将首先以stop为参数停止这些已经启动\n\n了的守护进程,然后再重新运行.\n\n这样做是为了保证当init改变运行级别时,所有相关的守护进程将重启.\n\n至于在每个运行级别中将运行哪些守护进程,用户可以通过chkconfig或setup中的\n\n\"System Services\"来自行设定.\n\n操作系统 ---> /boot ---> init进程 ---> 运行级别 ---> /etc/init.d\n\n\n## 建立终端\n\nrc执行完毕后,返回init.这时基本系统环境已经设置好了,各种守护进程也已经启动了.\n\ninit接下来会打开6个终端,以便用户登录系统.在inittab中的以下6行就是定义了6个终\n\n端:\n\n1:2345:respawn:/sbin/mingetty tty1\n\n2:2345:respawn:/sbin/mingetty tty2\n\n3:2345:respawn:/sbin/mingetty tty3\n\n4:2345:respawn:/sbin/mingetty tty4\n\n5:2345:respawn:/sbin/mingetty tty5\n\n6:2345:respawn:/sbin/mingetty tty6\n\n从上面可以看出在2 3 4 5的运行级别中都将以 respawn 方式运行mingetty程序能打开终端\n\n设置模式.同时它会显示一个文本登录界面,这个界面就是我们经常看到的登录界面,在这个等\n\n录界面中会提示用户输入用户名,而用户输入的用户名将作为参数传给login程序来验证用户的\n\n身份\n\n## 用户登录系统\n\n一般来说,用户的登录方式有三种:\n\n* 1 命令行登录\n\n* 2 ssh登录\n\n* 3 图形界面登录\n\n操作系统 --> /boot --> init进程 --> 运行级别 --> /etc/init.d --> 用户登录\n\n对于运行级别为5的图形方式用户来说,他们的登录是通过一个图形化的登录界面.登录\n\n成功后可以直接进入 KDE 或 Gnome 等窗口管理器 \n\n而本文主要讲的是文本登录:当我们看到mingetty的登录界面时,我们就可以输入用户名\n\n和密码来登录系统了.\n\nLinux的账号验证程序是login,login会接收mingetty传来的用户名作为用户名参数.\n\n然后login会对用户名进行分析:如果用户名不是root,且存在/etc/nologin文件,login\n\n将输出nologin文件的内容,然后退出.\n\n这通常用来系统维护时防止非root用户登录.只有/etc/securetty中登记了的终端才允许\n\nroot用户登录,如果不存在这个文件,则root用户可以在任何终端上登录.\n\n/etc/usetty文件用于对用户作出附加访问限制,如果不存在这个文件,则没有其他限制\n\n## 图形模式与文字模式的切换方式\n\nLinux预设提供了六个命令 窗口终端机让我们来登录.\n\n默认我们登录的就是第一个窗口,也就是tty1,这六个窗口分别为 tt1,tt2,tt3...tt6,\n你可以按下\n\nCtrl + Alt + F1 ~ F6\n\n来切换它们\n\n如果你安装了图形界面,默认情况下是进入图形界面的,此时你就可以按Ctrl+Alt+F1~F6来\n进入其中一个命令窗口界面.当你进入命令窗口界面后再返回图形界面只要按下\n\nCtrl + Alt + F7就回来了\n\n如果你用的vmware虚拟机,命令窗口切换的快捷键位Alt+Space+F1~F6.如果你在图形界面下\n\n请按Alt+Shift+Ctrl+F1~F6切换至命令窗口.\n\n操作系统 --> /boot --> init进程 --> 运行级别 --> /etc/init.d \n                                                        |\n                                                        |\n                                       login shell <--用户登录\n\n## Linux 关机\n\n在Linux领域内大多用再服务器上,很少遇到关机的操作,毕竟服务器上跑一个服务时永无止境的,\n除非特殊情况下,不得已才会关机.\n\n正确的关机流程为 : sync > shutdown > reboot > halt\n\n关机指令为 : shutdown,你可以man shutdown来看一下邦之文档.\n\n* sync 将数据由内存同步到硬盘中\n\n* shutdown 关机指令,你可以man shutdown来看一文档\n\n* shutdown -h 10  10分钟后关机\n\n* shutdown -h now 立马关机\n\n* shutdown -h 20:25 系统会在今天20:25关机\n\n* shutdown -h +10 十分钟后关机\n\n* shutdown -r now 立马重启\n\n* shutdown -r +10 十分钟后重启\n\n* reboot 重启,等同于 shutdown -r now\n\n* halt 关闭系统,等同于 shutdown -h now 和 poweroff\n\n最后总结一下，不管是重启系统还是关闭系统，首先要运行 sync 命令，把内存中的数据写到磁盘中。\n关机的命令有 shutdown –h now halt poweroff 和 init 0 , 重启系统的命令有 shutdown –r now reboot init 6。\n\n\n\n\n\n\n\n\n\n\n","slug":"Linux简介","published":1,"updated":"2018-05-05T02:10:21.445Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jvt000735fyv6386cfn","content":"<pre><code>Linux内核最初是由芬兰人李纳斯.托瓦兹(Linux Torvalds)在赫尔辛基上大学时出于个人爱好而编写的.\nLinux是一套免费使用和自由传播的类Unix操作系统.是一个基于POSIX和UNIX的多用户 多任务 支持多线\n程和多CPU的操作系统.\n\nLinux能运行主要的UNIX工具软件 应用程序和网络协议.它支持32位和64位硬件.Linux继承了Unix以网络\n为核心的设计思想,是一个性能稳定的多用户网络操作系统.\n</code></pre><h2 id=\"Linux的发行版本\"><a href=\"#Linux的发行版本\" class=\"headerlink\" title=\"Linux的发行版本\"></a>Linux的发行版本</h2><pre><code>Linux的发行版本简单说就是讲Linux内核与应用软件做一个打包.\n目前市面上比较知名的发行版有:\n</code></pre><h3 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h3><h3 id=\"ReaHat\"><a href=\"#ReaHat\" class=\"headerlink\" title=\"ReaHat\"></a>ReaHat</h3><h3 id=\"CentOS\"><a href=\"#CentOS\" class=\"headerlink\" title=\"CentOS\"></a>CentOS</h3><h3 id=\"Debian\"><a href=\"#Debian\" class=\"headerlink\" title=\"Debian\"></a>Debian</h3><h3 id=\"Fefora\"><a href=\"#Fefora\" class=\"headerlink\" title=\"Fefora\"></a>Fefora</h3><h3 id=\"SuSE\"><a href=\"#SuSE\" class=\"headerlink\" title=\"SuSE\"></a>SuSE</h3><h3 id=\"OpenSUSE\"><a href=\"#OpenSUSE\" class=\"headerlink\" title=\"OpenSUSE\"></a>OpenSUSE</h3><h3 id=\"Arch-Linux\"><a href=\"#Arch-Linux\" class=\"headerlink\" title=\"Arch Linux\"></a>Arch Linux</h3><h3 id=\"SolusOS\"><a href=\"#SolusOS\" class=\"headerlink\" title=\"SolusOS\"></a>SolusOS</h3><h2 id=\"Linux-系统启动过程\"><a href=\"#Linux-系统启动过程\" class=\"headerlink\" title=\"Linux 系统启动过程\"></a>Linux 系统启动过程</h2><p>Linux系统的启动的启动过程分为5个阶段</p>\n<ul>\n<li><p>内核的引导</p>\n</li>\n<li><p>运行init</p>\n</li>\n<li><p>系统初始化</p>\n</li>\n<li><p>建立终端</p>\n</li>\n<li><p>用户登录系统</p>\n<p>  init 程序的类型</p>\n<ul>\n<li><p>SysV:init,CentOS5之前,配置文件: /etc/initab.</p>\n</li>\n<li><p>Upstart:init,CentOS6,配置文件: /etc/inittab,/etc/init/*.conf.</p>\n</li>\n<li><p>Systemd: systemd,CenOS 7配置文件: /user/lib/systemd/system  /etc/systemd/system</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"内核引导\"><a href=\"#内核引导\" class=\"headerlink\" title=\"内核引导\"></a>内核引导</h2><p>当计算机打开电源后,首先是BIOS开机自检,按照BIOS中设置的启动设备(通常是硬盘)来启动.<br>操作系统接管硬件以后,首先读入/boot目录下的内核文件</p>\n<p>操作系统 —–&gt; boot —&gt;</p>\n<h2 id=\"运行init\"><a href=\"#运行init\" class=\"headerlink\" title=\"运行init\"></a>运行init</h2><p>init进程是系统所有进程的起点,你可以把它比拟成系统所有进程的老祖宗,没有这个进程,系统<br>中任何进程都不会启动.<br>init程序首先需要读取配置文件 /etc/inittab.</p>\n<p>操作系统 —–&gt; boot —&gt; init进程 —&gt;运行级别</p>\n<p>Linux系统有七个运行级别</p>\n<ul>\n<li><p>0 : 系统停机状态,系统默认运行级别不能设为0,否则不能正常启动</p>\n</li>\n<li><p>1 : 单用户工作状态,root权限,用于系统维护,禁止远程登录</p>\n</li>\n<li><p>2 : 多用户状态(没有NFS)</p>\n</li>\n<li><p>3 : 完全的多用户状态,登录后进入控制台命令行模式</p>\n</li>\n<li><p>4 : 系统未使用,保留</p>\n</li>\n<li><p>5 : X11控制台,登录后进入图形GUI模式</p>\n</li>\n<li><p>6 : 系统正常关闭并重启,默认运行级别不能设为6,否则不能正常启动</p>\n</li>\n</ul>\n<h2 id=\"系统初始化\"><a href=\"#系统初始化\" class=\"headerlink\" title=\"系统初始化\"></a>系统初始化</h2><p>在init的配置文件中有这么一行: si:sysinit:/etc/rc.d/rc.sysint 它调用执行了</p>\n<p>/etc/rc.d/rc.sysinit 它调用执行了/etc/rc.d/rc.sysinit,而rc.sysinit是一个bash</p>\n<p>shell 的脚本 ,它主要是完成一些系统初始化的工作,rc.sysinit是每一个运行级别都</p>\n<p>要首先运行的重要脚本.</p>\n<p>它主要完成的工作有:激活交换区,检查磁盘,加载硬件模块以及其他一些需要优先执行</p>\n<p>任务.</p>\n<p>15:5:wait:/etc/rc.d/rc 5</p>\n<p>这一行表示以5为参数运行/etc/rc.d/rc, /etc/rc.d/rc是一个shell脚本,它接收5作为参数</p>\n<p>,去执行/etc/rc.d/rc5.d/目录下的所有的rc启用脚本,/etc/rc.d/rc5.d/目录中的这些启动</p>\n<p>脚本实际上都是一些连接文件,而不是真正的rc启动脚本,真正的rc启动脚本实际上都是放在</p>\n<p>/etc/rc.d/init.d/目录下</p>\n<p>而这些rc启动脚本有着类似的用法,它们一般能接受start stop restart status等参数.</p>\n<p>/etc/rc.d/rc5.d/中的rc启动脚本通常是K或S开头的连接文件,用于以S开头的启动脚本</p>\n<p>,将以start参数来运行. 而如果发现存在相应的脚本也存在K打头的连接,而且已经处于运</p>\n<p>行状态了(以/var/lock/subsys/下的文件为标志),则将首先以stop为参数停止这些已经启动</p>\n<p>了的守护进程,然后再重新运行.</p>\n<p>这样做是为了保证当init改变运行级别时,所有相关的守护进程将重启.</p>\n<p>至于在每个运行级别中将运行哪些守护进程,用户可以通过chkconfig或setup中的</p>\n<p>“System Services”来自行设定.</p>\n<p>操作系统 —&gt; /boot —&gt; init进程 —&gt; 运行级别 —&gt; /etc/init.d</p>\n<h2 id=\"建立终端\"><a href=\"#建立终端\" class=\"headerlink\" title=\"建立终端\"></a>建立终端</h2><p>rc执行完毕后,返回init.这时基本系统环境已经设置好了,各种守护进程也已经启动了.</p>\n<p>init接下来会打开6个终端,以便用户登录系统.在inittab中的以下6行就是定义了6个终</p>\n<p>端:</p>\n<p>1:2345:respawn:/sbin/mingetty tty1</p>\n<p>2:2345:respawn:/sbin/mingetty tty2</p>\n<p>3:2345:respawn:/sbin/mingetty tty3</p>\n<p>4:2345:respawn:/sbin/mingetty tty4</p>\n<p>5:2345:respawn:/sbin/mingetty tty5</p>\n<p>6:2345:respawn:/sbin/mingetty tty6</p>\n<p>从上面可以看出在2 3 4 5的运行级别中都将以 respawn 方式运行mingetty程序能打开终端</p>\n<p>设置模式.同时它会显示一个文本登录界面,这个界面就是我们经常看到的登录界面,在这个等</p>\n<p>录界面中会提示用户输入用户名,而用户输入的用户名将作为参数传给login程序来验证用户的</p>\n<p>身份</p>\n<h2 id=\"用户登录系统\"><a href=\"#用户登录系统\" class=\"headerlink\" title=\"用户登录系统\"></a>用户登录系统</h2><p>一般来说,用户的登录方式有三种:</p>\n<ul>\n<li><p>1 命令行登录</p>\n</li>\n<li><p>2 ssh登录</p>\n</li>\n<li><p>3 图形界面登录</p>\n</li>\n</ul>\n<p>操作系统 –&gt; /boot –&gt; init进程 –&gt; 运行级别 –&gt; /etc/init.d –&gt; 用户登录</p>\n<p>对于运行级别为5的图形方式用户来说,他们的登录是通过一个图形化的登录界面.登录</p>\n<p>成功后可以直接进入 KDE 或 Gnome 等窗口管理器 </p>\n<p>而本文主要讲的是文本登录:当我们看到mingetty的登录界面时,我们就可以输入用户名</p>\n<p>和密码来登录系统了.</p>\n<p>Linux的账号验证程序是login,login会接收mingetty传来的用户名作为用户名参数.</p>\n<p>然后login会对用户名进行分析:如果用户名不是root,且存在/etc/nologin文件,login</p>\n<p>将输出nologin文件的内容,然后退出.</p>\n<p>这通常用来系统维护时防止非root用户登录.只有/etc/securetty中登记了的终端才允许</p>\n<p>root用户登录,如果不存在这个文件,则root用户可以在任何终端上登录.</p>\n<p>/etc/usetty文件用于对用户作出附加访问限制,如果不存在这个文件,则没有其他限制</p>\n<h2 id=\"图形模式与文字模式的切换方式\"><a href=\"#图形模式与文字模式的切换方式\" class=\"headerlink\" title=\"图形模式与文字模式的切换方式\"></a>图形模式与文字模式的切换方式</h2><p>Linux预设提供了六个命令 窗口终端机让我们来登录.</p>\n<p>默认我们登录的就是第一个窗口,也就是tty1,这六个窗口分别为 tt1,tt2,tt3…tt6,<br>你可以按下</p>\n<p>Ctrl + Alt + F1 ~ F6</p>\n<p>来切换它们</p>\n<p>如果你安装了图形界面,默认情况下是进入图形界面的,此时你就可以按Ctrl+Alt+F1~F6来<br>进入其中一个命令窗口界面.当你进入命令窗口界面后再返回图形界面只要按下</p>\n<p>Ctrl + Alt + F7就回来了</p>\n<p>如果你用的vmware虚拟机,命令窗口切换的快捷键位Alt+Space+F1~F6.如果你在图形界面下</p>\n<p>请按Alt+Shift+Ctrl+F1~F6切换至命令窗口.</p>\n<p>操作系统 –&gt; /boot –&gt; init进程 –&gt; 运行级别 –&gt; /etc/init.d<br>                                                        |<br>                                                        |<br>                                       login shell &lt;–用户登录</p>\n<h2 id=\"Linux-关机\"><a href=\"#Linux-关机\" class=\"headerlink\" title=\"Linux 关机\"></a>Linux 关机</h2><p>在Linux领域内大多用再服务器上,很少遇到关机的操作,毕竟服务器上跑一个服务时永无止境的,<br>除非特殊情况下,不得已才会关机.</p>\n<p>正确的关机流程为 : sync &gt; shutdown &gt; reboot &gt; halt</p>\n<p>关机指令为 : shutdown,你可以man shutdown来看一下邦之文档.</p>\n<ul>\n<li><p>sync 将数据由内存同步到硬盘中</p>\n</li>\n<li><p>shutdown 关机指令,你可以man shutdown来看一文档</p>\n</li>\n<li><p>shutdown -h 10  10分钟后关机</p>\n</li>\n<li><p>shutdown -h now 立马关机</p>\n</li>\n<li><p>shutdown -h 20:25 系统会在今天20:25关机</p>\n</li>\n<li><p>shutdown -h +10 十分钟后关机</p>\n</li>\n<li><p>shutdown -r now 立马重启</p>\n</li>\n<li><p>shutdown -r +10 十分钟后重启</p>\n</li>\n<li><p>reboot 重启,等同于 shutdown -r now</p>\n</li>\n<li><p>halt 关闭系统,等同于 shutdown -h now 和 poweroff</p>\n</li>\n</ul>\n<p>最后总结一下，不管是重启系统还是关闭系统，首先要运行 sync 命令，把内存中的数据写到磁盘中。<br>关机的命令有 shutdown –h now halt poweroff 和 init 0 , 重启系统的命令有 shutdown –r now reboot init 6。</p>\n","site":{"data":{}},"excerpt":"","more":"<pre><code>Linux内核最初是由芬兰人李纳斯.托瓦兹(Linux Torvalds)在赫尔辛基上大学时出于个人爱好而编写的.\nLinux是一套免费使用和自由传播的类Unix操作系统.是一个基于POSIX和UNIX的多用户 多任务 支持多线\n程和多CPU的操作系统.\n\nLinux能运行主要的UNIX工具软件 应用程序和网络协议.它支持32位和64位硬件.Linux继承了Unix以网络\n为核心的设计思想,是一个性能稳定的多用户网络操作系统.\n</code></pre><h2 id=\"Linux的发行版本\"><a href=\"#Linux的发行版本\" class=\"headerlink\" title=\"Linux的发行版本\"></a>Linux的发行版本</h2><pre><code>Linux的发行版本简单说就是讲Linux内核与应用软件做一个打包.\n目前市面上比较知名的发行版有:\n</code></pre><h3 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h3><h3 id=\"ReaHat\"><a href=\"#ReaHat\" class=\"headerlink\" title=\"ReaHat\"></a>ReaHat</h3><h3 id=\"CentOS\"><a href=\"#CentOS\" class=\"headerlink\" title=\"CentOS\"></a>CentOS</h3><h3 id=\"Debian\"><a href=\"#Debian\" class=\"headerlink\" title=\"Debian\"></a>Debian</h3><h3 id=\"Fefora\"><a href=\"#Fefora\" class=\"headerlink\" title=\"Fefora\"></a>Fefora</h3><h3 id=\"SuSE\"><a href=\"#SuSE\" class=\"headerlink\" title=\"SuSE\"></a>SuSE</h3><h3 id=\"OpenSUSE\"><a href=\"#OpenSUSE\" class=\"headerlink\" title=\"OpenSUSE\"></a>OpenSUSE</h3><h3 id=\"Arch-Linux\"><a href=\"#Arch-Linux\" class=\"headerlink\" title=\"Arch Linux\"></a>Arch Linux</h3><h3 id=\"SolusOS\"><a href=\"#SolusOS\" class=\"headerlink\" title=\"SolusOS\"></a>SolusOS</h3><h2 id=\"Linux-系统启动过程\"><a href=\"#Linux-系统启动过程\" class=\"headerlink\" title=\"Linux 系统启动过程\"></a>Linux 系统启动过程</h2><p>Linux系统的启动的启动过程分为5个阶段</p>\n<ul>\n<li><p>内核的引导</p>\n</li>\n<li><p>运行init</p>\n</li>\n<li><p>系统初始化</p>\n</li>\n<li><p>建立终端</p>\n</li>\n<li><p>用户登录系统</p>\n<p>  init 程序的类型</p>\n<ul>\n<li><p>SysV:init,CentOS5之前,配置文件: /etc/initab.</p>\n</li>\n<li><p>Upstart:init,CentOS6,配置文件: /etc/inittab,/etc/init/*.conf.</p>\n</li>\n<li><p>Systemd: systemd,CenOS 7配置文件: /user/lib/systemd/system  /etc/systemd/system</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"内核引导\"><a href=\"#内核引导\" class=\"headerlink\" title=\"内核引导\"></a>内核引导</h2><p>当计算机打开电源后,首先是BIOS开机自检,按照BIOS中设置的启动设备(通常是硬盘)来启动.<br>操作系统接管硬件以后,首先读入/boot目录下的内核文件</p>\n<p>操作系统 —–&gt; boot —&gt;</p>\n<h2 id=\"运行init\"><a href=\"#运行init\" class=\"headerlink\" title=\"运行init\"></a>运行init</h2><p>init进程是系统所有进程的起点,你可以把它比拟成系统所有进程的老祖宗,没有这个进程,系统<br>中任何进程都不会启动.<br>init程序首先需要读取配置文件 /etc/inittab.</p>\n<p>操作系统 —–&gt; boot —&gt; init进程 —&gt;运行级别</p>\n<p>Linux系统有七个运行级别</p>\n<ul>\n<li><p>0 : 系统停机状态,系统默认运行级别不能设为0,否则不能正常启动</p>\n</li>\n<li><p>1 : 单用户工作状态,root权限,用于系统维护,禁止远程登录</p>\n</li>\n<li><p>2 : 多用户状态(没有NFS)</p>\n</li>\n<li><p>3 : 完全的多用户状态,登录后进入控制台命令行模式</p>\n</li>\n<li><p>4 : 系统未使用,保留</p>\n</li>\n<li><p>5 : X11控制台,登录后进入图形GUI模式</p>\n</li>\n<li><p>6 : 系统正常关闭并重启,默认运行级别不能设为6,否则不能正常启动</p>\n</li>\n</ul>\n<h2 id=\"系统初始化\"><a href=\"#系统初始化\" class=\"headerlink\" title=\"系统初始化\"></a>系统初始化</h2><p>在init的配置文件中有这么一行: si:sysinit:/etc/rc.d/rc.sysint 它调用执行了</p>\n<p>/etc/rc.d/rc.sysinit 它调用执行了/etc/rc.d/rc.sysinit,而rc.sysinit是一个bash</p>\n<p>shell 的脚本 ,它主要是完成一些系统初始化的工作,rc.sysinit是每一个运行级别都</p>\n<p>要首先运行的重要脚本.</p>\n<p>它主要完成的工作有:激活交换区,检查磁盘,加载硬件模块以及其他一些需要优先执行</p>\n<p>任务.</p>\n<p>15:5:wait:/etc/rc.d/rc 5</p>\n<p>这一行表示以5为参数运行/etc/rc.d/rc, /etc/rc.d/rc是一个shell脚本,它接收5作为参数</p>\n<p>,去执行/etc/rc.d/rc5.d/目录下的所有的rc启用脚本,/etc/rc.d/rc5.d/目录中的这些启动</p>\n<p>脚本实际上都是一些连接文件,而不是真正的rc启动脚本,真正的rc启动脚本实际上都是放在</p>\n<p>/etc/rc.d/init.d/目录下</p>\n<p>而这些rc启动脚本有着类似的用法,它们一般能接受start stop restart status等参数.</p>\n<p>/etc/rc.d/rc5.d/中的rc启动脚本通常是K或S开头的连接文件,用于以S开头的启动脚本</p>\n<p>,将以start参数来运行. 而如果发现存在相应的脚本也存在K打头的连接,而且已经处于运</p>\n<p>行状态了(以/var/lock/subsys/下的文件为标志),则将首先以stop为参数停止这些已经启动</p>\n<p>了的守护进程,然后再重新运行.</p>\n<p>这样做是为了保证当init改变运行级别时,所有相关的守护进程将重启.</p>\n<p>至于在每个运行级别中将运行哪些守护进程,用户可以通过chkconfig或setup中的</p>\n<p>“System Services”来自行设定.</p>\n<p>操作系统 —&gt; /boot —&gt; init进程 —&gt; 运行级别 —&gt; /etc/init.d</p>\n<h2 id=\"建立终端\"><a href=\"#建立终端\" class=\"headerlink\" title=\"建立终端\"></a>建立终端</h2><p>rc执行完毕后,返回init.这时基本系统环境已经设置好了,各种守护进程也已经启动了.</p>\n<p>init接下来会打开6个终端,以便用户登录系统.在inittab中的以下6行就是定义了6个终</p>\n<p>端:</p>\n<p>1:2345:respawn:/sbin/mingetty tty1</p>\n<p>2:2345:respawn:/sbin/mingetty tty2</p>\n<p>3:2345:respawn:/sbin/mingetty tty3</p>\n<p>4:2345:respawn:/sbin/mingetty tty4</p>\n<p>5:2345:respawn:/sbin/mingetty tty5</p>\n<p>6:2345:respawn:/sbin/mingetty tty6</p>\n<p>从上面可以看出在2 3 4 5的运行级别中都将以 respawn 方式运行mingetty程序能打开终端</p>\n<p>设置模式.同时它会显示一个文本登录界面,这个界面就是我们经常看到的登录界面,在这个等</p>\n<p>录界面中会提示用户输入用户名,而用户输入的用户名将作为参数传给login程序来验证用户的</p>\n<p>身份</p>\n<h2 id=\"用户登录系统\"><a href=\"#用户登录系统\" class=\"headerlink\" title=\"用户登录系统\"></a>用户登录系统</h2><p>一般来说,用户的登录方式有三种:</p>\n<ul>\n<li><p>1 命令行登录</p>\n</li>\n<li><p>2 ssh登录</p>\n</li>\n<li><p>3 图形界面登录</p>\n</li>\n</ul>\n<p>操作系统 –&gt; /boot –&gt; init进程 –&gt; 运行级别 –&gt; /etc/init.d –&gt; 用户登录</p>\n<p>对于运行级别为5的图形方式用户来说,他们的登录是通过一个图形化的登录界面.登录</p>\n<p>成功后可以直接进入 KDE 或 Gnome 等窗口管理器 </p>\n<p>而本文主要讲的是文本登录:当我们看到mingetty的登录界面时,我们就可以输入用户名</p>\n<p>和密码来登录系统了.</p>\n<p>Linux的账号验证程序是login,login会接收mingetty传来的用户名作为用户名参数.</p>\n<p>然后login会对用户名进行分析:如果用户名不是root,且存在/etc/nologin文件,login</p>\n<p>将输出nologin文件的内容,然后退出.</p>\n<p>这通常用来系统维护时防止非root用户登录.只有/etc/securetty中登记了的终端才允许</p>\n<p>root用户登录,如果不存在这个文件,则root用户可以在任何终端上登录.</p>\n<p>/etc/usetty文件用于对用户作出附加访问限制,如果不存在这个文件,则没有其他限制</p>\n<h2 id=\"图形模式与文字模式的切换方式\"><a href=\"#图形模式与文字模式的切换方式\" class=\"headerlink\" title=\"图形模式与文字模式的切换方式\"></a>图形模式与文字模式的切换方式</h2><p>Linux预设提供了六个命令 窗口终端机让我们来登录.</p>\n<p>默认我们登录的就是第一个窗口,也就是tty1,这六个窗口分别为 tt1,tt2,tt3…tt6,<br>你可以按下</p>\n<p>Ctrl + Alt + F1 ~ F6</p>\n<p>来切换它们</p>\n<p>如果你安装了图形界面,默认情况下是进入图形界面的,此时你就可以按Ctrl+Alt+F1~F6来<br>进入其中一个命令窗口界面.当你进入命令窗口界面后再返回图形界面只要按下</p>\n<p>Ctrl + Alt + F7就回来了</p>\n<p>如果你用的vmware虚拟机,命令窗口切换的快捷键位Alt+Space+F1~F6.如果你在图形界面下</p>\n<p>请按Alt+Shift+Ctrl+F1~F6切换至命令窗口.</p>\n<p>操作系统 –&gt; /boot –&gt; init进程 –&gt; 运行级别 –&gt; /etc/init.d<br>                                                        |<br>                                                        |<br>                                       login shell &lt;–用户登录</p>\n<h2 id=\"Linux-关机\"><a href=\"#Linux-关机\" class=\"headerlink\" title=\"Linux 关机\"></a>Linux 关机</h2><p>在Linux领域内大多用再服务器上,很少遇到关机的操作,毕竟服务器上跑一个服务时永无止境的,<br>除非特殊情况下,不得已才会关机.</p>\n<p>正确的关机流程为 : sync &gt; shutdown &gt; reboot &gt; halt</p>\n<p>关机指令为 : shutdown,你可以man shutdown来看一下邦之文档.</p>\n<ul>\n<li><p>sync 将数据由内存同步到硬盘中</p>\n</li>\n<li><p>shutdown 关机指令,你可以man shutdown来看一文档</p>\n</li>\n<li><p>shutdown -h 10  10分钟后关机</p>\n</li>\n<li><p>shutdown -h now 立马关机</p>\n</li>\n<li><p>shutdown -h 20:25 系统会在今天20:25关机</p>\n</li>\n<li><p>shutdown -h +10 十分钟后关机</p>\n</li>\n<li><p>shutdown -r now 立马重启</p>\n</li>\n<li><p>shutdown -r +10 十分钟后重启</p>\n</li>\n<li><p>reboot 重启,等同于 shutdown -r now</p>\n</li>\n<li><p>halt 关闭系统,等同于 shutdown -h now 和 poweroff</p>\n</li>\n</ul>\n<p>最后总结一下，不管是重启系统还是关闭系统，首先要运行 sync 命令，把内存中的数据写到磁盘中。<br>关机的命令有 shutdown –h now halt poweroff 和 init 0 , 重启系统的命令有 shutdown –r now reboot init 6。</p>\n"},{"title":"LeetCode","date":"2018-05-31T01:49:47.000Z","_content":"\n## 两数之和\n\n给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。\n\n你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。\n\n示例:\n\n\n    给定 nums = [2, 7, 11, 15], target = 9\n    \n    因为 nums[0] + nums[1] = 2 + 7 = 9\n    所以返回 [0, 1]\n    \n分析:\n\n    思路一：暴力解法，两次for循环，遍历所有可能，这也是容易想到的方法，时间复杂度O(n^2),空间复杂度O(1); \n    思路二：利用哈希表，每次存储target减去当前数的差值(key)，当前值的下标(value)，当再碰到这个值时，即找到了符合要求的值。时间复杂度O(n),空间复杂度O(n);\n        \n代码:\n\n1:\n    \n    //思路一暴力解法\n    public int[] twoSum(int[] nums, int target) {\n            // write your code here\n            int[] a = new int[2];\n            for (int i = 0; i < nums.length - 1; i++){\n    \n                // 注意j等于i + 1;若j = 1则循环顺序不对\n                for (int j = i + 1; j < nums.length; j++ ){\n                    if (nums[i] + nums[j] == target){\n    \n                        a[0] = i;\n                        a[1] = j;\n                        break;\n                    }\n                }\n            }\n            return a;\n        }\n         \n2:         \n        \n    //思路二利用哈希表\n    public int[] twoSum(int[] nums, int target) {\n    \n            int[] a = new int[2];\n            HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\n    \n            for (int i = 0; i < nums.length; i++){\n    \n                if (map.containsKey(nums[i])){\n    \n                    a[0] = map.get(nums[i]);\n                    a[1] = i;\n                    return a;\n                }\n                map.put(target - nums[i], i);\n            }\n    \n            return a;\n    }\n    \n## 两数相加\n\n给定两个非空链表来表示两个非负整数。位数按照逆序方式存储，它们的每个节点只存储单个数字。将两数相加返回一个新的链表。\n\nYou are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.\n\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\n\n示例：\n\n    输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)\n    输出：7 -> 0 -> 8\n    原因：342 + 465 = 807\n    \n    \n\n    ","source":"_posts/LeetCode.md","raw":"---\ntitle: LeetCode\ndate: 2018-05-31 09:49:47\ntags:\n---\n\n## 两数之和\n\n给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。\n\n你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。\n\n示例:\n\n\n    给定 nums = [2, 7, 11, 15], target = 9\n    \n    因为 nums[0] + nums[1] = 2 + 7 = 9\n    所以返回 [0, 1]\n    \n分析:\n\n    思路一：暴力解法，两次for循环，遍历所有可能，这也是容易想到的方法，时间复杂度O(n^2),空间复杂度O(1); \n    思路二：利用哈希表，每次存储target减去当前数的差值(key)，当前值的下标(value)，当再碰到这个值时，即找到了符合要求的值。时间复杂度O(n),空间复杂度O(n);\n        \n代码:\n\n1:\n    \n    //思路一暴力解法\n    public int[] twoSum(int[] nums, int target) {\n            // write your code here\n            int[] a = new int[2];\n            for (int i = 0; i < nums.length - 1; i++){\n    \n                // 注意j等于i + 1;若j = 1则循环顺序不对\n                for (int j = i + 1; j < nums.length; j++ ){\n                    if (nums[i] + nums[j] == target){\n    \n                        a[0] = i;\n                        a[1] = j;\n                        break;\n                    }\n                }\n            }\n            return a;\n        }\n         \n2:         \n        \n    //思路二利用哈希表\n    public int[] twoSum(int[] nums, int target) {\n    \n            int[] a = new int[2];\n            HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\n    \n            for (int i = 0; i < nums.length; i++){\n    \n                if (map.containsKey(nums[i])){\n    \n                    a[0] = map.get(nums[i]);\n                    a[1] = i;\n                    return a;\n                }\n                map.put(target - nums[i], i);\n            }\n    \n            return a;\n    }\n    \n## 两数相加\n\n给定两个非空链表来表示两个非负整数。位数按照逆序方式存储，它们的每个节点只存储单个数字。将两数相加返回一个新的链表。\n\nYou are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.\n\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\n\n示例：\n\n    输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)\n    输出：7 -> 0 -> 8\n    原因：342 + 465 = 807\n    \n    \n\n    ","slug":"LeetCode","published":1,"updated":"2018-05-31T08:20:12.166Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jvt000835fylxem08uc","content":"<h2 id=\"两数之和\"><a href=\"#两数之和\" class=\"headerlink\" title=\"两数之和\"></a>两数之和</h2><p>给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。</p>\n<p>你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。</p>\n<p>示例:</p>\n<pre><code>给定 nums = [2, 7, 11, 15], target = 9\n\n因为 nums[0] + nums[1] = 2 + 7 = 9\n所以返回 [0, 1]\n</code></pre><p>分析:</p>\n<pre><code>思路一：暴力解法，两次for循环，遍历所有可能，这也是容易想到的方法，时间复杂度O(n^2),空间复杂度O(1); \n思路二：利用哈希表，每次存储target减去当前数的差值(key)，当前值的下标(value)，当再碰到这个值时，即找到了符合要求的值。时间复杂度O(n),空间复杂度O(n);\n</code></pre><p>代码:</p>\n<p>1:</p>\n<pre><code>//思路一暴力解法\npublic int[] twoSum(int[] nums, int target) {\n        // write your code here\n        int[] a = new int[2];\n        for (int i = 0; i &lt; nums.length - 1; i++){\n\n            // 注意j等于i + 1;若j = 1则循环顺序不对\n            for (int j = i + 1; j &lt; nums.length; j++ ){\n                if (nums[i] + nums[j] == target){\n\n                    a[0] = i;\n                    a[1] = j;\n                    break;\n                }\n            }\n        }\n        return a;\n    }\n</code></pre><p>2:         </p>\n<pre><code>//思路二利用哈希表\npublic int[] twoSum(int[] nums, int target) {\n\n        int[] a = new int[2];\n        HashMap&lt;Integer, Integer&gt; map = new HashMap&lt;Integer, Integer&gt;();\n\n        for (int i = 0; i &lt; nums.length; i++){\n\n            if (map.containsKey(nums[i])){\n\n                a[0] = map.get(nums[i]);\n                a[1] = i;\n                return a;\n            }\n            map.put(target - nums[i], i);\n        }\n\n        return a;\n}\n</code></pre><h2 id=\"两数相加\"><a href=\"#两数相加\" class=\"headerlink\" title=\"两数相加\"></a>两数相加</h2><p>给定两个非空链表来表示两个非负整数。位数按照逆序方式存储，它们的每个节点只存储单个数字。将两数相加返回一个新的链表。</p>\n<p>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p>\n<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>\n<p>示例：</p>\n<pre><code>输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)\n输出：7 -&gt; 0 -&gt; 8\n原因：342 + 465 = 807\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"两数之和\"><a href=\"#两数之和\" class=\"headerlink\" title=\"两数之和\"></a>两数之和</h2><p>给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。</p>\n<p>你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。</p>\n<p>示例:</p>\n<pre><code>给定 nums = [2, 7, 11, 15], target = 9\n\n因为 nums[0] + nums[1] = 2 + 7 = 9\n所以返回 [0, 1]\n</code></pre><p>分析:</p>\n<pre><code>思路一：暴力解法，两次for循环，遍历所有可能，这也是容易想到的方法，时间复杂度O(n^2),空间复杂度O(1); \n思路二：利用哈希表，每次存储target减去当前数的差值(key)，当前值的下标(value)，当再碰到这个值时，即找到了符合要求的值。时间复杂度O(n),空间复杂度O(n);\n</code></pre><p>代码:</p>\n<p>1:</p>\n<pre><code>//思路一暴力解法\npublic int[] twoSum(int[] nums, int target) {\n        // write your code here\n        int[] a = new int[2];\n        for (int i = 0; i &lt; nums.length - 1; i++){\n\n            // 注意j等于i + 1;若j = 1则循环顺序不对\n            for (int j = i + 1; j &lt; nums.length; j++ ){\n                if (nums[i] + nums[j] == target){\n\n                    a[0] = i;\n                    a[1] = j;\n                    break;\n                }\n            }\n        }\n        return a;\n    }\n</code></pre><p>2:         </p>\n<pre><code>//思路二利用哈希表\npublic int[] twoSum(int[] nums, int target) {\n\n        int[] a = new int[2];\n        HashMap&lt;Integer, Integer&gt; map = new HashMap&lt;Integer, Integer&gt;();\n\n        for (int i = 0; i &lt; nums.length; i++){\n\n            if (map.containsKey(nums[i])){\n\n                a[0] = map.get(nums[i]);\n                a[1] = i;\n                return a;\n            }\n            map.put(target - nums[i], i);\n        }\n\n        return a;\n}\n</code></pre><h2 id=\"两数相加\"><a href=\"#两数相加\" class=\"headerlink\" title=\"两数相加\"></a>两数相加</h2><p>给定两个非空链表来表示两个非负整数。位数按照逆序方式存储，它们的每个节点只存储单个数字。将两数相加返回一个新的链表。</p>\n<p>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p>\n<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>\n<p>示例：</p>\n<pre><code>输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)\n输出：7 -&gt; 0 -&gt; 8\n原因：342 + 465 = 807\n</code></pre>"},{"title":"Ubuntu Linux下安装软件方法","date":"2018-04-20T07:02:03.000Z","_content":"\n## 引用: https://www.linuxidc.com/Linux/2015-01/111216.htm\n\n    Linux系统中,软件通常以源代码或者编译包的形式提供.\n    \n    (1)源代码需要编译为二进制的机器码才能够使用,安装比较\n    耗时,不过您可以自行调节编译选项,决定需要的功能或组\n    件,或者针对硬件平台做一些优化.\n    \n    (2)预编译的软件包,通常是由软件的发布者进行编译,您只要\n    将软件拷贝到系统中就可以了.考虑到预编译软件包的适用性\n    ,预编译软件通常不会针对某种硬件平台优化.它所包含的功能\n    和组件也是通用的组合.\n    \n    \n## 1 deb包的安装方式\n\n    deb是debian系Linux的包管理方式,Ubuntu是属于debian系的\n    Linux发行版,所以默认支持这种软件安装方式,当下载到一个\n    deb格式的软件后,在终端输入这个命令就能安装:\n    \n    sudo dpkg -i *.deb\n    \n    或者直接双击安装.\n    \n## 2 编译安装方式\n\n    (小贴士: 使用编译安装前,需要建立编译环境,使用一下命令建立\n    基本的编译环境: sudo apt-get install bulid-essential)\n    \n    在Linux的世界,有很多软件只提供了源代码给你,需要你自己进行\n    编译安装,一般开源的软件都会使用tar.gz压缩档来进行发布,当然\n    还有其他的形式,拿到源代码的压缩文档,把它解压缩到/tmp目录下\n    ,进入/tmp/软件目录,然后执行下三个命令:\n    \n   * 1 ./configure\n   * 2 make \n   * 3 sudo make install\n    \n    在第一步./configure时可能会提示说某某软件找不到,例如提示\"libgnome\"\n    这个开发包找不到,那就把libgnome这个关键词copy,然后打开新立得软件管\n    理器,在里面搜索libgnome这个关键词,就会找到libgnome相关的项目,把前\n    面有个ubuntu符号的libgnome包(注意:同样需要安装dev包,但可以不装doc\n    包)全部安装,通过这个方法把./configure过程中缺失的开发包全部装上就\n    ok了,第一步顺利通过,第二三步基本问题不大.\n    \n## 3 apt-get安装方法\n    \n    ubuntu世界有许多软件源,在系统安装篇已经介绍过如何添加源,apt-get的基本\n    软件安装命令是:\n     \n    sudo apt-get install 软件名\n    \n## 4 新立得软件包管理 \n    打开: 系统 --系统管理--新立得软件包管理,这个工具其实跟apt一样,可以搜索\n    ,下载,安装ubuntu源里的软件,具体安装方式很简单,看看界面应该会懂,就不详细\n    介绍了.\n    \n## 5 二进制包的安装方式\n    \n    有不少开源的商业软件都会采用这种方式发布Linux软件,例如google earth,拿到\n    二进制软件后,把它放到/tmp目录,在终端下进入安装目录,在安装目录下执行:\n    \n    ./软件名\n    \n    然后按照一步步提示,就能安装该软件.例如安装realplayer播放器:你直接到官网\n    http://www.real.com/linux 下载RealPayer的安装包,安装包是.bin格式,用如下\n    命令安装:\n    \n    chomd +x RealPlayer11GOLD.bin\n    \n    ./RealPlayer11GOLD.bin\n    \n## 6 rpm包的安装方式\n    \n    rpm 包是deb包最常见的一种管理方式,但ubuntu同样可以使用rpm的软件资源.首先\n    我们安装一个rpm转deb的软件\n    \n    sudo apt-get install alien\n    \n    然后就可以对rpm格式的软件转换成deb格式了:\n    \n    alien -d *.rpm\n    \n    然后就可以用deb的安装方式进行软件安装.也可以不需转换而直接对rpm包进行安装:\n    \n    alien -i *.rpm\n    \n    更多的alien使用方法可以用-h参数查看相应说明文档.\n    \n## 7 其他安装方式\n\n    其他安装方式一般还有脚本安装方式,这类软件,你会在安装目录下发现类似后缀名的文件\n    ,如: .sh .py .run等的,有的甚至连后缀名都没有,直接一个INSTALL文件,对于这种软件,\n    可以尝试以下几种方式安装:\n    最简单的就是直接在软件目录下输入: ./软件名*(注意有一个*号,那是一般可以通配所有\n    后缀名)\n    或者: sh 软件名.sh\n    或者: python软件名.py\n    \n    TIP:如以上方法均无法安装软件,可以参考软件源代码下面的README文档.\n    \n    ","source":"_posts/Ubuntu-Linux下安装软件方法.md","raw":"---\ntitle: Ubuntu Linux下安装软件方法\ndate: 2018-04-20 15:02:03\ntags:\n---\n\n## 引用: https://www.linuxidc.com/Linux/2015-01/111216.htm\n\n    Linux系统中,软件通常以源代码或者编译包的形式提供.\n    \n    (1)源代码需要编译为二进制的机器码才能够使用,安装比较\n    耗时,不过您可以自行调节编译选项,决定需要的功能或组\n    件,或者针对硬件平台做一些优化.\n    \n    (2)预编译的软件包,通常是由软件的发布者进行编译,您只要\n    将软件拷贝到系统中就可以了.考虑到预编译软件包的适用性\n    ,预编译软件通常不会针对某种硬件平台优化.它所包含的功能\n    和组件也是通用的组合.\n    \n    \n## 1 deb包的安装方式\n\n    deb是debian系Linux的包管理方式,Ubuntu是属于debian系的\n    Linux发行版,所以默认支持这种软件安装方式,当下载到一个\n    deb格式的软件后,在终端输入这个命令就能安装:\n    \n    sudo dpkg -i *.deb\n    \n    或者直接双击安装.\n    \n## 2 编译安装方式\n\n    (小贴士: 使用编译安装前,需要建立编译环境,使用一下命令建立\n    基本的编译环境: sudo apt-get install bulid-essential)\n    \n    在Linux的世界,有很多软件只提供了源代码给你,需要你自己进行\n    编译安装,一般开源的软件都会使用tar.gz压缩档来进行发布,当然\n    还有其他的形式,拿到源代码的压缩文档,把它解压缩到/tmp目录下\n    ,进入/tmp/软件目录,然后执行下三个命令:\n    \n   * 1 ./configure\n   * 2 make \n   * 3 sudo make install\n    \n    在第一步./configure时可能会提示说某某软件找不到,例如提示\"libgnome\"\n    这个开发包找不到,那就把libgnome这个关键词copy,然后打开新立得软件管\n    理器,在里面搜索libgnome这个关键词,就会找到libgnome相关的项目,把前\n    面有个ubuntu符号的libgnome包(注意:同样需要安装dev包,但可以不装doc\n    包)全部安装,通过这个方法把./configure过程中缺失的开发包全部装上就\n    ok了,第一步顺利通过,第二三步基本问题不大.\n    \n## 3 apt-get安装方法\n    \n    ubuntu世界有许多软件源,在系统安装篇已经介绍过如何添加源,apt-get的基本\n    软件安装命令是:\n     \n    sudo apt-get install 软件名\n    \n## 4 新立得软件包管理 \n    打开: 系统 --系统管理--新立得软件包管理,这个工具其实跟apt一样,可以搜索\n    ,下载,安装ubuntu源里的软件,具体安装方式很简单,看看界面应该会懂,就不详细\n    介绍了.\n    \n## 5 二进制包的安装方式\n    \n    有不少开源的商业软件都会采用这种方式发布Linux软件,例如google earth,拿到\n    二进制软件后,把它放到/tmp目录,在终端下进入安装目录,在安装目录下执行:\n    \n    ./软件名\n    \n    然后按照一步步提示,就能安装该软件.例如安装realplayer播放器:你直接到官网\n    http://www.real.com/linux 下载RealPayer的安装包,安装包是.bin格式,用如下\n    命令安装:\n    \n    chomd +x RealPlayer11GOLD.bin\n    \n    ./RealPlayer11GOLD.bin\n    \n## 6 rpm包的安装方式\n    \n    rpm 包是deb包最常见的一种管理方式,但ubuntu同样可以使用rpm的软件资源.首先\n    我们安装一个rpm转deb的软件\n    \n    sudo apt-get install alien\n    \n    然后就可以对rpm格式的软件转换成deb格式了:\n    \n    alien -d *.rpm\n    \n    然后就可以用deb的安装方式进行软件安装.也可以不需转换而直接对rpm包进行安装:\n    \n    alien -i *.rpm\n    \n    更多的alien使用方法可以用-h参数查看相应说明文档.\n    \n## 7 其他安装方式\n\n    其他安装方式一般还有脚本安装方式,这类软件,你会在安装目录下发现类似后缀名的文件\n    ,如: .sh .py .run等的,有的甚至连后缀名都没有,直接一个INSTALL文件,对于这种软件,\n    可以尝试以下几种方式安装:\n    最简单的就是直接在软件目录下输入: ./软件名*(注意有一个*号,那是一般可以通配所有\n    后缀名)\n    或者: sh 软件名.sh\n    或者: python软件名.py\n    \n    TIP:如以上方法均无法安装软件,可以参考软件源代码下面的README文档.\n    \n    ","slug":"Ubuntu-Linux下安装软件方法","published":1,"updated":"2018-05-05T02:10:21.445Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jvu000935fyxg04drkb","content":"<h2 id=\"引用-https-www-linuxidc-com-Linux-2015-01-111216-htm\"><a href=\"#引用-https-www-linuxidc-com-Linux-2015-01-111216-htm\" class=\"headerlink\" title=\"引用: https://www.linuxidc.com/Linux/2015-01/111216.htm\"></a>引用: <a href=\"https://www.linuxidc.com/Linux/2015-01/111216.htm\" target=\"_blank\" rel=\"noopener\">https://www.linuxidc.com/Linux/2015-01/111216.htm</a></h2><pre><code>Linux系统中,软件通常以源代码或者编译包的形式提供.\n\n(1)源代码需要编译为二进制的机器码才能够使用,安装比较\n耗时,不过您可以自行调节编译选项,决定需要的功能或组\n件,或者针对硬件平台做一些优化.\n\n(2)预编译的软件包,通常是由软件的发布者进行编译,您只要\n将软件拷贝到系统中就可以了.考虑到预编译软件包的适用性\n,预编译软件通常不会针对某种硬件平台优化.它所包含的功能\n和组件也是通用的组合.\n</code></pre><h2 id=\"1-deb包的安装方式\"><a href=\"#1-deb包的安装方式\" class=\"headerlink\" title=\"1 deb包的安装方式\"></a>1 deb包的安装方式</h2><pre><code>deb是debian系Linux的包管理方式,Ubuntu是属于debian系的\nLinux发行版,所以默认支持这种软件安装方式,当下载到一个\ndeb格式的软件后,在终端输入这个命令就能安装:\n\nsudo dpkg -i *.deb\n\n或者直接双击安装.\n</code></pre><h2 id=\"2-编译安装方式\"><a href=\"#2-编译安装方式\" class=\"headerlink\" title=\"2 编译安装方式\"></a>2 编译安装方式</h2><pre><code>(小贴士: 使用编译安装前,需要建立编译环境,使用一下命令建立\n基本的编译环境: sudo apt-get install bulid-essential)\n\n在Linux的世界,有很多软件只提供了源代码给你,需要你自己进行\n编译安装,一般开源的软件都会使用tar.gz压缩档来进行发布,当然\n还有其他的形式,拿到源代码的压缩文档,把它解压缩到/tmp目录下\n,进入/tmp/软件目录,然后执行下三个命令:\n</code></pre><ul>\n<li>1 ./configure</li>\n<li>2 make </li>\n<li><p>3 sudo make install</p>\n<p>在第一步./configure时可能会提示说某某软件找不到,例如提示”libgnome”<br>这个开发包找不到,那就把libgnome这个关键词copy,然后打开新立得软件管<br>理器,在里面搜索libgnome这个关键词,就会找到libgnome相关的项目,把前<br>面有个ubuntu符号的libgnome包(注意:同样需要安装dev包,但可以不装doc<br>包)全部安装,通过这个方法把./configure过程中缺失的开发包全部装上就<br>ok了,第一步顺利通过,第二三步基本问题不大.</p>\n</li>\n</ul>\n<h2 id=\"3-apt-get安装方法\"><a href=\"#3-apt-get安装方法\" class=\"headerlink\" title=\"3 apt-get安装方法\"></a>3 apt-get安装方法</h2><pre><code>ubuntu世界有许多软件源,在系统安装篇已经介绍过如何添加源,apt-get的基本\n软件安装命令是:\n\nsudo apt-get install 软件名\n</code></pre><h2 id=\"4-新立得软件包管理\"><a href=\"#4-新立得软件包管理\" class=\"headerlink\" title=\"4 新立得软件包管理\"></a>4 新立得软件包管理</h2><pre><code>打开: 系统 --系统管理--新立得软件包管理,这个工具其实跟apt一样,可以搜索\n,下载,安装ubuntu源里的软件,具体安装方式很简单,看看界面应该会懂,就不详细\n介绍了.\n</code></pre><h2 id=\"5-二进制包的安装方式\"><a href=\"#5-二进制包的安装方式\" class=\"headerlink\" title=\"5 二进制包的安装方式\"></a>5 二进制包的安装方式</h2><pre><code>有不少开源的商业软件都会采用这种方式发布Linux软件,例如google earth,拿到\n二进制软件后,把它放到/tmp目录,在终端下进入安装目录,在安装目录下执行:\n\n./软件名\n\n然后按照一步步提示,就能安装该软件.例如安装realplayer播放器:你直接到官网\nhttp://www.real.com/linux 下载RealPayer的安装包,安装包是.bin格式,用如下\n命令安装:\n\nchomd +x RealPlayer11GOLD.bin\n\n./RealPlayer11GOLD.bin\n</code></pre><h2 id=\"6-rpm包的安装方式\"><a href=\"#6-rpm包的安装方式\" class=\"headerlink\" title=\"6 rpm包的安装方式\"></a>6 rpm包的安装方式</h2><pre><code>rpm 包是deb包最常见的一种管理方式,但ubuntu同样可以使用rpm的软件资源.首先\n我们安装一个rpm转deb的软件\n\nsudo apt-get install alien\n\n然后就可以对rpm格式的软件转换成deb格式了:\n\nalien -d *.rpm\n\n然后就可以用deb的安装方式进行软件安装.也可以不需转换而直接对rpm包进行安装:\n\nalien -i *.rpm\n\n更多的alien使用方法可以用-h参数查看相应说明文档.\n</code></pre><h2 id=\"7-其他安装方式\"><a href=\"#7-其他安装方式\" class=\"headerlink\" title=\"7 其他安装方式\"></a>7 其他安装方式</h2><pre><code>其他安装方式一般还有脚本安装方式,这类软件,你会在安装目录下发现类似后缀名的文件\n,如: .sh .py .run等的,有的甚至连后缀名都没有,直接一个INSTALL文件,对于这种软件,\n可以尝试以下几种方式安装:\n最简单的就是直接在软件目录下输入: ./软件名*(注意有一个*号,那是一般可以通配所有\n后缀名)\n或者: sh 软件名.sh\n或者: python软件名.py\n\nTIP:如以上方法均无法安装软件,可以参考软件源代码下面的README文档.\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"引用-https-www-linuxidc-com-Linux-2015-01-111216-htm\"><a href=\"#引用-https-www-linuxidc-com-Linux-2015-01-111216-htm\" class=\"headerlink\" title=\"引用: https://www.linuxidc.com/Linux/2015-01/111216.htm\"></a>引用: <a href=\"https://www.linuxidc.com/Linux/2015-01/111216.htm\" target=\"_blank\" rel=\"noopener\">https://www.linuxidc.com/Linux/2015-01/111216.htm</a></h2><pre><code>Linux系统中,软件通常以源代码或者编译包的形式提供.\n\n(1)源代码需要编译为二进制的机器码才能够使用,安装比较\n耗时,不过您可以自行调节编译选项,决定需要的功能或组\n件,或者针对硬件平台做一些优化.\n\n(2)预编译的软件包,通常是由软件的发布者进行编译,您只要\n将软件拷贝到系统中就可以了.考虑到预编译软件包的适用性\n,预编译软件通常不会针对某种硬件平台优化.它所包含的功能\n和组件也是通用的组合.\n</code></pre><h2 id=\"1-deb包的安装方式\"><a href=\"#1-deb包的安装方式\" class=\"headerlink\" title=\"1 deb包的安装方式\"></a>1 deb包的安装方式</h2><pre><code>deb是debian系Linux的包管理方式,Ubuntu是属于debian系的\nLinux发行版,所以默认支持这种软件安装方式,当下载到一个\ndeb格式的软件后,在终端输入这个命令就能安装:\n\nsudo dpkg -i *.deb\n\n或者直接双击安装.\n</code></pre><h2 id=\"2-编译安装方式\"><a href=\"#2-编译安装方式\" class=\"headerlink\" title=\"2 编译安装方式\"></a>2 编译安装方式</h2><pre><code>(小贴士: 使用编译安装前,需要建立编译环境,使用一下命令建立\n基本的编译环境: sudo apt-get install bulid-essential)\n\n在Linux的世界,有很多软件只提供了源代码给你,需要你自己进行\n编译安装,一般开源的软件都会使用tar.gz压缩档来进行发布,当然\n还有其他的形式,拿到源代码的压缩文档,把它解压缩到/tmp目录下\n,进入/tmp/软件目录,然后执行下三个命令:\n</code></pre><ul>\n<li>1 ./configure</li>\n<li>2 make </li>\n<li><p>3 sudo make install</p>\n<p>在第一步./configure时可能会提示说某某软件找不到,例如提示”libgnome”<br>这个开发包找不到,那就把libgnome这个关键词copy,然后打开新立得软件管<br>理器,在里面搜索libgnome这个关键词,就会找到libgnome相关的项目,把前<br>面有个ubuntu符号的libgnome包(注意:同样需要安装dev包,但可以不装doc<br>包)全部安装,通过这个方法把./configure过程中缺失的开发包全部装上就<br>ok了,第一步顺利通过,第二三步基本问题不大.</p>\n</li>\n</ul>\n<h2 id=\"3-apt-get安装方法\"><a href=\"#3-apt-get安装方法\" class=\"headerlink\" title=\"3 apt-get安装方法\"></a>3 apt-get安装方法</h2><pre><code>ubuntu世界有许多软件源,在系统安装篇已经介绍过如何添加源,apt-get的基本\n软件安装命令是:\n\nsudo apt-get install 软件名\n</code></pre><h2 id=\"4-新立得软件包管理\"><a href=\"#4-新立得软件包管理\" class=\"headerlink\" title=\"4 新立得软件包管理\"></a>4 新立得软件包管理</h2><pre><code>打开: 系统 --系统管理--新立得软件包管理,这个工具其实跟apt一样,可以搜索\n,下载,安装ubuntu源里的软件,具体安装方式很简单,看看界面应该会懂,就不详细\n介绍了.\n</code></pre><h2 id=\"5-二进制包的安装方式\"><a href=\"#5-二进制包的安装方式\" class=\"headerlink\" title=\"5 二进制包的安装方式\"></a>5 二进制包的安装方式</h2><pre><code>有不少开源的商业软件都会采用这种方式发布Linux软件,例如google earth,拿到\n二进制软件后,把它放到/tmp目录,在终端下进入安装目录,在安装目录下执行:\n\n./软件名\n\n然后按照一步步提示,就能安装该软件.例如安装realplayer播放器:你直接到官网\nhttp://www.real.com/linux 下载RealPayer的安装包,安装包是.bin格式,用如下\n命令安装:\n\nchomd +x RealPlayer11GOLD.bin\n\n./RealPlayer11GOLD.bin\n</code></pre><h2 id=\"6-rpm包的安装方式\"><a href=\"#6-rpm包的安装方式\" class=\"headerlink\" title=\"6 rpm包的安装方式\"></a>6 rpm包的安装方式</h2><pre><code>rpm 包是deb包最常见的一种管理方式,但ubuntu同样可以使用rpm的软件资源.首先\n我们安装一个rpm转deb的软件\n\nsudo apt-get install alien\n\n然后就可以对rpm格式的软件转换成deb格式了:\n\nalien -d *.rpm\n\n然后就可以用deb的安装方式进行软件安装.也可以不需转换而直接对rpm包进行安装:\n\nalien -i *.rpm\n\n更多的alien使用方法可以用-h参数查看相应说明文档.\n</code></pre><h2 id=\"7-其他安装方式\"><a href=\"#7-其他安装方式\" class=\"headerlink\" title=\"7 其他安装方式\"></a>7 其他安装方式</h2><pre><code>其他安装方式一般还有脚本安装方式,这类软件,你会在安装目录下发现类似后缀名的文件\n,如: .sh .py .run等的,有的甚至连后缀名都没有,直接一个INSTALL文件,对于这种软件,\n可以尝试以下几种方式安装:\n最简单的就是直接在软件目录下输入: ./软件名*(注意有一个*号,那是一般可以通配所有\n后缀名)\n或者: sh 软件名.sh\n或者: python软件名.py\n\nTIP:如以上方法均无法安装软件,可以参考软件源代码下面的README文档.\n</code></pre>"},{"title":"Ubuntu 远程连接22端口","date":"2018-04-23T02:12:42.000Z","_content":"\n## 安装OpenSSH\n\n### Ubuntu缺省没有安装SSH Server,使用以下命令安装:\n\n### sudo apt-get install openssh-server openssh-client\n\n### 配置完成后重启命令\n\n### sudo /etc/init.d/ssh restart\n","source":"_posts/Ubuntu-远程连接22端口.md","raw":"---\ntitle: Ubuntu 远程连接22端口\ndate: 2018-04-23 10:12:42\ntags:\n---\n\n## 安装OpenSSH\n\n### Ubuntu缺省没有安装SSH Server,使用以下命令安装:\n\n### sudo apt-get install openssh-server openssh-client\n\n### 配置完成后重启命令\n\n### sudo /etc/init.d/ssh restart\n","slug":"Ubuntu-远程连接22端口","published":1,"updated":"2018-05-05T02:10:21.446Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jvw000a35fy6jucjfp5","content":"<h2 id=\"安装OpenSSH\"><a href=\"#安装OpenSSH\" class=\"headerlink\" title=\"安装OpenSSH\"></a>安装OpenSSH</h2><h3 id=\"Ubuntu缺省没有安装SSH-Server-使用以下命令安装\"><a href=\"#Ubuntu缺省没有安装SSH-Server-使用以下命令安装\" class=\"headerlink\" title=\"Ubuntu缺省没有安装SSH Server,使用以下命令安装:\"></a>Ubuntu缺省没有安装SSH Server,使用以下命令安装:</h3><h3 id=\"sudo-apt-get-install-openssh-server-openssh-client\"><a href=\"#sudo-apt-get-install-openssh-server-openssh-client\" class=\"headerlink\" title=\"sudo apt-get install openssh-server openssh-client\"></a>sudo apt-get install openssh-server openssh-client</h3><h3 id=\"配置完成后重启命令\"><a href=\"#配置完成后重启命令\" class=\"headerlink\" title=\"配置完成后重启命令\"></a>配置完成后重启命令</h3><h3 id=\"sudo-etc-init-d-ssh-restart\"><a href=\"#sudo-etc-init-d-ssh-restart\" class=\"headerlink\" title=\"sudo /etc/init.d/ssh restart\"></a>sudo /etc/init.d/ssh restart</h3>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装OpenSSH\"><a href=\"#安装OpenSSH\" class=\"headerlink\" title=\"安装OpenSSH\"></a>安装OpenSSH</h2><h3 id=\"Ubuntu缺省没有安装SSH-Server-使用以下命令安装\"><a href=\"#Ubuntu缺省没有安装SSH-Server-使用以下命令安装\" class=\"headerlink\" title=\"Ubuntu缺省没有安装SSH Server,使用以下命令安装:\"></a>Ubuntu缺省没有安装SSH Server,使用以下命令安装:</h3><h3 id=\"sudo-apt-get-install-openssh-server-openssh-client\"><a href=\"#sudo-apt-get-install-openssh-server-openssh-client\" class=\"headerlink\" title=\"sudo apt-get install openssh-server openssh-client\"></a>sudo apt-get install openssh-server openssh-client</h3><h3 id=\"配置完成后重启命令\"><a href=\"#配置完成后重启命令\" class=\"headerlink\" title=\"配置完成后重启命令\"></a>配置完成后重启命令</h3><h3 id=\"sudo-etc-init-d-ssh-restart\"><a href=\"#sudo-etc-init-d-ssh-restart\" class=\"headerlink\" title=\"sudo /etc/init.d/ssh restart\"></a>sudo /etc/init.d/ssh restart</h3>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-05-05T02:10:21.446Z","updated":"2018-05-05T02:10:21.446Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jvx000b35fyojfep2ci","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"learning-hexo","date":"2018-03-29T11:36:43.000Z","_content":"\n## this is a test\n\n- sdlfadf\n- sfadf\n- sdfad\n\n## chapter 1\n\n## chapter 2\n","source":"_posts/learning-hexo.md","raw":"---\ntitle: learning-hexo\ndate: 2018-03-29 19:36:43\ntags:\n---\n\n## this is a test\n\n- sdlfadf\n- sfadf\n- sdfad\n\n## chapter 1\n\n## chapter 2\n","slug":"learning-hexo","published":1,"updated":"2018-05-05T02:10:21.446Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jvy000c35fyl7suvgs0","content":"<h2 id=\"this-is-a-test\"><a href=\"#this-is-a-test\" class=\"headerlink\" title=\"this is a test\"></a>this is a test</h2><ul>\n<li>sdlfadf</li>\n<li>sfadf</li>\n<li>sdfad</li>\n</ul>\n<h2 id=\"chapter-1\"><a href=\"#chapter-1\" class=\"headerlink\" title=\"chapter 1\"></a>chapter 1</h2><h2 id=\"chapter-2\"><a href=\"#chapter-2\" class=\"headerlink\" title=\"chapter 2\"></a>chapter 2</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"this-is-a-test\"><a href=\"#this-is-a-test\" class=\"headerlink\" title=\"this is a test\"></a>this is a test</h2><ul>\n<li>sdlfadf</li>\n<li>sfadf</li>\n<li>sdfad</li>\n</ul>\n<h2 id=\"chapter-1\"><a href=\"#chapter-1\" class=\"headerlink\" title=\"chapter 1\"></a>chapter 1</h2><h2 id=\"chapter-2\"><a href=\"#chapter-2\" class=\"headerlink\" title=\"chapter 2\"></a>chapter 2</h2>"},{"title":" WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! ","date":"2018-05-11T03:36:59.000Z","_content":"\n## 参考: https://blog.csdn.net/nahancy/article/details/51052127\n\n## 问题\n\nOn branch master\nnothing to commit, working tree clean\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\nSomeone could be eavesdropping on you right now (man-in-the-middle attack)!\nIt is also possible that a host key has just been changed.\nThe fingerprint for the DSA key sent by the remote host is\nSHA256:br9IjFspm1vxR3iA35FWE+4VTyz1hYVLIE2t1/CeyWQ.\nPlease contact your system administrator.\nAdd correct host key in /Users/xiongzixu/.ssh/known_hosts to get rid of this message.\nOffending RSA key in /Users/xiongzixu/.ssh/known_hosts:1\nDSA host key for github.com has changed and you have requested strict checking.\nHost key verification failed.\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\n\n\n## 原因:\n找了好久发现有篇文章里面提到.ssh/known_hosts文件,原来known_hosts是记录远程主机的公钥的文件，\n之前更新了系统，而保存的公钥还是未重装系统的系统公钥，在ssh链接的时候首先会验证公钥，如果公钥不对，\n那么就会报错\n\n\n\n\n## 解决方案(3种):\n\n* 1: 使用shh-keygen 命令（强烈建议使用此方法）\n       \n     比如我们要将172.16.152.209的公钥信息清除，使用命令（请自己将172.16.152.209替换成自己的IP或域名）：\n     \n* 2: 将known_hosts文件中的与登录错误的IP的公钥删除即可，下图就是我的218机子的公钥（实则是之前系统的公钥），然后将其删除，再ssh 登录 great 登录成功了。     \n       \n\n![](https://img-blog.csdn.net/20160403214246747?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n\n* 3: 将known_hosts文件中的内容清空即可，但不建议使用此方法，里面还保存有其他机子的公钥。 \n     \n\n\n","source":"_posts/WARNING-REMOTE-HOST-IDENTIFICATION-HAS-CHANGED.md","raw":"---\ntitle: ' WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! '\ndate: 2018-05-11 11:36:59\ntags:\n---\n\n## 参考: https://blog.csdn.net/nahancy/article/details/51052127\n\n## 问题\n\nOn branch master\nnothing to commit, working tree clean\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\nSomeone could be eavesdropping on you right now (man-in-the-middle attack)!\nIt is also possible that a host key has just been changed.\nThe fingerprint for the DSA key sent by the remote host is\nSHA256:br9IjFspm1vxR3iA35FWE+4VTyz1hYVLIE2t1/CeyWQ.\nPlease contact your system administrator.\nAdd correct host key in /Users/xiongzixu/.ssh/known_hosts to get rid of this message.\nOffending RSA key in /Users/xiongzixu/.ssh/known_hosts:1\nDSA host key for github.com has changed and you have requested strict checking.\nHost key verification failed.\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\n\n\n## 原因:\n找了好久发现有篇文章里面提到.ssh/known_hosts文件,原来known_hosts是记录远程主机的公钥的文件，\n之前更新了系统，而保存的公钥还是未重装系统的系统公钥，在ssh链接的时候首先会验证公钥，如果公钥不对，\n那么就会报错\n\n\n\n\n## 解决方案(3种):\n\n* 1: 使用shh-keygen 命令（强烈建议使用此方法）\n       \n     比如我们要将172.16.152.209的公钥信息清除，使用命令（请自己将172.16.152.209替换成自己的IP或域名）：\n     \n* 2: 将known_hosts文件中的与登录错误的IP的公钥删除即可，下图就是我的218机子的公钥（实则是之前系统的公钥），然后将其删除，再ssh 登录 great 登录成功了。     \n       \n\n![](https://img-blog.csdn.net/20160403214246747?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n\n* 3: 将known_hosts文件中的内容清空即可，但不建议使用此方法，里面还保存有其他机子的公钥。 \n     \n\n\n","slug":"WARNING-REMOTE-HOST-IDENTIFICATION-HAS-CHANGED","published":1,"updated":"2018-05-11T05:57:06.335Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jvz000d35fyqy9v0nxf","content":"<h2 id=\"参考-https-blog-csdn-net-nahancy-article-details-51052127\"><a href=\"#参考-https-blog-csdn-net-nahancy-article-details-51052127\" class=\"headerlink\" title=\"参考: https://blog.csdn.net/nahancy/article/details/51052127\"></a>参考: <a href=\"https://blog.csdn.net/nahancy/article/details/51052127\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/nahancy/article/details/51052127</a></h2><h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>On branch master<br>nothing to commit, working tree clean<br>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<br>@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @<br>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<br>IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!<br>Someone could be eavesdropping on you right now (man-in-the-middle attack)!<br>It is also possible that a host key has just been changed.<br>The fingerprint for the DSA key sent by the remote host is<br>SHA256:br9IjFspm1vxR3iA35FWE+4VTyz1hYVLIE2t1/CeyWQ.<br>Please contact your system administrator.<br>Add correct host key in /Users/xiongzixu/.ssh/known_hosts to get rid of this message.<br>Offending RSA key in /Users/xiongzixu/.ssh/known_hosts:1<br>DSA host key for github.com has changed and you have requested strict checking.<br>Host key verification failed.<br>fatal: Could not read from remote repository.</p>\n<p>Please make sure you have the correct access rights<br>and the repository exists.</p>\n<h2 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因:\"></a>原因:</h2><p>找了好久发现有篇文章里面提到.ssh/known_hosts文件,原来known_hosts是记录远程主机的公钥的文件，<br>之前更新了系统，而保存的公钥还是未重装系统的系统公钥，在ssh链接的时候首先会验证公钥，如果公钥不对，<br>那么就会报错</p>\n<h2 id=\"解决方案-3种\"><a href=\"#解决方案-3种\" class=\"headerlink\" title=\"解决方案(3种):\"></a>解决方案(3种):</h2><ul>\n<li><p>1: 使用shh-keygen 命令（强烈建议使用此方法）</p>\n<p>   比如我们要将172.16.152.209的公钥信息清除，使用命令（请自己将172.16.152.209替换成自己的IP或域名）：</p>\n</li>\n<li><p>2: 将known_hosts文件中的与登录错误的IP的公钥删除即可，下图就是我的218机子的公钥（实则是之前系统的公钥），然后将其删除，再ssh 登录 great 登录成功了。     </p>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdn.net/20160403214246747?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\n<ul>\n<li>3: 将known_hosts文件中的内容清空即可，但不建议使用此方法，里面还保存有其他机子的公钥。 </li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"参考-https-blog-csdn-net-nahancy-article-details-51052127\"><a href=\"#参考-https-blog-csdn-net-nahancy-article-details-51052127\" class=\"headerlink\" title=\"参考: https://blog.csdn.net/nahancy/article/details/51052127\"></a>参考: <a href=\"https://blog.csdn.net/nahancy/article/details/51052127\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/nahancy/article/details/51052127</a></h2><h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>On branch master<br>nothing to commit, working tree clean<br>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<br>@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @<br>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<br>IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!<br>Someone could be eavesdropping on you right now (man-in-the-middle attack)!<br>It is also possible that a host key has just been changed.<br>The fingerprint for the DSA key sent by the remote host is<br>SHA256:br9IjFspm1vxR3iA35FWE+4VTyz1hYVLIE2t1/CeyWQ.<br>Please contact your system administrator.<br>Add correct host key in /Users/xiongzixu/.ssh/known_hosts to get rid of this message.<br>Offending RSA key in /Users/xiongzixu/.ssh/known_hosts:1<br>DSA host key for github.com has changed and you have requested strict checking.<br>Host key verification failed.<br>fatal: Could not read from remote repository.</p>\n<p>Please make sure you have the correct access rights<br>and the repository exists.</p>\n<h2 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因:\"></a>原因:</h2><p>找了好久发现有篇文章里面提到.ssh/known_hosts文件,原来known_hosts是记录远程主机的公钥的文件，<br>之前更新了系统，而保存的公钥还是未重装系统的系统公钥，在ssh链接的时候首先会验证公钥，如果公钥不对，<br>那么就会报错</p>\n<h2 id=\"解决方案-3种\"><a href=\"#解决方案-3种\" class=\"headerlink\" title=\"解决方案(3种):\"></a>解决方案(3种):</h2><ul>\n<li><p>1: 使用shh-keygen 命令（强烈建议使用此方法）</p>\n<p>   比如我们要将172.16.152.209的公钥信息清除，使用命令（请自己将172.16.152.209替换成自己的IP或域名）：</p>\n</li>\n<li><p>2: 将known_hosts文件中的与登录错误的IP的公钥删除即可，下图就是我的218机子的公钥（实则是之前系统的公钥），然后将其删除，再ssh 登录 great 登录成功了。     </p>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdn.net/20160403214246747?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\n<ul>\n<li>3: 将known_hosts文件中的内容清空即可，但不建议使用此方法，里面还保存有其他机子的公钥。 </li>\n</ul>\n"},{"title":"linux环境变量总结","date":"2018-05-28T05:42:14.000Z","_content":"\n## 引用https://www.jianshu.com/p/ac2bc0ad3d74\n\nLinux是一个多用户多任务的操作系统,可以在Linux中为不同的用户设置不同的运行环境,\n具体做法是设置不同用户的环境变量.\n\n## Linux环境变量分类\n\n一 按照生命周期来分,Linux环境变量可以分为两类:\n1 永久的:需要用户修改相关的配置文件,变量永久生效.\n2 临时的:用户利用export命令,在当前终端下声明环境变量,关闭shell终端失效.\n\n二 按照作用域来分,Linux环境变量可以分为:\n1 系统环境变量:系统环境变量对系统中的所有用户都有效.\n2 用户环境变量:顾名思义,这种类型的环境变量只对特定的用户有效.\n\n## Linux设置环境变量的方法\n\n一 在/etc/profile文件中增加变量,改变量将会对Linux下所有用户有效,并且是永久的.\n\nexample:\n\n    vim /etc/profile    \n    export CLASSPATH=./JAVA_HOME/lib;$JAVA_HOME/jre/lib\n    \n注意:修改文件后要想马上生效还要运行$ source ~/.bash_profile不然只能在下次\n重进此用户是生效.\n\n二 在用户目录下的.bash_profile文件中增加变量[对单一用户生效(永久的)]\n用vim ~/.bash_profile文件中增加变量,改变仅会对当前用户有效,并且是\"永久的\".\n\n    vim ~/.bash.profile\n    export CLASSPATH=./JAVA_HOME/lib;$JAVA_HOME/jre/lib\n注意:修改文件后要想马上生效还要运行$ source ~/.bash_profile不然只能在下次\n重进此用户时生效.\n\n三 直接运行export命令定义变量[只对当前shell(bash)有效(临时的),]\n在shell的命令行下直接使用   export 变量名=变量值\n定义变量，该变量只在当前的shell（BASH）或其子shell（BASH）下是有效的，\nshell关闭了，变量也就失效了，再打开新shell时就没有这个变量，需要使用的\n话还需要重新定义。\n\n## Linux环境变量使用\n\n一 Linux中常见的环境变量有:\n\n* PATH :指定命令的搜索路径\n\n    \n    PATH声明用法:\n    PATH=$PATH:<PATH 1>:<PATH 2>:<PATH 3>:------:<PATH n>\n    export PATH\n    你可以自己加上指定的路径,中间用冒号隔开.环境变量更改后,在用户下次登录时生效.\n    echo $path 查看当前系统path路径\n    \n* HOME: 指定用户的主工作目录(即用户登陆到Linux系统中时,默认的用户目录)    \n* HISTSIZE: 指保存历史命令记录的条数.\n* LOGNAME: 指当前用户的登陆名.\n* HOSTNAME: 指定主机的名称,许多应用程序如果用到主机名的话,通常是从这个环境\n变量中来取得的\n* SHELL: 指当前用户用的是哪种shell.\n* LANG/LANGUGE: 和语言相关的环境变量,使用多种语言的用户可以修改此环境变量.\n* MAIL: 指当前用户的邮件存放目录.\n\n注意:上述变量的名字并不固定,如:HOSTNAME在某些Linux系统中可能设置成HOST\n\n二 Linux也提供了修改和查看环境变量的命令,下面通过几个实例来说明:\n\n* echo 显示某个环境变量值 echo $PATH\n* export 设置一个新的环境变量 export HELLO=\"hello\"(可以无引号)\n* env 显示所有环境变量\n* set 显示本地定义的shell变量\n* unset 清除环境变量 unset HELLO\n* readonly 设置只读环境变量 readonly HELLO\n\n三 C程序调用环境变量函数\n\n* getenv() 返回一个环境变量.\n* setenv() 设置一个环境变量.\n* unsetenv() 清除一个环境变量.\n\n    \n    \n","source":"_posts/linux环境变量总结.md","raw":"---\ntitle: linux环境变量总结\ndate: 2018-05-28 13:42:14\ntags:\n---\n\n## 引用https://www.jianshu.com/p/ac2bc0ad3d74\n\nLinux是一个多用户多任务的操作系统,可以在Linux中为不同的用户设置不同的运行环境,\n具体做法是设置不同用户的环境变量.\n\n## Linux环境变量分类\n\n一 按照生命周期来分,Linux环境变量可以分为两类:\n1 永久的:需要用户修改相关的配置文件,变量永久生效.\n2 临时的:用户利用export命令,在当前终端下声明环境变量,关闭shell终端失效.\n\n二 按照作用域来分,Linux环境变量可以分为:\n1 系统环境变量:系统环境变量对系统中的所有用户都有效.\n2 用户环境变量:顾名思义,这种类型的环境变量只对特定的用户有效.\n\n## Linux设置环境变量的方法\n\n一 在/etc/profile文件中增加变量,改变量将会对Linux下所有用户有效,并且是永久的.\n\nexample:\n\n    vim /etc/profile    \n    export CLASSPATH=./JAVA_HOME/lib;$JAVA_HOME/jre/lib\n    \n注意:修改文件后要想马上生效还要运行$ source ~/.bash_profile不然只能在下次\n重进此用户是生效.\n\n二 在用户目录下的.bash_profile文件中增加变量[对单一用户生效(永久的)]\n用vim ~/.bash_profile文件中增加变量,改变仅会对当前用户有效,并且是\"永久的\".\n\n    vim ~/.bash.profile\n    export CLASSPATH=./JAVA_HOME/lib;$JAVA_HOME/jre/lib\n注意:修改文件后要想马上生效还要运行$ source ~/.bash_profile不然只能在下次\n重进此用户时生效.\n\n三 直接运行export命令定义变量[只对当前shell(bash)有效(临时的),]\n在shell的命令行下直接使用   export 变量名=变量值\n定义变量，该变量只在当前的shell（BASH）或其子shell（BASH）下是有效的，\nshell关闭了，变量也就失效了，再打开新shell时就没有这个变量，需要使用的\n话还需要重新定义。\n\n## Linux环境变量使用\n\n一 Linux中常见的环境变量有:\n\n* PATH :指定命令的搜索路径\n\n    \n    PATH声明用法:\n    PATH=$PATH:<PATH 1>:<PATH 2>:<PATH 3>:------:<PATH n>\n    export PATH\n    你可以自己加上指定的路径,中间用冒号隔开.环境变量更改后,在用户下次登录时生效.\n    echo $path 查看当前系统path路径\n    \n* HOME: 指定用户的主工作目录(即用户登陆到Linux系统中时,默认的用户目录)    \n* HISTSIZE: 指保存历史命令记录的条数.\n* LOGNAME: 指当前用户的登陆名.\n* HOSTNAME: 指定主机的名称,许多应用程序如果用到主机名的话,通常是从这个环境\n变量中来取得的\n* SHELL: 指当前用户用的是哪种shell.\n* LANG/LANGUGE: 和语言相关的环境变量,使用多种语言的用户可以修改此环境变量.\n* MAIL: 指当前用户的邮件存放目录.\n\n注意:上述变量的名字并不固定,如:HOSTNAME在某些Linux系统中可能设置成HOST\n\n二 Linux也提供了修改和查看环境变量的命令,下面通过几个实例来说明:\n\n* echo 显示某个环境变量值 echo $PATH\n* export 设置一个新的环境变量 export HELLO=\"hello\"(可以无引号)\n* env 显示所有环境变量\n* set 显示本地定义的shell变量\n* unset 清除环境变量 unset HELLO\n* readonly 设置只读环境变量 readonly HELLO\n\n三 C程序调用环境变量函数\n\n* getenv() 返回一个环境变量.\n* setenv() 设置一个环境变量.\n* unsetenv() 清除一个环境变量.\n\n    \n    \n","slug":"linux环境变量总结","published":1,"updated":"2018-05-28T06:37:42.107Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jvz000e35fyhodgz4k3","content":"<h2 id=\"引用https-www-jianshu-com-p-ac2bc0ad3d74\"><a href=\"#引用https-www-jianshu-com-p-ac2bc0ad3d74\" class=\"headerlink\" title=\"引用https://www.jianshu.com/p/ac2bc0ad3d74\"></a>引用<a href=\"https://www.jianshu.com/p/ac2bc0ad3d74\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/ac2bc0ad3d74</a></h2><p>Linux是一个多用户多任务的操作系统,可以在Linux中为不同的用户设置不同的运行环境,<br>具体做法是设置不同用户的环境变量.</p>\n<h2 id=\"Linux环境变量分类\"><a href=\"#Linux环境变量分类\" class=\"headerlink\" title=\"Linux环境变量分类\"></a>Linux环境变量分类</h2><p>一 按照生命周期来分,Linux环境变量可以分为两类:<br>1 永久的:需要用户修改相关的配置文件,变量永久生效.<br>2 临时的:用户利用export命令,在当前终端下声明环境变量,关闭shell终端失效.</p>\n<p>二 按照作用域来分,Linux环境变量可以分为:<br>1 系统环境变量:系统环境变量对系统中的所有用户都有效.<br>2 用户环境变量:顾名思义,这种类型的环境变量只对特定的用户有效.</p>\n<h2 id=\"Linux设置环境变量的方法\"><a href=\"#Linux设置环境变量的方法\" class=\"headerlink\" title=\"Linux设置环境变量的方法\"></a>Linux设置环境变量的方法</h2><p>一 在/etc/profile文件中增加变量,改变量将会对Linux下所有用户有效,并且是永久的.</p>\n<p>example:</p>\n<pre><code>vim /etc/profile    \nexport CLASSPATH=./JAVA_HOME/lib;$JAVA_HOME/jre/lib\n</code></pre><p>注意:修改文件后要想马上生效还要运行$ source ~/.bash_profile不然只能在下次<br>重进此用户是生效.</p>\n<p>二 在用户目录下的.bash_profile文件中增加变量[对单一用户生效(永久的)]<br>用vim ~/.bash_profile文件中增加变量,改变仅会对当前用户有效,并且是”永久的”.</p>\n<pre><code>vim ~/.bash.profile\nexport CLASSPATH=./JAVA_HOME/lib;$JAVA_HOME/jre/lib\n</code></pre><p>注意:修改文件后要想马上生效还要运行$ source ~/.bash_profile不然只能在下次<br>重进此用户时生效.</p>\n<p>三 直接运行export命令定义变量[只对当前shell(bash)有效(临时的),]<br>在shell的命令行下直接使用   export 变量名=变量值<br>定义变量，该变量只在当前的shell（BASH）或其子shell（BASH）下是有效的，<br>shell关闭了，变量也就失效了，再打开新shell时就没有这个变量，需要使用的<br>话还需要重新定义。</p>\n<h2 id=\"Linux环境变量使用\"><a href=\"#Linux环境变量使用\" class=\"headerlink\" title=\"Linux环境变量使用\"></a>Linux环境变量使用</h2><p>一 Linux中常见的环境变量有:</p>\n<ul>\n<li>PATH :指定命令的搜索路径</li>\n</ul>\n<pre><code>PATH声明用法:\nPATH=$PATH:&lt;PATH 1&gt;:&lt;PATH 2&gt;:&lt;PATH 3&gt;:------:&lt;PATH n&gt;\nexport PATH\n你可以自己加上指定的路径,中间用冒号隔开.环境变量更改后,在用户下次登录时生效.\necho $path 查看当前系统path路径\n</code></pre><ul>\n<li>HOME: 指定用户的主工作目录(即用户登陆到Linux系统中时,默认的用户目录)    </li>\n<li>HISTSIZE: 指保存历史命令记录的条数.</li>\n<li>LOGNAME: 指当前用户的登陆名.</li>\n<li>HOSTNAME: 指定主机的名称,许多应用程序如果用到主机名的话,通常是从这个环境<br>变量中来取得的</li>\n<li>SHELL: 指当前用户用的是哪种shell.</li>\n<li>LANG/LANGUGE: 和语言相关的环境变量,使用多种语言的用户可以修改此环境变量.</li>\n<li>MAIL: 指当前用户的邮件存放目录.</li>\n</ul>\n<p>注意:上述变量的名字并不固定,如:HOSTNAME在某些Linux系统中可能设置成HOST</p>\n<p>二 Linux也提供了修改和查看环境变量的命令,下面通过几个实例来说明:</p>\n<ul>\n<li>echo 显示某个环境变量值 echo $PATH</li>\n<li>export 设置一个新的环境变量 export HELLO=”hello”(可以无引号)</li>\n<li>env 显示所有环境变量</li>\n<li>set 显示本地定义的shell变量</li>\n<li>unset 清除环境变量 unset HELLO</li>\n<li>readonly 设置只读环境变量 readonly HELLO</li>\n</ul>\n<p>三 C程序调用环境变量函数</p>\n<ul>\n<li>getenv() 返回一个环境变量.</li>\n<li>setenv() 设置一个环境变量.</li>\n<li>unsetenv() 清除一个环境变量.</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"引用https-www-jianshu-com-p-ac2bc0ad3d74\"><a href=\"#引用https-www-jianshu-com-p-ac2bc0ad3d74\" class=\"headerlink\" title=\"引用https://www.jianshu.com/p/ac2bc0ad3d74\"></a>引用<a href=\"https://www.jianshu.com/p/ac2bc0ad3d74\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/ac2bc0ad3d74</a></h2><p>Linux是一个多用户多任务的操作系统,可以在Linux中为不同的用户设置不同的运行环境,<br>具体做法是设置不同用户的环境变量.</p>\n<h2 id=\"Linux环境变量分类\"><a href=\"#Linux环境变量分类\" class=\"headerlink\" title=\"Linux环境变量分类\"></a>Linux环境变量分类</h2><p>一 按照生命周期来分,Linux环境变量可以分为两类:<br>1 永久的:需要用户修改相关的配置文件,变量永久生效.<br>2 临时的:用户利用export命令,在当前终端下声明环境变量,关闭shell终端失效.</p>\n<p>二 按照作用域来分,Linux环境变量可以分为:<br>1 系统环境变量:系统环境变量对系统中的所有用户都有效.<br>2 用户环境变量:顾名思义,这种类型的环境变量只对特定的用户有效.</p>\n<h2 id=\"Linux设置环境变量的方法\"><a href=\"#Linux设置环境变量的方法\" class=\"headerlink\" title=\"Linux设置环境变量的方法\"></a>Linux设置环境变量的方法</h2><p>一 在/etc/profile文件中增加变量,改变量将会对Linux下所有用户有效,并且是永久的.</p>\n<p>example:</p>\n<pre><code>vim /etc/profile    \nexport CLASSPATH=./JAVA_HOME/lib;$JAVA_HOME/jre/lib\n</code></pre><p>注意:修改文件后要想马上生效还要运行$ source ~/.bash_profile不然只能在下次<br>重进此用户是生效.</p>\n<p>二 在用户目录下的.bash_profile文件中增加变量[对单一用户生效(永久的)]<br>用vim ~/.bash_profile文件中增加变量,改变仅会对当前用户有效,并且是”永久的”.</p>\n<pre><code>vim ~/.bash.profile\nexport CLASSPATH=./JAVA_HOME/lib;$JAVA_HOME/jre/lib\n</code></pre><p>注意:修改文件后要想马上生效还要运行$ source ~/.bash_profile不然只能在下次<br>重进此用户时生效.</p>\n<p>三 直接运行export命令定义变量[只对当前shell(bash)有效(临时的),]<br>在shell的命令行下直接使用   export 变量名=变量值<br>定义变量，该变量只在当前的shell（BASH）或其子shell（BASH）下是有效的，<br>shell关闭了，变量也就失效了，再打开新shell时就没有这个变量，需要使用的<br>话还需要重新定义。</p>\n<h2 id=\"Linux环境变量使用\"><a href=\"#Linux环境变量使用\" class=\"headerlink\" title=\"Linux环境变量使用\"></a>Linux环境变量使用</h2><p>一 Linux中常见的环境变量有:</p>\n<ul>\n<li>PATH :指定命令的搜索路径</li>\n</ul>\n<pre><code>PATH声明用法:\nPATH=$PATH:&lt;PATH 1&gt;:&lt;PATH 2&gt;:&lt;PATH 3&gt;:------:&lt;PATH n&gt;\nexport PATH\n你可以自己加上指定的路径,中间用冒号隔开.环境变量更改后,在用户下次登录时生效.\necho $path 查看当前系统path路径\n</code></pre><ul>\n<li>HOME: 指定用户的主工作目录(即用户登陆到Linux系统中时,默认的用户目录)    </li>\n<li>HISTSIZE: 指保存历史命令记录的条数.</li>\n<li>LOGNAME: 指当前用户的登陆名.</li>\n<li>HOSTNAME: 指定主机的名称,许多应用程序如果用到主机名的话,通常是从这个环境<br>变量中来取得的</li>\n<li>SHELL: 指当前用户用的是哪种shell.</li>\n<li>LANG/LANGUGE: 和语言相关的环境变量,使用多种语言的用户可以修改此环境变量.</li>\n<li>MAIL: 指当前用户的邮件存放目录.</li>\n</ul>\n<p>注意:上述变量的名字并不固定,如:HOSTNAME在某些Linux系统中可能设置成HOST</p>\n<p>二 Linux也提供了修改和查看环境变量的命令,下面通过几个实例来说明:</p>\n<ul>\n<li>echo 显示某个环境变量值 echo $PATH</li>\n<li>export 设置一个新的环境变量 export HELLO=”hello”(可以无引号)</li>\n<li>env 显示所有环境变量</li>\n<li>set 显示本地定义的shell变量</li>\n<li>unset 清除环境变量 unset HELLO</li>\n<li>readonly 设置只读环境变量 readonly HELLO</li>\n</ul>\n<p>三 C程序调用环境变量函数</p>\n<ul>\n<li>getenv() 返回一个环境变量.</li>\n<li>setenv() 设置一个环境变量.</li>\n<li>unsetenv() 清除一个环境变量.</li>\n</ul>\n"},{"title":"hhkb配置Mac","date":"2018-05-07T03:04:52.000Z","_content":"\n## 引用https://www.douban.com/note/657191565/\n\nPro2,总共有60个 按键\n\n方向键为\n\n上: Fn + [\n\n下: Fn + /\n\n左: Fn + ;\n\n右: Fn + '\n\n\n光标移动的快捷键就和Mac系统一致:\n\n上一行: ctrl+p\n\n下一行: ctrl+n\n\n跳到行首: ctrl+a\n\n\n\n\n\n","source":"_posts/hhkb配置Mac.md","raw":"---\ntitle: hhkb配置Mac\ndate: 2018-05-07 11:04:52\ntags:\n---\n\n## 引用https://www.douban.com/note/657191565/\n\nPro2,总共有60个 按键\n\n方向键为\n\n上: Fn + [\n\n下: Fn + /\n\n左: Fn + ;\n\n右: Fn + '\n\n\n光标移动的快捷键就和Mac系统一致:\n\n上一行: ctrl+p\n\n下一行: ctrl+n\n\n跳到行首: ctrl+a\n\n\n\n\n\n","slug":"hhkb配置Mac","published":1,"updated":"2018-05-07T05:56:42.281Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jw0000f35fymtt5s2w1","content":"<h2 id=\"引用https-www-douban-com-note-657191565\"><a href=\"#引用https-www-douban-com-note-657191565\" class=\"headerlink\" title=\"引用https://www.douban.com/note/657191565/\"></a>引用<a href=\"https://www.douban.com/note/657191565/\" target=\"_blank\" rel=\"noopener\">https://www.douban.com/note/657191565/</a></h2><p>Pro2,总共有60个 按键</p>\n<p>方向键为</p>\n<p>上: Fn + [</p>\n<p>下: Fn + /</p>\n<p>左: Fn + ;</p>\n<p>右: Fn + ‘</p>\n<p>光标移动的快捷键就和Mac系统一致:</p>\n<p>上一行: ctrl+p</p>\n<p>下一行: ctrl+n</p>\n<p>跳到行首: ctrl+a</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"引用https-www-douban-com-note-657191565\"><a href=\"#引用https-www-douban-com-note-657191565\" class=\"headerlink\" title=\"引用https://www.douban.com/note/657191565/\"></a>引用<a href=\"https://www.douban.com/note/657191565/\" target=\"_blank\" rel=\"noopener\">https://www.douban.com/note/657191565/</a></h2><p>Pro2,总共有60个 按键</p>\n<p>方向键为</p>\n<p>上: Fn + [</p>\n<p>下: Fn + /</p>\n<p>左: Fn + ;</p>\n<p>右: Fn + ‘</p>\n<p>光标移动的快捷键就和Mac系统一致:</p>\n<p>上一行: ctrl+p</p>\n<p>下一行: ctrl+n</p>\n<p>跳到行首: ctrl+a</p>\n"},{"title":"mac下chrome快捷键","date":"2018-05-09T08:38:33.000Z","_content":"\nChrome在grwin环境下的刷新是F5,强制刷新是Ctrl+F5\n\nMac下Chrome的刷新是command+R,强制刷新为command+shift+R\n\n\noption+shift+可以打出(logo)\n\n## 引用 https://blog.csdn.net/fjh658/article/details/8860967\n\n## 标签页和窗口快捷键\n\n\n| 按键 | 作用 | \n| :-- | :-- | \n| `⌘+N` | `打开新窗口` |\n| `⌘+T` | `打开新标签` |\n| `⌘+shift+N` | `在隐身模式下打开新窗口` |\n| `按 ⌘+O，然后选择文件` | `在 Google Chrome 浏览器中打开计算机中的文件。` |\n| `按住 ⌘ 键，然后点击链接。或用鼠标中键（或鼠标滚轮）点击链接。` | `从后台在新标签页中打开链接。` |\n| `按住 ⌘+Shift 键，然后点击链接。或按住 Shift 的同时用鼠标中键（或鼠标滚轮）点击链接。` | `在新标签页中打开链接并切换到刚打开的标签页。` |\n| `按住 Shift 键，然后点击链接。` | `在新窗口中打开链接。` |\n| `⌘+Shift+T` | `重新打开上次关闭的标签页。Google Chrome 浏览器可记住最近关闭的 10 个标签页。` |\n| `将标签页拖出标签栏。\t` | `在新窗口中打开标签页。` |\n| `将标签页从标签栏拖到现有窗口中。` | `在现有窗口中打开标签页。` |\n| `同时按 ⌘+Option 和左或右箭头键。\t` | `左右切换标签页。` |\n| `⌘+W` | `关闭当前标签页或弹出窗口。` |\n| `⌘+Shift+W\t` | `关闭当前窗口。` |\n| `⌘+Y` | `打开历史记录` |\n| `按 Delete 或 ⌘-[\t` | `转到当前标签页的上一页浏览历史记录。` |\n| `按 Shift-Delete 或 ⌘-]\t。` | `转到当前标签页的下一页浏览历史记录。` |\n| `按住 Shift，然后点击窗口左上方的 + 按钮。\t` | `最大化窗口。` |\n| `⌘+M\t` | `最小化窗口。` |\n| `⌘+H` | `隐藏chrome浏览器` |\n| `⌘+option+H` | `隐藏其他所有窗口` |\n| `⌘+Q` | `关闭浏览器` |\n| `⌘+Shift+B` | `打开和关闭书签栏` |\n| `⌘+Option+B` | `打开书签管理器` |\n| `⌘-` | `打开偏好设置对话框` |\n| `⌘+Y` | `打开历史记录` |\n| `⌘+shift+J` | `打开下载内容页面` |\n| `⌘+shift+delete` | `打开清除浏览记录对话框` |\n| `⌘+shift+M` | `在多个用户之间切换` |\n| `输入搜索词,然后按Enter` | `使用默认搜索引擎进行搜索` |\n| `输入搜索引擎关键字,按空格键,再输入搜索字词,再按Enter` | `使用与关键字相关联的搜索引擎进行搜索` |\n| `首先输入搜索引擎网址,然后在系统提示时按Tab,输入搜索字词,再按Enter` | `使用与网址相关联的搜索引擎进行搜索` |\n| `输入网址，然后按 ⌘-Enter。\t` | `在新后台标签页中打开网址。` |\n| `⌘-L\t` | `突出显示网址。` |\n| `⌘-Option-F\t` | `将“?”置于地址栏中。在问号后输入搜索字词可用默认搜索引擎执行搜索。` |\n| `同时按 Option 和向左箭头键。\t` | `将光标移到地址栏中的前一个关键字词` |\n| `同时按 Option 和向右箭头键。\t` | `在地址栏中将光标移到下一个关键字词` |\n| `同时按 Shift-Option 和向左箭头键。\t` | `在地址栏中突出显示上一关键字词` |\n| `同时按 Shift-Option 和向右箭头键。\t` | `在地址栏中突出显示下一关键字词` |\n| `⌘-Delete\t` | `在地址栏中删除光标前的关键字词` |\n| `用键盘上的方向键从地址栏下拉菜单中选择一个条目，然后按 Shift-Fn-Delete。\t` | `从浏览历史记录中删除所选条目（如果可以）。` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/mac下chrome快捷键.md","raw":"---\ntitle: mac下chrome快捷键\ndate: 2018-05-09 16:38:33\ntags:\n---\n\nChrome在grwin环境下的刷新是F5,强制刷新是Ctrl+F5\n\nMac下Chrome的刷新是command+R,强制刷新为command+shift+R\n\n\noption+shift+可以打出(logo)\n\n## 引用 https://blog.csdn.net/fjh658/article/details/8860967\n\n## 标签页和窗口快捷键\n\n\n| 按键 | 作用 | \n| :-- | :-- | \n| `⌘+N` | `打开新窗口` |\n| `⌘+T` | `打开新标签` |\n| `⌘+shift+N` | `在隐身模式下打开新窗口` |\n| `按 ⌘+O，然后选择文件` | `在 Google Chrome 浏览器中打开计算机中的文件。` |\n| `按住 ⌘ 键，然后点击链接。或用鼠标中键（或鼠标滚轮）点击链接。` | `从后台在新标签页中打开链接。` |\n| `按住 ⌘+Shift 键，然后点击链接。或按住 Shift 的同时用鼠标中键（或鼠标滚轮）点击链接。` | `在新标签页中打开链接并切换到刚打开的标签页。` |\n| `按住 Shift 键，然后点击链接。` | `在新窗口中打开链接。` |\n| `⌘+Shift+T` | `重新打开上次关闭的标签页。Google Chrome 浏览器可记住最近关闭的 10 个标签页。` |\n| `将标签页拖出标签栏。\t` | `在新窗口中打开标签页。` |\n| `将标签页从标签栏拖到现有窗口中。` | `在现有窗口中打开标签页。` |\n| `同时按 ⌘+Option 和左或右箭头键。\t` | `左右切换标签页。` |\n| `⌘+W` | `关闭当前标签页或弹出窗口。` |\n| `⌘+Shift+W\t` | `关闭当前窗口。` |\n| `⌘+Y` | `打开历史记录` |\n| `按 Delete 或 ⌘-[\t` | `转到当前标签页的上一页浏览历史记录。` |\n| `按 Shift-Delete 或 ⌘-]\t。` | `转到当前标签页的下一页浏览历史记录。` |\n| `按住 Shift，然后点击窗口左上方的 + 按钮。\t` | `最大化窗口。` |\n| `⌘+M\t` | `最小化窗口。` |\n| `⌘+H` | `隐藏chrome浏览器` |\n| `⌘+option+H` | `隐藏其他所有窗口` |\n| `⌘+Q` | `关闭浏览器` |\n| `⌘+Shift+B` | `打开和关闭书签栏` |\n| `⌘+Option+B` | `打开书签管理器` |\n| `⌘-` | `打开偏好设置对话框` |\n| `⌘+Y` | `打开历史记录` |\n| `⌘+shift+J` | `打开下载内容页面` |\n| `⌘+shift+delete` | `打开清除浏览记录对话框` |\n| `⌘+shift+M` | `在多个用户之间切换` |\n| `输入搜索词,然后按Enter` | `使用默认搜索引擎进行搜索` |\n| `输入搜索引擎关键字,按空格键,再输入搜索字词,再按Enter` | `使用与关键字相关联的搜索引擎进行搜索` |\n| `首先输入搜索引擎网址,然后在系统提示时按Tab,输入搜索字词,再按Enter` | `使用与网址相关联的搜索引擎进行搜索` |\n| `输入网址，然后按 ⌘-Enter。\t` | `在新后台标签页中打开网址。` |\n| `⌘-L\t` | `突出显示网址。` |\n| `⌘-Option-F\t` | `将“?”置于地址栏中。在问号后输入搜索字词可用默认搜索引擎执行搜索。` |\n| `同时按 Option 和向左箭头键。\t` | `将光标移到地址栏中的前一个关键字词` |\n| `同时按 Option 和向右箭头键。\t` | `在地址栏中将光标移到下一个关键字词` |\n| `同时按 Shift-Option 和向左箭头键。\t` | `在地址栏中突出显示上一关键字词` |\n| `同时按 Shift-Option 和向右箭头键。\t` | `在地址栏中突出显示下一关键字词` |\n| `⌘-Delete\t` | `在地址栏中删除光标前的关键字词` |\n| `用键盘上的方向键从地址栏下拉菜单中选择一个条目，然后按 Shift-Fn-Delete。\t` | `从浏览历史记录中删除所选条目（如果可以）。` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n| `⌘+` | `tt` |\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"mac下chrome快捷键","published":1,"updated":"2018-05-14T06:37:20.941Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jw1000g35fyk89umz3m","content":"<p>Chrome在grwin环境下的刷新是F5,强制刷新是Ctrl+F5</p>\n<p>Mac下Chrome的刷新是command+R,强制刷新为command+shift+R</p>\n<p>option+shift+可以打出(logo)</p>\n<h2 id=\"引用-https-blog-csdn-net-fjh658-article-details-8860967\"><a href=\"#引用-https-blog-csdn-net-fjh658-article-details-8860967\" class=\"headerlink\" title=\"引用 https://blog.csdn.net/fjh658/article/details/8860967\"></a>引用 <a href=\"https://blog.csdn.net/fjh658/article/details/8860967\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/fjh658/article/details/8860967</a></h2><h2 id=\"标签页和窗口快捷键\"><a href=\"#标签页和窗口快捷键\" class=\"headerlink\" title=\"标签页和窗口快捷键\"></a>标签页和窗口快捷键</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">按键</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>⌘+N</code></td>\n<td style=\"text-align:left\"><code>打开新窗口</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+T</code></td>\n<td style=\"text-align:left\"><code>打开新标签</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+shift+N</code></td>\n<td style=\"text-align:left\"><code>在隐身模式下打开新窗口</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>按 ⌘+O，然后选择文件</code></td>\n<td style=\"text-align:left\"><code>在 Google Chrome 浏览器中打开计算机中的文件。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>按住 ⌘ 键，然后点击链接。或用鼠标中键（或鼠标滚轮）点击链接。</code></td>\n<td style=\"text-align:left\"><code>从后台在新标签页中打开链接。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>按住 ⌘+Shift 键，然后点击链接。或按住 Shift 的同时用鼠标中键（或鼠标滚轮）点击链接。</code></td>\n<td style=\"text-align:left\"><code>在新标签页中打开链接并切换到刚打开的标签页。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>按住 Shift 键，然后点击链接。</code></td>\n<td style=\"text-align:left\"><code>在新窗口中打开链接。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+Shift+T</code></td>\n<td style=\"text-align:left\"><code>重新打开上次关闭的标签页。Google Chrome 浏览器可记住最近关闭的 10 个标签页。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>将标签页拖出标签栏。</code></td>\n<td style=\"text-align:left\"><code>在新窗口中打开标签页。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>将标签页从标签栏拖到现有窗口中。</code></td>\n<td style=\"text-align:left\"><code>在现有窗口中打开标签页。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>同时按 ⌘+Option 和左或右箭头键。</code></td>\n<td style=\"text-align:left\"><code>左右切换标签页。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+W</code></td>\n<td style=\"text-align:left\"><code>关闭当前标签页或弹出窗口。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+Shift+W</code></td>\n<td style=\"text-align:left\"><code>关闭当前窗口。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+Y</code></td>\n<td style=\"text-align:left\"><code>打开历史记录</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>按 Delete 或 ⌘-[</code></td>\n<td style=\"text-align:left\"><code>转到当前标签页的上一页浏览历史记录。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>按 Shift-Delete 或 ⌘-]    。</code></td>\n<td style=\"text-align:left\"><code>转到当前标签页的下一页浏览历史记录。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>按住 Shift，然后点击窗口左上方的 + 按钮。</code></td>\n<td style=\"text-align:left\"><code>最大化窗口。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+M</code></td>\n<td style=\"text-align:left\"><code>最小化窗口。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+H</code></td>\n<td style=\"text-align:left\"><code>隐藏chrome浏览器</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+option+H</code></td>\n<td style=\"text-align:left\"><code>隐藏其他所有窗口</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+Q</code></td>\n<td style=\"text-align:left\"><code>关闭浏览器</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+Shift+B</code></td>\n<td style=\"text-align:left\"><code>打开和关闭书签栏</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+Option+B</code></td>\n<td style=\"text-align:left\"><code>打开书签管理器</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘-</code></td>\n<td style=\"text-align:left\"><code>打开偏好设置对话框</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+Y</code></td>\n<td style=\"text-align:left\"><code>打开历史记录</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+shift+J</code></td>\n<td style=\"text-align:left\"><code>打开下载内容页面</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+shift+delete</code></td>\n<td style=\"text-align:left\"><code>打开清除浏览记录对话框</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+shift+M</code></td>\n<td style=\"text-align:left\"><code>在多个用户之间切换</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>输入搜索词,然后按Enter</code></td>\n<td style=\"text-align:left\"><code>使用默认搜索引擎进行搜索</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>输入搜索引擎关键字,按空格键,再输入搜索字词,再按Enter</code></td>\n<td style=\"text-align:left\"><code>使用与关键字相关联的搜索引擎进行搜索</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>首先输入搜索引擎网址,然后在系统提示时按Tab,输入搜索字词,再按Enter</code></td>\n<td style=\"text-align:left\"><code>使用与网址相关联的搜索引擎进行搜索</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>输入网址，然后按 ⌘-Enter。</code></td>\n<td style=\"text-align:left\"><code>在新后台标签页中打开网址。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘-L</code></td>\n<td style=\"text-align:left\"><code>突出显示网址。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘-Option-F</code></td>\n<td style=\"text-align:left\"><code>将“?”置于地址栏中。在问号后输入搜索字词可用默认搜索引擎执行搜索。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>同时按 Option 和向左箭头键。</code></td>\n<td style=\"text-align:left\"><code>将光标移到地址栏中的前一个关键字词</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>同时按 Option 和向右箭头键。</code></td>\n<td style=\"text-align:left\"><code>在地址栏中将光标移到下一个关键字词</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>同时按 Shift-Option 和向左箭头键。</code></td>\n<td style=\"text-align:left\"><code>在地址栏中突出显示上一关键字词</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>同时按 Shift-Option 和向右箭头键。</code></td>\n<td style=\"text-align:left\"><code>在地址栏中突出显示下一关键字词</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘-Delete</code></td>\n<td style=\"text-align:left\"><code>在地址栏中删除光标前的关键字词</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>用键盘上的方向键从地址栏下拉菜单中选择一个条目，然后按 Shift-Fn-Delete。</code></td>\n<td style=\"text-align:left\"><code>从浏览历史记录中删除所选条目（如果可以）。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<p>Chrome在grwin环境下的刷新是F5,强制刷新是Ctrl+F5</p>\n<p>Mac下Chrome的刷新是command+R,强制刷新为command+shift+R</p>\n<p>option+shift+可以打出(logo)</p>\n<h2 id=\"引用-https-blog-csdn-net-fjh658-article-details-8860967\"><a href=\"#引用-https-blog-csdn-net-fjh658-article-details-8860967\" class=\"headerlink\" title=\"引用 https://blog.csdn.net/fjh658/article/details/8860967\"></a>引用 <a href=\"https://blog.csdn.net/fjh658/article/details/8860967\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/fjh658/article/details/8860967</a></h2><h2 id=\"标签页和窗口快捷键\"><a href=\"#标签页和窗口快捷键\" class=\"headerlink\" title=\"标签页和窗口快捷键\"></a>标签页和窗口快捷键</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">按键</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>⌘+N</code></td>\n<td style=\"text-align:left\"><code>打开新窗口</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+T</code></td>\n<td style=\"text-align:left\"><code>打开新标签</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+shift+N</code></td>\n<td style=\"text-align:left\"><code>在隐身模式下打开新窗口</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>按 ⌘+O，然后选择文件</code></td>\n<td style=\"text-align:left\"><code>在 Google Chrome 浏览器中打开计算机中的文件。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>按住 ⌘ 键，然后点击链接。或用鼠标中键（或鼠标滚轮）点击链接。</code></td>\n<td style=\"text-align:left\"><code>从后台在新标签页中打开链接。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>按住 ⌘+Shift 键，然后点击链接。或按住 Shift 的同时用鼠标中键（或鼠标滚轮）点击链接。</code></td>\n<td style=\"text-align:left\"><code>在新标签页中打开链接并切换到刚打开的标签页。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>按住 Shift 键，然后点击链接。</code></td>\n<td style=\"text-align:left\"><code>在新窗口中打开链接。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+Shift+T</code></td>\n<td style=\"text-align:left\"><code>重新打开上次关闭的标签页。Google Chrome 浏览器可记住最近关闭的 10 个标签页。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>将标签页拖出标签栏。</code></td>\n<td style=\"text-align:left\"><code>在新窗口中打开标签页。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>将标签页从标签栏拖到现有窗口中。</code></td>\n<td style=\"text-align:left\"><code>在现有窗口中打开标签页。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>同时按 ⌘+Option 和左或右箭头键。</code></td>\n<td style=\"text-align:left\"><code>左右切换标签页。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+W</code></td>\n<td style=\"text-align:left\"><code>关闭当前标签页或弹出窗口。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+Shift+W</code></td>\n<td style=\"text-align:left\"><code>关闭当前窗口。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+Y</code></td>\n<td style=\"text-align:left\"><code>打开历史记录</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>按 Delete 或 ⌘-[</code></td>\n<td style=\"text-align:left\"><code>转到当前标签页的上一页浏览历史记录。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>按 Shift-Delete 或 ⌘-]    。</code></td>\n<td style=\"text-align:left\"><code>转到当前标签页的下一页浏览历史记录。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>按住 Shift，然后点击窗口左上方的 + 按钮。</code></td>\n<td style=\"text-align:left\"><code>最大化窗口。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+M</code></td>\n<td style=\"text-align:left\"><code>最小化窗口。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+H</code></td>\n<td style=\"text-align:left\"><code>隐藏chrome浏览器</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+option+H</code></td>\n<td style=\"text-align:left\"><code>隐藏其他所有窗口</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+Q</code></td>\n<td style=\"text-align:left\"><code>关闭浏览器</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+Shift+B</code></td>\n<td style=\"text-align:left\"><code>打开和关闭书签栏</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+Option+B</code></td>\n<td style=\"text-align:left\"><code>打开书签管理器</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘-</code></td>\n<td style=\"text-align:left\"><code>打开偏好设置对话框</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+Y</code></td>\n<td style=\"text-align:left\"><code>打开历史记录</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+shift+J</code></td>\n<td style=\"text-align:left\"><code>打开下载内容页面</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+shift+delete</code></td>\n<td style=\"text-align:left\"><code>打开清除浏览记录对话框</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+shift+M</code></td>\n<td style=\"text-align:left\"><code>在多个用户之间切换</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>输入搜索词,然后按Enter</code></td>\n<td style=\"text-align:left\"><code>使用默认搜索引擎进行搜索</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>输入搜索引擎关键字,按空格键,再输入搜索字词,再按Enter</code></td>\n<td style=\"text-align:left\"><code>使用与关键字相关联的搜索引擎进行搜索</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>首先输入搜索引擎网址,然后在系统提示时按Tab,输入搜索字词,再按Enter</code></td>\n<td style=\"text-align:left\"><code>使用与网址相关联的搜索引擎进行搜索</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>输入网址，然后按 ⌘-Enter。</code></td>\n<td style=\"text-align:left\"><code>在新后台标签页中打开网址。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘-L</code></td>\n<td style=\"text-align:left\"><code>突出显示网址。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘-Option-F</code></td>\n<td style=\"text-align:left\"><code>将“?”置于地址栏中。在问号后输入搜索字词可用默认搜索引擎执行搜索。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>同时按 Option 和向左箭头键。</code></td>\n<td style=\"text-align:left\"><code>将光标移到地址栏中的前一个关键字词</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>同时按 Option 和向右箭头键。</code></td>\n<td style=\"text-align:left\"><code>在地址栏中将光标移到下一个关键字词</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>同时按 Shift-Option 和向左箭头键。</code></td>\n<td style=\"text-align:left\"><code>在地址栏中突出显示上一关键字词</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>同时按 Shift-Option 和向右箭头键。</code></td>\n<td style=\"text-align:left\"><code>在地址栏中突出显示下一关键字词</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘-Delete</code></td>\n<td style=\"text-align:left\"><code>在地址栏中删除光标前的关键字词</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>用键盘上的方向键从地址栏下拉菜单中选择一个条目，然后按 Shift-Fn-Delete。</code></td>\n<td style=\"text-align:left\"><code>从浏览历史记录中删除所选条目（如果可以）。</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>⌘+</code></td>\n<td style=\"text-align:left\"><code>tt</code></td>\n</tr>\n</tbody>\n</table>\n"},{"title":"php中unset详解","date":"2018-06-20T00:59:33.000Z","_content":"\nunset()经常会被用到,用于销毁指定的变量,但它有自己的行为模式,如果\n不仔细的话可能被中文解释给迷惑:\n\n先来看看官方文档的说法:\n\nunset ---- unset a given variable\n\nvoid unset(mixed $var [,mixed $...]);\n\nparameters:\n\nvar:The variable to be unset. //要unset的变量\n\n...Anther variable... // 其他需要unset的变量\n\nreturn Values:No value is returned.  //unset不返回值\n\n\nBecause this is a language construct and not a function,it\ncannot be called using variable functions\n\n//unset()是语言结构,不是函数,因此不能被函数变量调用,具体参照函数变量.\n\n使用function_exists('unset')返回的false,以此证明unset并不是一个函数\n,所以无法使用$fun='unset';$fun()的方式调用unset()\n\nit is possible to unset even object properties visible in current context.\n\n// 通用环境下unset可以销毁对象或者对象的可见属性(public)\n\nIt is not possible to unset $this inside on object method since PHP5\n\n// 在PHP5之前unset无法销毁对象中的$this方法\n\nwhen using unset() on inaccessible object properties,the _unset()\noverloading method will be called,if declare.\n\n当unset()无法销毁对象中的属性,例如私有属性,保护属性,那么会自动加载对象中的_unset\n方法.\n\ndescription:\n\nunset()destroys the specified variables. //unset()销毁指定的变量\n\nThe behavior of unset()inside of a function can vary depending\n\non what type of variable you are attempting to destroy.\n\n// unset()的行为在函数内部可以根据你所指定销毁的变量类型变化.\n\n\n情况一:\n\nif a globalized variable is unset() inside of a function,only the local\nvariable is destroyed.The variable in the calling environment will \nretain the same value as before unset() was called.\n\n如果在函数内使用一个global使其全局化的变量,使用unset进行销毁,那么只有局部的\n变量会被销毁,在调用环境的变量将会保留没有unset()销毁之前的调用的变量值.\n\nthe example:\n\n    <?php  \n    function destroy_foo()   \n    {  \n        global $foo;  \n        unset($foo);  \n    }  \n      \n    $foo = 'bar';  \n    destroy_foo();  \n    echo $foo;  \n    ?>  \n    \nthe above example will output:bar\n\n这是官方文档的例子,可能这样还是不太明显,把上面的例子改成下面这样,一切就很清晰了.\n\n    <?php   \n    function des(){  \n        global $foo;  \n        $foo='bars';  \n        unset($foo);  \n        echo $foo;  \n    }  \n    $foo='bar';  \n    echo \"The globalized variable is unset() inside of a function:\";  \n    des();  \n    echo \"<br/>\";  \n    echo \"The variable in the calling environment:\";  \n    echo $foo;  \n\n\n\n","source":"_posts/php中unset详解.md","raw":"---\ntitle: php中unset详解\ndate: 2018-06-20 08:59:33\ntags:\n---\n\nunset()经常会被用到,用于销毁指定的变量,但它有自己的行为模式,如果\n不仔细的话可能被中文解释给迷惑:\n\n先来看看官方文档的说法:\n\nunset ---- unset a given variable\n\nvoid unset(mixed $var [,mixed $...]);\n\nparameters:\n\nvar:The variable to be unset. //要unset的变量\n\n...Anther variable... // 其他需要unset的变量\n\nreturn Values:No value is returned.  //unset不返回值\n\n\nBecause this is a language construct and not a function,it\ncannot be called using variable functions\n\n//unset()是语言结构,不是函数,因此不能被函数变量调用,具体参照函数变量.\n\n使用function_exists('unset')返回的false,以此证明unset并不是一个函数\n,所以无法使用$fun='unset';$fun()的方式调用unset()\n\nit is possible to unset even object properties visible in current context.\n\n// 通用环境下unset可以销毁对象或者对象的可见属性(public)\n\nIt is not possible to unset $this inside on object method since PHP5\n\n// 在PHP5之前unset无法销毁对象中的$this方法\n\nwhen using unset() on inaccessible object properties,the _unset()\noverloading method will be called,if declare.\n\n当unset()无法销毁对象中的属性,例如私有属性,保护属性,那么会自动加载对象中的_unset\n方法.\n\ndescription:\n\nunset()destroys the specified variables. //unset()销毁指定的变量\n\nThe behavior of unset()inside of a function can vary depending\n\non what type of variable you are attempting to destroy.\n\n// unset()的行为在函数内部可以根据你所指定销毁的变量类型变化.\n\n\n情况一:\n\nif a globalized variable is unset() inside of a function,only the local\nvariable is destroyed.The variable in the calling environment will \nretain the same value as before unset() was called.\n\n如果在函数内使用一个global使其全局化的变量,使用unset进行销毁,那么只有局部的\n变量会被销毁,在调用环境的变量将会保留没有unset()销毁之前的调用的变量值.\n\nthe example:\n\n    <?php  \n    function destroy_foo()   \n    {  \n        global $foo;  \n        unset($foo);  \n    }  \n      \n    $foo = 'bar';  \n    destroy_foo();  \n    echo $foo;  \n    ?>  \n    \nthe above example will output:bar\n\n这是官方文档的例子,可能这样还是不太明显,把上面的例子改成下面这样,一切就很清晰了.\n\n    <?php   \n    function des(){  \n        global $foo;  \n        $foo='bars';  \n        unset($foo);  \n        echo $foo;  \n    }  \n    $foo='bar';  \n    echo \"The globalized variable is unset() inside of a function:\";  \n    des();  \n    echo \"<br/>\";  \n    echo \"The variable in the calling environment:\";  \n    echo $foo;  \n\n\n\n","slug":"php中unset详解","published":1,"updated":"2018-06-20T01:30:07.368Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jw1000h35fyt46dodwq","content":"<p>unset()经常会被用到,用于销毁指定的变量,但它有自己的行为模式,如果<br>不仔细的话可能被中文解释给迷惑:</p>\n<p>先来看看官方文档的说法:</p>\n<p>unset —- unset a given variable</p>\n<p>void unset(mixed $var [,mixed $…]);</p>\n<p>parameters:</p>\n<p>var:The variable to be unset. //要unset的变量</p>\n<p>…Anther variable… // 其他需要unset的变量</p>\n<p>return Values:No value is returned.  //unset不返回值</p>\n<p>Because this is a language construct and not a function,it<br>cannot be called using variable functions</p>\n<p>//unset()是语言结构,不是函数,因此不能被函数变量调用,具体参照函数变量.</p>\n<p>使用function_exists(‘unset’)返回的false,以此证明unset并不是一个函数<br>,所以无法使用$fun=’unset’;$fun()的方式调用unset()</p>\n<p>it is possible to unset even object properties visible in current context.</p>\n<p>// 通用环境下unset可以销毁对象或者对象的可见属性(public)</p>\n<p>It is not possible to unset $this inside on object method since PHP5</p>\n<p>// 在PHP5之前unset无法销毁对象中的$this方法</p>\n<p>when using unset() on inaccessible object properties,the _unset()<br>overloading method will be called,if declare.</p>\n<p>当unset()无法销毁对象中的属性,例如私有属性,保护属性,那么会自动加载对象中的_unset<br>方法.</p>\n<p>description:</p>\n<p>unset()destroys the specified variables. //unset()销毁指定的变量</p>\n<p>The behavior of unset()inside of a function can vary depending</p>\n<p>on what type of variable you are attempting to destroy.</p>\n<p>// unset()的行为在函数内部可以根据你所指定销毁的变量类型变化.</p>\n<p>情况一:</p>\n<p>if a globalized variable is unset() inside of a function,only the local<br>variable is destroyed.The variable in the calling environment will<br>retain the same value as before unset() was called.</p>\n<p>如果在函数内使用一个global使其全局化的变量,使用unset进行销毁,那么只有局部的<br>变量会被销毁,在调用环境的变量将会保留没有unset()销毁之前的调用的变量值.</p>\n<p>the example:</p>\n<pre><code>&lt;?php  \nfunction destroy_foo()   \n{  \n    global $foo;  \n    unset($foo);  \n}  \n\n$foo = &apos;bar&apos;;  \ndestroy_foo();  \necho $foo;  \n?&gt;  \n</code></pre><p>the above example will output:bar</p>\n<p>这是官方文档的例子,可能这样还是不太明显,把上面的例子改成下面这样,一切就很清晰了.</p>\n<pre><code>&lt;?php   \nfunction des(){  \n    global $foo;  \n    $foo=&apos;bars&apos;;  \n    unset($foo);  \n    echo $foo;  \n}  \n$foo=&apos;bar&apos;;  \necho &quot;The globalized variable is unset() inside of a function:&quot;;  \ndes();  \necho &quot;&lt;br/&gt;&quot;;  \necho &quot;The variable in the calling environment:&quot;;  \necho $foo;  \n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>unset()经常会被用到,用于销毁指定的变量,但它有自己的行为模式,如果<br>不仔细的话可能被中文解释给迷惑:</p>\n<p>先来看看官方文档的说法:</p>\n<p>unset —- unset a given variable</p>\n<p>void unset(mixed $var [,mixed $…]);</p>\n<p>parameters:</p>\n<p>var:The variable to be unset. //要unset的变量</p>\n<p>…Anther variable… // 其他需要unset的变量</p>\n<p>return Values:No value is returned.  //unset不返回值</p>\n<p>Because this is a language construct and not a function,it<br>cannot be called using variable functions</p>\n<p>//unset()是语言结构,不是函数,因此不能被函数变量调用,具体参照函数变量.</p>\n<p>使用function_exists(‘unset’)返回的false,以此证明unset并不是一个函数<br>,所以无法使用$fun=’unset’;$fun()的方式调用unset()</p>\n<p>it is possible to unset even object properties visible in current context.</p>\n<p>// 通用环境下unset可以销毁对象或者对象的可见属性(public)</p>\n<p>It is not possible to unset $this inside on object method since PHP5</p>\n<p>// 在PHP5之前unset无法销毁对象中的$this方法</p>\n<p>when using unset() on inaccessible object properties,the _unset()<br>overloading method will be called,if declare.</p>\n<p>当unset()无法销毁对象中的属性,例如私有属性,保护属性,那么会自动加载对象中的_unset<br>方法.</p>\n<p>description:</p>\n<p>unset()destroys the specified variables. //unset()销毁指定的变量</p>\n<p>The behavior of unset()inside of a function can vary depending</p>\n<p>on what type of variable you are attempting to destroy.</p>\n<p>// unset()的行为在函数内部可以根据你所指定销毁的变量类型变化.</p>\n<p>情况一:</p>\n<p>if a globalized variable is unset() inside of a function,only the local<br>variable is destroyed.The variable in the calling environment will<br>retain the same value as before unset() was called.</p>\n<p>如果在函数内使用一个global使其全局化的变量,使用unset进行销毁,那么只有局部的<br>变量会被销毁,在调用环境的变量将会保留没有unset()销毁之前的调用的变量值.</p>\n<p>the example:</p>\n<pre><code>&lt;?php  \nfunction destroy_foo()   \n{  \n    global $foo;  \n    unset($foo);  \n}  \n\n$foo = &apos;bar&apos;;  \ndestroy_foo();  \necho $foo;  \n?&gt;  \n</code></pre><p>the above example will output:bar</p>\n<p>这是官方文档的例子,可能这样还是不太明显,把上面的例子改成下面这样,一切就很清晰了.</p>\n<pre><code>&lt;?php   \nfunction des(){  \n    global $foo;  \n    $foo=&apos;bars&apos;;  \n    unset($foo);  \n    echo $foo;  \n}  \n$foo=&apos;bar&apos;;  \necho &quot;The globalized variable is unset() inside of a function:&quot;;  \ndes();  \necho &quot;&lt;br/&gt;&quot;;  \necho &quot;The variable in the calling environment:&quot;;  \necho $foo;  \n</code></pre>"},{"title":"ubuntu16.04The System is running in low-graphics mode终极解决办法","date":"2018-04-26T03:49:10.000Z","_content":"\n## 问题: The system is running in low-graphics mode\n\n## 引用: https://blog.csdn.net/gpwner/article/details/79178832\n\n大道至简,找了好多答案,最后发现这种方法最简单\n\nsudo apt update\n\nsudo apt upgrade\n\n","source":"_posts/ubuntu16-04_The_system_is_running_in_low_graphics_mode终极解决办法.md","raw":"---\ntitle: ubuntu16.04The System is running in low-graphics mode终极解决办法 \ndate: 2018-04-26 11:49:10\ntags:\n---\n\n## 问题: The system is running in low-graphics mode\n\n## 引用: https://blog.csdn.net/gpwner/article/details/79178832\n\n大道至简,找了好多答案,最后发现这种方法最简单\n\nsudo apt update\n\nsudo apt upgrade\n\n","slug":"ubuntu16-04_The_system_is_running_in_low_graphics_mode终极解决办法","published":1,"updated":"2018-05-05T02:10:21.447Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jw2000i35fy3qj2fstg","content":"<h2 id=\"问题-The-system-is-running-in-low-graphics-mode\"><a href=\"#问题-The-system-is-running-in-low-graphics-mode\" class=\"headerlink\" title=\"问题: The system is running in low-graphics mode\"></a>问题: The system is running in low-graphics mode</h2><h2 id=\"引用-https-blog-csdn-net-gpwner-article-details-79178832\"><a href=\"#引用-https-blog-csdn-net-gpwner-article-details-79178832\" class=\"headerlink\" title=\"引用: https://blog.csdn.net/gpwner/article/details/79178832\"></a>引用: <a href=\"https://blog.csdn.net/gpwner/article/details/79178832\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/gpwner/article/details/79178832</a></h2><p>大道至简,找了好多答案,最后发现这种方法最简单</p>\n<p>sudo apt update</p>\n<p>sudo apt upgrade</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"问题-The-system-is-running-in-low-graphics-mode\"><a href=\"#问题-The-system-is-running-in-low-graphics-mode\" class=\"headerlink\" title=\"问题: The system is running in low-graphics mode\"></a>问题: The system is running in low-graphics mode</h2><h2 id=\"引用-https-blog-csdn-net-gpwner-article-details-79178832\"><a href=\"#引用-https-blog-csdn-net-gpwner-article-details-79178832\" class=\"headerlink\" title=\"引用: https://blog.csdn.net/gpwner/article/details/79178832\"></a>引用: <a href=\"https://blog.csdn.net/gpwner/article/details/79178832\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/gpwner/article/details/79178832</a></h2><p>大道至简,找了好多答案,最后发现这种方法最简单</p>\n<p>sudo apt update</p>\n<p>sudo apt upgrade</p>\n"},{"title":"php调用shell的方法","date":"2018-04-20T02:07:17.000Z","_content":"\n## 引用:http://www.jb51.net/article/57118.htm\n\n## 这篇文章主要介绍了PHP调用shell的方法,包括相关的原理 注意事项及函数的用法,需要的朋友可以参考下\n\n### 一 配置\n#### 查看php.ini中配置是否打开安全模式,主要是以下三个地方 \n\n* safe_mode = (这个如果是off下面两个就不用管了)\n\n* disable_functions = \n\n* safe_mode_exec_dir = \n\n### 二使用\n\n#### 由于PHP是基本是用于WEB程序开发的,所以安全性成了人们考虑的一个重要方面.于是PHP的设计者们给  PHP加了一个门:安全模式.如果运行在安全模式下,那么PHP脚本中将受到如下四个方面的限制:\n\n* 执行外部命令\n\n* 在打开文件时有些限制\n\n* 连接MYSQL数据库\n\n* 基于HTTP的认证\n\n在安全模式下,只有在特定目录中的外部程序才可以被执行,对其他程序的调用将被拒绝.这个目录可以在  PHP.ini文件中用safe_model_exex_dir指令,或在编译PHP时加上--with-exec-dir选项来指定,默认是  /usr/local/php/bin.\n\n如果你调用一个应该可以输出结果的外部命令(意思是PHP脚本没有错误),得到的却是一片空白,那么很可能   你的网管已经把PHP运行在安全模式下了.\n\n### 三如何做\n\n#### 在PHP中调用外部命令,可以用如下三种方法来实现:\n\n* 1 ) 用PHP提供的专门函数\n\n### php提供了3个专门的执行外部命令的函数: system(),exec(),passthru().\n\n\n### system()\n原型: string system(string command[,int return_var])\n\nsystem()函数和其他语言中的差不多,它执行给定的命令,输出和返回结果.第二个参数是可选的,用来得到命令执行后的状态码.\n\n例子:\n\n* system(\"/usr/local/bin/webalizer/webalizer\");\n\n### exec()\n\n原型: string exex(string command[,string array[,int return_var]])\n\nexec()函数与system()类似,也执行给定的命令,但不输出结果,而是返回结果的最后一行.虽然它只返回命令  结果的最后一行,但用第二个参数array可以得到完整的结果,方法是吧结果逐行追加到  array的结尾处.所 以如果array不是空的,在调用之前最好用unset()把它清掉.只有指定了第二个参数时,才可以用第三个参数,用来取得命令执行的状态码.\n\n例子:\n* exec(\"/bin/ls -|\");\n* exec(\"/bin/ls -|\",$res);'\n* $res是一个数据,每个元素代表结果的一行\n* exec(\"/bin/ls -|\",$res,$rc);'\n* $rc的值是命令/bin/ls -|的状态码.成功的情况下通常是0\n\n\n### passthru()\n\n  原型: void passthru(string command[,int return_var])\n  \n  passthru()只调用命令,不返回任何结果,但把命令的运行结果原样\n  地直接输出到标准输出设备上.所以passthru()函数经常用来调用像\n  pbmplus(Unix下的一个处理图片的工具,输出二进制的原始图片的流)\n  这样的程序.同样它也可以得到命令执行的状态码.\n  \n  例子\n  \n  header(\"Content-type:image/gif\");\n  passthru(\"./ppmtogif hunte.ppm\");\n\n\n","source":"_posts/php调用shell的方法.md","raw":"---\ntitle: php调用shell的方法\ndate: 2018-04-20 10:07:17\ntags:\n---\n\n## 引用:http://www.jb51.net/article/57118.htm\n\n## 这篇文章主要介绍了PHP调用shell的方法,包括相关的原理 注意事项及函数的用法,需要的朋友可以参考下\n\n### 一 配置\n#### 查看php.ini中配置是否打开安全模式,主要是以下三个地方 \n\n* safe_mode = (这个如果是off下面两个就不用管了)\n\n* disable_functions = \n\n* safe_mode_exec_dir = \n\n### 二使用\n\n#### 由于PHP是基本是用于WEB程序开发的,所以安全性成了人们考虑的一个重要方面.于是PHP的设计者们给  PHP加了一个门:安全模式.如果运行在安全模式下,那么PHP脚本中将受到如下四个方面的限制:\n\n* 执行外部命令\n\n* 在打开文件时有些限制\n\n* 连接MYSQL数据库\n\n* 基于HTTP的认证\n\n在安全模式下,只有在特定目录中的外部程序才可以被执行,对其他程序的调用将被拒绝.这个目录可以在  PHP.ini文件中用safe_model_exex_dir指令,或在编译PHP时加上--with-exec-dir选项来指定,默认是  /usr/local/php/bin.\n\n如果你调用一个应该可以输出结果的外部命令(意思是PHP脚本没有错误),得到的却是一片空白,那么很可能   你的网管已经把PHP运行在安全模式下了.\n\n### 三如何做\n\n#### 在PHP中调用外部命令,可以用如下三种方法来实现:\n\n* 1 ) 用PHP提供的专门函数\n\n### php提供了3个专门的执行外部命令的函数: system(),exec(),passthru().\n\n\n### system()\n原型: string system(string command[,int return_var])\n\nsystem()函数和其他语言中的差不多,它执行给定的命令,输出和返回结果.第二个参数是可选的,用来得到命令执行后的状态码.\n\n例子:\n\n* system(\"/usr/local/bin/webalizer/webalizer\");\n\n### exec()\n\n原型: string exex(string command[,string array[,int return_var]])\n\nexec()函数与system()类似,也执行给定的命令,但不输出结果,而是返回结果的最后一行.虽然它只返回命令  结果的最后一行,但用第二个参数array可以得到完整的结果,方法是吧结果逐行追加到  array的结尾处.所 以如果array不是空的,在调用之前最好用unset()把它清掉.只有指定了第二个参数时,才可以用第三个参数,用来取得命令执行的状态码.\n\n例子:\n* exec(\"/bin/ls -|\");\n* exec(\"/bin/ls -|\",$res);'\n* $res是一个数据,每个元素代表结果的一行\n* exec(\"/bin/ls -|\",$res,$rc);'\n* $rc的值是命令/bin/ls -|的状态码.成功的情况下通常是0\n\n\n### passthru()\n\n  原型: void passthru(string command[,int return_var])\n  \n  passthru()只调用命令,不返回任何结果,但把命令的运行结果原样\n  地直接输出到标准输出设备上.所以passthru()函数经常用来调用像\n  pbmplus(Unix下的一个处理图片的工具,输出二进制的原始图片的流)\n  这样的程序.同样它也可以得到命令执行的状态码.\n  \n  例子\n  \n  header(\"Content-type:image/gif\");\n  passthru(\"./ppmtogif hunte.ppm\");\n\n\n","slug":"php调用shell的方法","published":1,"updated":"2018-05-05T02:10:21.447Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jw3000j35fyfrnkcvjm","content":"<h2 id=\"引用-http-www-jb51-net-article-57118-htm\"><a href=\"#引用-http-www-jb51-net-article-57118-htm\" class=\"headerlink\" title=\"引用:http://www.jb51.net/article/57118.htm\"></a>引用:<a href=\"http://www.jb51.net/article/57118.htm\" target=\"_blank\" rel=\"noopener\">http://www.jb51.net/article/57118.htm</a></h2><h2 id=\"这篇文章主要介绍了PHP调用shell的方法-包括相关的原理-注意事项及函数的用法-需要的朋友可以参考下\"><a href=\"#这篇文章主要介绍了PHP调用shell的方法-包括相关的原理-注意事项及函数的用法-需要的朋友可以参考下\" class=\"headerlink\" title=\"这篇文章主要介绍了PHP调用shell的方法,包括相关的原理 注意事项及函数的用法,需要的朋友可以参考下\"></a>这篇文章主要介绍了PHP调用shell的方法,包括相关的原理 注意事项及函数的用法,需要的朋友可以参考下</h2><h3 id=\"一-配置\"><a href=\"#一-配置\" class=\"headerlink\" title=\"一 配置\"></a>一 配置</h3><h4 id=\"查看php-ini中配置是否打开安全模式-主要是以下三个地方\"><a href=\"#查看php-ini中配置是否打开安全模式-主要是以下三个地方\" class=\"headerlink\" title=\"查看php.ini中配置是否打开安全模式,主要是以下三个地方\"></a>查看php.ini中配置是否打开安全模式,主要是以下三个地方</h4><ul>\n<li><p>safe_mode = (这个如果是off下面两个就不用管了)</p>\n</li>\n<li><p>disable_functions = </p>\n</li>\n<li><p>safe_mode_exec_dir = </p>\n</li>\n</ul>\n<h3 id=\"二使用\"><a href=\"#二使用\" class=\"headerlink\" title=\"二使用\"></a>二使用</h3><h4 id=\"由于PHP是基本是用于WEB程序开发的-所以安全性成了人们考虑的一个重要方面-于是PHP的设计者们给-PHP加了一个门-安全模式-如果运行在安全模式下-那么PHP脚本中将受到如下四个方面的限制\"><a href=\"#由于PHP是基本是用于WEB程序开发的-所以安全性成了人们考虑的一个重要方面-于是PHP的设计者们给-PHP加了一个门-安全模式-如果运行在安全模式下-那么PHP脚本中将受到如下四个方面的限制\" class=\"headerlink\" title=\"由于PHP是基本是用于WEB程序开发的,所以安全性成了人们考虑的一个重要方面.于是PHP的设计者们给  PHP加了一个门:安全模式.如果运行在安全模式下,那么PHP脚本中将受到如下四个方面的限制:\"></a>由于PHP是基本是用于WEB程序开发的,所以安全性成了人们考虑的一个重要方面.于是PHP的设计者们给  PHP加了一个门:安全模式.如果运行在安全模式下,那么PHP脚本中将受到如下四个方面的限制:</h4><ul>\n<li><p>执行外部命令</p>\n</li>\n<li><p>在打开文件时有些限制</p>\n</li>\n<li><p>连接MYSQL数据库</p>\n</li>\n<li><p>基于HTTP的认证</p>\n</li>\n</ul>\n<p>在安全模式下,只有在特定目录中的外部程序才可以被执行,对其他程序的调用将被拒绝.这个目录可以在  PHP.ini文件中用safe_model_exex_dir指令,或在编译PHP时加上–with-exec-dir选项来指定,默认是  /usr/local/php/bin.</p>\n<p>如果你调用一个应该可以输出结果的外部命令(意思是PHP脚本没有错误),得到的却是一片空白,那么很可能   你的网管已经把PHP运行在安全模式下了.</p>\n<h3 id=\"三如何做\"><a href=\"#三如何做\" class=\"headerlink\" title=\"三如何做\"></a>三如何做</h3><h4 id=\"在PHP中调用外部命令-可以用如下三种方法来实现\"><a href=\"#在PHP中调用外部命令-可以用如下三种方法来实现\" class=\"headerlink\" title=\"在PHP中调用外部命令,可以用如下三种方法来实现:\"></a>在PHP中调用外部命令,可以用如下三种方法来实现:</h4><ul>\n<li>1 ) 用PHP提供的专门函数</li>\n</ul>\n<h3 id=\"php提供了3个专门的执行外部命令的函数-system-exec-passthru\"><a href=\"#php提供了3个专门的执行外部命令的函数-system-exec-passthru\" class=\"headerlink\" title=\"php提供了3个专门的执行外部命令的函数: system(),exec(),passthru().\"></a>php提供了3个专门的执行外部命令的函数: system(),exec(),passthru().</h3><h3 id=\"system\"><a href=\"#system\" class=\"headerlink\" title=\"system()\"></a>system()</h3><p>原型: string system(string command[,int return_var])</p>\n<p>system()函数和其他语言中的差不多,它执行给定的命令,输出和返回结果.第二个参数是可选的,用来得到命令执行后的状态码.</p>\n<p>例子:</p>\n<ul>\n<li>system(“/usr/local/bin/webalizer/webalizer”);</li>\n</ul>\n<h3 id=\"exec\"><a href=\"#exec\" class=\"headerlink\" title=\"exec()\"></a>exec()</h3><p>原型: string exex(string command[,string array[,int return_var]])</p>\n<p>exec()函数与system()类似,也执行给定的命令,但不输出结果,而是返回结果的最后一行.虽然它只返回命令  结果的最后一行,但用第二个参数array可以得到完整的结果,方法是吧结果逐行追加到  array的结尾处.所 以如果array不是空的,在调用之前最好用unset()把它清掉.只有指定了第二个参数时,才可以用第三个参数,用来取得命令执行的状态码.</p>\n<p>例子:</p>\n<ul>\n<li>exec(“/bin/ls -|”);</li>\n<li>exec(“/bin/ls -|”,$res);’</li>\n<li>$res是一个数据,每个元素代表结果的一行</li>\n<li>exec(“/bin/ls -|”,$res,$rc);’</li>\n<li>$rc的值是命令/bin/ls -|的状态码.成功的情况下通常是0</li>\n</ul>\n<h3 id=\"passthru\"><a href=\"#passthru\" class=\"headerlink\" title=\"passthru()\"></a>passthru()</h3><p>  原型: void passthru(string command[,int return_var])</p>\n<p>  passthru()只调用命令,不返回任何结果,但把命令的运行结果原样<br>  地直接输出到标准输出设备上.所以passthru()函数经常用来调用像<br>  pbmplus(Unix下的一个处理图片的工具,输出二进制的原始图片的流)<br>  这样的程序.同样它也可以得到命令执行的状态码.</p>\n<p>  例子</p>\n<p>  header(“Content-type:image/gif”);<br>  passthru(“./ppmtogif hunte.ppm”);</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"引用-http-www-jb51-net-article-57118-htm\"><a href=\"#引用-http-www-jb51-net-article-57118-htm\" class=\"headerlink\" title=\"引用:http://www.jb51.net/article/57118.htm\"></a>引用:<a href=\"http://www.jb51.net/article/57118.htm\" target=\"_blank\" rel=\"noopener\">http://www.jb51.net/article/57118.htm</a></h2><h2 id=\"这篇文章主要介绍了PHP调用shell的方法-包括相关的原理-注意事项及函数的用法-需要的朋友可以参考下\"><a href=\"#这篇文章主要介绍了PHP调用shell的方法-包括相关的原理-注意事项及函数的用法-需要的朋友可以参考下\" class=\"headerlink\" title=\"这篇文章主要介绍了PHP调用shell的方法,包括相关的原理 注意事项及函数的用法,需要的朋友可以参考下\"></a>这篇文章主要介绍了PHP调用shell的方法,包括相关的原理 注意事项及函数的用法,需要的朋友可以参考下</h2><h3 id=\"一-配置\"><a href=\"#一-配置\" class=\"headerlink\" title=\"一 配置\"></a>一 配置</h3><h4 id=\"查看php-ini中配置是否打开安全模式-主要是以下三个地方\"><a href=\"#查看php-ini中配置是否打开安全模式-主要是以下三个地方\" class=\"headerlink\" title=\"查看php.ini中配置是否打开安全模式,主要是以下三个地方\"></a>查看php.ini中配置是否打开安全模式,主要是以下三个地方</h4><ul>\n<li><p>safe_mode = (这个如果是off下面两个就不用管了)</p>\n</li>\n<li><p>disable_functions = </p>\n</li>\n<li><p>safe_mode_exec_dir = </p>\n</li>\n</ul>\n<h3 id=\"二使用\"><a href=\"#二使用\" class=\"headerlink\" title=\"二使用\"></a>二使用</h3><h4 id=\"由于PHP是基本是用于WEB程序开发的-所以安全性成了人们考虑的一个重要方面-于是PHP的设计者们给-PHP加了一个门-安全模式-如果运行在安全模式下-那么PHP脚本中将受到如下四个方面的限制\"><a href=\"#由于PHP是基本是用于WEB程序开发的-所以安全性成了人们考虑的一个重要方面-于是PHP的设计者们给-PHP加了一个门-安全模式-如果运行在安全模式下-那么PHP脚本中将受到如下四个方面的限制\" class=\"headerlink\" title=\"由于PHP是基本是用于WEB程序开发的,所以安全性成了人们考虑的一个重要方面.于是PHP的设计者们给  PHP加了一个门:安全模式.如果运行在安全模式下,那么PHP脚本中将受到如下四个方面的限制:\"></a>由于PHP是基本是用于WEB程序开发的,所以安全性成了人们考虑的一个重要方面.于是PHP的设计者们给  PHP加了一个门:安全模式.如果运行在安全模式下,那么PHP脚本中将受到如下四个方面的限制:</h4><ul>\n<li><p>执行外部命令</p>\n</li>\n<li><p>在打开文件时有些限制</p>\n</li>\n<li><p>连接MYSQL数据库</p>\n</li>\n<li><p>基于HTTP的认证</p>\n</li>\n</ul>\n<p>在安全模式下,只有在特定目录中的外部程序才可以被执行,对其他程序的调用将被拒绝.这个目录可以在  PHP.ini文件中用safe_model_exex_dir指令,或在编译PHP时加上–with-exec-dir选项来指定,默认是  /usr/local/php/bin.</p>\n<p>如果你调用一个应该可以输出结果的外部命令(意思是PHP脚本没有错误),得到的却是一片空白,那么很可能   你的网管已经把PHP运行在安全模式下了.</p>\n<h3 id=\"三如何做\"><a href=\"#三如何做\" class=\"headerlink\" title=\"三如何做\"></a>三如何做</h3><h4 id=\"在PHP中调用外部命令-可以用如下三种方法来实现\"><a href=\"#在PHP中调用外部命令-可以用如下三种方法来实现\" class=\"headerlink\" title=\"在PHP中调用外部命令,可以用如下三种方法来实现:\"></a>在PHP中调用外部命令,可以用如下三种方法来实现:</h4><ul>\n<li>1 ) 用PHP提供的专门函数</li>\n</ul>\n<h3 id=\"php提供了3个专门的执行外部命令的函数-system-exec-passthru\"><a href=\"#php提供了3个专门的执行外部命令的函数-system-exec-passthru\" class=\"headerlink\" title=\"php提供了3个专门的执行外部命令的函数: system(),exec(),passthru().\"></a>php提供了3个专门的执行外部命令的函数: system(),exec(),passthru().</h3><h3 id=\"system\"><a href=\"#system\" class=\"headerlink\" title=\"system()\"></a>system()</h3><p>原型: string system(string command[,int return_var])</p>\n<p>system()函数和其他语言中的差不多,它执行给定的命令,输出和返回结果.第二个参数是可选的,用来得到命令执行后的状态码.</p>\n<p>例子:</p>\n<ul>\n<li>system(“/usr/local/bin/webalizer/webalizer”);</li>\n</ul>\n<h3 id=\"exec\"><a href=\"#exec\" class=\"headerlink\" title=\"exec()\"></a>exec()</h3><p>原型: string exex(string command[,string array[,int return_var]])</p>\n<p>exec()函数与system()类似,也执行给定的命令,但不输出结果,而是返回结果的最后一行.虽然它只返回命令  结果的最后一行,但用第二个参数array可以得到完整的结果,方法是吧结果逐行追加到  array的结尾处.所 以如果array不是空的,在调用之前最好用unset()把它清掉.只有指定了第二个参数时,才可以用第三个参数,用来取得命令执行的状态码.</p>\n<p>例子:</p>\n<ul>\n<li>exec(“/bin/ls -|”);</li>\n<li>exec(“/bin/ls -|”,$res);’</li>\n<li>$res是一个数据,每个元素代表结果的一行</li>\n<li>exec(“/bin/ls -|”,$res,$rc);’</li>\n<li>$rc的值是命令/bin/ls -|的状态码.成功的情况下通常是0</li>\n</ul>\n<h3 id=\"passthru\"><a href=\"#passthru\" class=\"headerlink\" title=\"passthru()\"></a>passthru()</h3><p>  原型: void passthru(string command[,int return_var])</p>\n<p>  passthru()只调用命令,不返回任何结果,但把命令的运行结果原样<br>  地直接输出到标准输出设备上.所以passthru()函数经常用来调用像<br>  pbmplus(Unix下的一个处理图片的工具,输出二进制的原始图片的流)<br>  这样的程序.同样它也可以得到命令执行的状态码.</p>\n<p>  例子</p>\n<p>  header(“Content-type:image/gif”);<br>  passthru(“./ppmtogif hunte.ppm”);</p>\n"},{"title":".zip和.tar.gz的文件有什么区别","date":"2018-04-27T12:22:56.000Z","_content":"\n## 转自:https://blog.csdn.net/suyu_yuan/article/details/52733117\n\n.tar.gz 压缩格式用于unix的操作系统,但在windows系统中用WinRar工具\n\n同样可以解压缩tar.gz格式的\n\nzip流行于windows系统上的压缩文件(其他系统也可以打开).zip格式开发且\n\n免费.zip支持分卷压缩,128/256-bitAES加密算法等功能.zip的含义是速度,其\n\n目标是为顶替ARC而诞生的\"职业\"压缩软件.\n\n\ntar是\"table archive\"(磁带存档)的简称,它出现在还没有软盘驱动器 硬盘和\n\n光盘驱动器的计算机早期阶段,随着时间的推移,tar命令逐渐变为一个将很多文件\n\n进行存档的工具,目前许多用于Linux操作系统的程序就是打包为tar档案文件的形式\n\n.在Linux里面,tar一般和其他没有文件管理的压缩算法文件结合使用,用tar打包整\n\n个文件目录结构成一个文件,再用gz,bzip等压缩算法压缩成一次,也是Linux常见的\n\n压缩归档的处理方法.\n\n","source":"_posts/zip和-tar-gz的文件有什么区别.md","raw":"---\ntitle: .zip和.tar.gz的文件有什么区别\ndate: 2018-04-27 20:22:56\ntags:\n---\n\n## 转自:https://blog.csdn.net/suyu_yuan/article/details/52733117\n\n.tar.gz 压缩格式用于unix的操作系统,但在windows系统中用WinRar工具\n\n同样可以解压缩tar.gz格式的\n\nzip流行于windows系统上的压缩文件(其他系统也可以打开).zip格式开发且\n\n免费.zip支持分卷压缩,128/256-bitAES加密算法等功能.zip的含义是速度,其\n\n目标是为顶替ARC而诞生的\"职业\"压缩软件.\n\n\ntar是\"table archive\"(磁带存档)的简称,它出现在还没有软盘驱动器 硬盘和\n\n光盘驱动器的计算机早期阶段,随着时间的推移,tar命令逐渐变为一个将很多文件\n\n进行存档的工具,目前许多用于Linux操作系统的程序就是打包为tar档案文件的形式\n\n.在Linux里面,tar一般和其他没有文件管理的压缩算法文件结合使用,用tar打包整\n\n个文件目录结构成一个文件,再用gz,bzip等压缩算法压缩成一次,也是Linux常见的\n\n压缩归档的处理方法.\n\n","slug":"zip和-tar-gz的文件有什么区别","published":1,"updated":"2018-05-05T02:10:21.448Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj6h8jw3000k35fym97agc59","content":"<h2 id=\"转自-https-blog-csdn-net-suyu-yuan-article-details-52733117\"><a href=\"#转自-https-blog-csdn-net-suyu-yuan-article-details-52733117\" class=\"headerlink\" title=\"转自:https://blog.csdn.net/suyu_yuan/article/details/52733117\"></a>转自:<a href=\"https://blog.csdn.net/suyu_yuan/article/details/52733117\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/suyu_yuan/article/details/52733117</a></h2><p>.tar.gz 压缩格式用于unix的操作系统,但在windows系统中用WinRar工具</p>\n<p>同样可以解压缩tar.gz格式的</p>\n<p>zip流行于windows系统上的压缩文件(其他系统也可以打开).zip格式开发且</p>\n<p>免费.zip支持分卷压缩,128/256-bitAES加密算法等功能.zip的含义是速度,其</p>\n<p>目标是为顶替ARC而诞生的”职业”压缩软件.</p>\n<p>tar是”table archive”(磁带存档)的简称,它出现在还没有软盘驱动器 硬盘和</p>\n<p>光盘驱动器的计算机早期阶段,随着时间的推移,tar命令逐渐变为一个将很多文件</p>\n<p>进行存档的工具,目前许多用于Linux操作系统的程序就是打包为tar档案文件的形式</p>\n<p>.在Linux里面,tar一般和其他没有文件管理的压缩算法文件结合使用,用tar打包整</p>\n<p>个文件目录结构成一个文件,再用gz,bzip等压缩算法压缩成一次,也是Linux常见的</p>\n<p>压缩归档的处理方法.</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"转自-https-blog-csdn-net-suyu-yuan-article-details-52733117\"><a href=\"#转自-https-blog-csdn-net-suyu-yuan-article-details-52733117\" class=\"headerlink\" title=\"转自:https://blog.csdn.net/suyu_yuan/article/details/52733117\"></a>转自:<a href=\"https://blog.csdn.net/suyu_yuan/article/details/52733117\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/suyu_yuan/article/details/52733117</a></h2><p>.tar.gz 压缩格式用于unix的操作系统,但在windows系统中用WinRar工具</p>\n<p>同样可以解压缩tar.gz格式的</p>\n<p>zip流行于windows系统上的压缩文件(其他系统也可以打开).zip格式开发且</p>\n<p>免费.zip支持分卷压缩,128/256-bitAES加密算法等功能.zip的含义是速度,其</p>\n<p>目标是为顶替ARC而诞生的”职业”压缩软件.</p>\n<p>tar是”table archive”(磁带存档)的简称,它出现在还没有软盘驱动器 硬盘和</p>\n<p>光盘驱动器的计算机早期阶段,随着时间的推移,tar命令逐渐变为一个将很多文件</p>\n<p>进行存档的工具,目前许多用于Linux操作系统的程序就是打包为tar档案文件的形式</p>\n<p>.在Linux里面,tar一般和其他没有文件管理的压缩算法文件结合使用,用tar打包整</p>\n<p>个文件目录结构成一个文件,再用gz,bzip等压缩算法压缩成一次,也是Linux常见的</p>\n<p>压缩归档的处理方法.</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}