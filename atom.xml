<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>I want jing jing</title>
  
  <subtitle>I want jing jing ,Don&#39;t ask me who is jing jing</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://iwantjingjing.com/"/>
  <updated>2022-03-17T05:05:32.376Z</updated>
  <id>http://iwantjingjing.com/</id>
  
  <author>
    <name>给予ππ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>设计模式</title>
    <link href="http://iwantjingjing.com/2022/03/15/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>http://iwantjingjing.com/2022/03/15/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-03-15T03:59:23.000Z</published>
    <updated>2022-03-17T05:05:32.376Z</updated>
    
    <content type="html"><![CDATA[<p>设计模式按类型分为3类：</p><ul><li>创建型模式</li><li>结构型模式</li><li>行为型模式</li></ul><p>其中创建型模式又分为5种</p><ul><li>工厂方法</li><li>抽象工厂</li><li>生成器</li><li>原型</li><li>单例</li></ul><p>结构型模式分为7种</p><ul><li>适配器</li><li>桥接</li><li>组合</li><li>装饰器</li><li>外观</li><li>享元</li><li>代理</li></ul><p>行为型模式分为11种</p><ul><li>责任链</li><li>命令</li><li>解释器</li><li>迭代器</li><li>中介</li><li>备忘录</li><li>观察者</li><li>状态</li><li>策略</li><li>模板方法</li><li>访问者</li></ul><h2 id="01-工厂方法"><a href="#01-工厂方法" class="headerlink" title="01 工厂方法"></a>01 工厂方法</h2><p>追 MM 少不了请吃饭了，麦当劳的鸡翅和肯德基的鸡翅都是 MM 爱吃的东西，虽然口味有所不同，但不管你带 MM 去麦当劳或肯德基，只管向服务员说「来四个鸡翅」就行了。麦当劳和肯德基就是生产鸡翅的 Factory 工厂模式：<strong>客户类和工厂类分开</strong>。</p><p>消费者任何时候需要某种产品，只需向工厂请求即可。消费者无须修改就可以接纳新产品。缺点是当产品修改时，工厂类也要做相应的修改。如：<strong>如何创建及如何向客户端提供</strong>。</p><h2 id="02-建造者模式"><a href="#02-建造者模式" class="headerlink" title="02 建造者模式"></a>02 建造者模式</h2><p>MM 最爱听的就是「我爱你」这句话了，见到不同地方的 MM，要能够用她们的方言跟她说这句话哦，我有一个多种语言翻译机，上面每种语言都有一个按键，见到 MM 我只要按对应的键，它就能够用相应的语言说出「我爱你」这句话了，国外的 MM 也可以轻松搞掂，这就是我的「我爱你」builder。</p><p>建造模式：将产品的内部表象和产品的生成过程分割开来，从而使一个建造过程生成具有不同的内部表象的产品对象。建造模式使得产品内部表象可以独立的变化，客户不必知道产品内部组成的细节。建造模式可以强制实行一种分步骤进行的建造过程。</p><h2 id="03-抽象工厂"><a href="#03-抽象工厂" class="headerlink" title="03 抽象工厂"></a>03 抽象工厂</h2><p>请 MM 去麦当劳吃汉堡，不同的 MM 有不同的口味，要每个都记住是一件烦人的事情，我一般采用 Factory Method 模式，带着 MM 到服务员那儿，说「要一个汉堡」，具体要什么样的汉堡呢，让 MM 直接跟服务员说就行了。</p><p>工厂方法模式：核心工厂类不再负责所有产品的创建，而是将具体创建的工作交给子类去做，成为一个抽象工厂角色，仅负责给出具体工厂类必须实现的接口，而不接触哪一个产品类应当被实例化这种细节。</p><h2 id="04-原型模式"><a href="#04-原型模式" class="headerlink" title="04 原型模式"></a>04 原型模式</h2><p>跟 MM 用 QQ 聊天，一定要说些深情的话语了，我搜集了好多肉麻的情话，需要时只要 copy 出来放到 QQ 里面就行了，这就是我的情话 prototype 了。（100 块钱一份，你要不要）</p><p>原始模型模式：通过给出一个原型对象来指明所要创建的对象的类型，然后用复制这个原型对象的方法创建出更多同类型的对象。原始模型模式允许动态的增加或减少产品类，产品类不需要非得有任何事先确定的等级结构，原始模型模式适用于任何的等级结构。缺点是每一个类都必须配备一个克隆方法。</p><h2 id="05-单例模式"><a href="#05-单例模式" class="headerlink" title="05 单例模式"></a>05 单例模式</h2><p>俺有 6 个漂亮的老婆，她们的老公都是我，我就是我们家里的老公 Sigleton，她们只要说道「老公」，都是指的同一个人，那就是我 (刚才做了个梦啦，哪有这么好的事)</p><p>单例模式：单例模式确保某一个类只有一个实例，而且自行实例化并向整个系统提供这个实例单例模式。单例模式只应在有真正的 “单一实例” 的需求时才可使用。</p><h2 id="06-适配器模式"><a href="#06-适配器模式" class="headerlink" title="06 适配器模式"></a>06 适配器模式</h2><p>在朋友聚会上碰到了一个美女 Sarah，从香港来的，可我不会说粤语，她不会说普通话，只好求助于我的朋友 kent 了，他作为我和 Sarah 之间的 Adapter，让我和 Sarah 可以相互交谈了 (也不知道他会不会耍我)</p><p>适配器（变压器）模式：把一个类的接口变换成客户端所期待的另一种接口，从而使原本因接口原因不匹配而无法一起工作的两个类能够一起工作。适配类可以根据参数返还一个合适的实例给客户端。</p><h2 id="07-桥接模式"><a href="#07-桥接模式" class="headerlink" title="07 桥接模式"></a>07 桥接模式</h2><p>早上碰到 MM，要说早上好，晚上碰到 MM，要说晚上好；碰到 MM 穿了件新衣服，要说你的衣服好漂亮哦，碰到 MM 新做的发型，要说你的头发好漂亮哦。不要问我 “早上碰到 MM 新做了个发型怎么说” 这种问题，自己用 BRIDGE 组合一下不就行了</p><p>桥梁模式：将抽象化与实现化脱耦，使得二者可以独立的变化，也就是说将他们之间的强关联变成弱关联，也就是指在一个软件系统的抽象化和实现化之间使用组合 / 聚合关系而不是继承关系，从而使两者可以独立的变化。</p><p>定义俩接口再通过一个接口将这两个接口连接起来</p><h2 id="08-合成模式"><a href="#08-合成模式" class="headerlink" title="08 合成模式"></a>08 合成模式</h2><p>Mary 今天过生日。“我过生日，你要送我一件礼物。”“嗯，好吧，去商店，你自己挑。”“这件 T 恤挺漂亮，买，这条裙子好看，买，这个包也不错，买。”“喂，买了三件了呀，我只答应送一件礼物的哦。”“什么呀，T 恤加裙子加包包，正好配成一套呀，小姐，麻烦你包起来。”“……”，MM 都会用 Composite 模式了，你会了没有？</p><p>合成模式：合成模式将对象组织到树结构中，可以用来描述整体与部分的关系。合成模式就是一个处理对象的树结构的模式。合成模式把部分与整体的关系用树结构表示出来。合成模式使得客户端把一个个单独的成分对象和由他们复合而成的合成对象同等看待。</p><h2 id="09-装饰模式"><a href="#09-装饰模式" class="headerlink" title="09 装饰模式"></a>09 装饰模式</h2><p>Mary 过完轮到 Sarly 过生日，还是不要叫她自己挑了，不然这个月伙食费肯定玩完，拿出我去年在华山顶上照的照片，在背面写上 “最好的的礼物，就是爱你的 Fita”，再到街上礼品店买了个像框（卖礼品的 MM 也很漂亮哦），再找隔壁搞美术设计的 Mike 设计了一个漂亮的盒子装起来……，我们都是 Decorator，最终都在修饰我这个人呀，怎么样，看懂了吗？</p><p>装饰模式：装饰模式以对客户端透明的方式扩展对象的功能，是继承关系的一个替代方案，提供比继承更多的灵活性。动态给一个对象增加功能，这些功能可以再动态的撤消。增加由一些基本功能的排列组合而产生的非常大量的功能。</p><h2 id="10-门面模式"><a href="#10-门面模式" class="headerlink" title="10 门面模式"></a>10 门面模式</h2><p>我有一个专业的 Nikon 相机，我就喜欢自己手动调光圈、快门，这样照出来的照片才专业，但 MM 可不懂这些，教了半天也不会。幸好相机有 Facade 设计模式，把相机调整到自动档，只要对准目标按快门就行了，一切由相机自动调整，这样 MM 也可以用这个相机给我拍张照片了。门面模式：外部与一个子系统的通信必须通过一个统一的门面对象进行。</p><p>门面模式提供一个高层次的接口，使得子系统更易于使用。每一个子系统只有一个门面类，而且此门面类只有一个实例，也就是说它是一个单例模式。但整个系统可以有多个门面类。</p><h2 id="11-享元模式"><a href="#11-享元模式" class="headerlink" title="11 享元模式"></a>11 享元模式</h2><p>每天跟 MM 发短信，手指都累死了，最近买了个新手机，可以把一些常用的句子存在手机里，要用的时候，直接拿出来，在前面加上 MM 的名字就可以发送了，再不用一个字一个字敲了。共享的句子就是 Flyweight，MM 的名字就是提取出来的外部特征，根据上下文情况使用。享元模式：FLYWEIGHT 在拳击比赛中指最轻量级。</p><p>享元模式以共享的方式高效的支持大量的细粒度对象。享元模式能做到共享的关键是区分内蕴状态和外蕴状态。内蕴状态存储在享元内部，不会随环境的改变而有所不同。外蕴状态是随环境的改变而改变的。外蕴状态不能影响内蕴状态，它们是相互独立的。</p><p>将可以共享的状态和不可以共享的状态从常规类中区分开来，将不可以共享的状态从类里剔除出去。客户端不可以直接创建被共享的对象，而应当使用一个工厂对象负责创建被共享的对象。享元模式大幅度的降低内存中对象的数量。</p><h2 id="12-代理模式"><a href="#12-代理模式" class="headerlink" title="12 代理模式"></a>12 代理模式</h2><p>跟 MM 在网上聊天，一开头总是 “hi, 你好”,“你从哪儿来呀？”“你多大了？”“身高多少呀？” 这些话，真烦人，写个程序做为我的 Proxy 吧，凡是接收到这些话都设置好了自己的回答，接收到其他的话时再通知我回答，怎么样，酷吧。</p><p>代理模式：代理模式给某一个对象提供一个代理对象，并由代理对象控制对源对象的引用。代理就是一个人或一个机构代表另一个人或者一个机构采取行动。某些情况下，客户不想或者不能够直接引用一个对象，代理对象可以在客户和目标对象直接起到中介的作用。</p><p>客户端分辨不出代理主题对象与真实主题对象。代理模式可以并不知道真正的被代理对象，而仅仅持有一个被代理对象的接口，这时候代理对象不能够创建被代理对象，被代理对象必须有系统的其他角色代为创建并传入。</p><h2 id="13-责任链模式"><a href="#13-责任链模式" class="headerlink" title="13 责任链模式"></a>13 责任链模式</h2><p>晚上去上英语课，为了好开溜坐到了最后一排，哇，前面坐了好几个漂亮的 MM 哎，找张纸条，写上 “Hi, 可以做我的女朋友吗？如果不愿意请向前传”，纸条就一个接一个的传上去了，糟糕，传到第一排的 MM 把纸条传给老师了，听说是个老处女呀，快跑！</p><p>责任链模式：在责任链模式中，很多对象由每一个对象对其下家的引用而接起来形成一条链。请求在这个链上传递，直到链上的某一个对象决定处理此请求。客户并不知道链上的哪一个对象最终处理这个请求，系统可以在不影响客户端的情况下动态的重新组织链和分配责任。处理者有两个选择：承担责任或者把责任推给下家。一个请求可以最终不被任何接收端对象所接受。</p><h2 id="14-命令模式"><a href="#14-命令模式" class="headerlink" title="14 命令模式"></a>14 命令模式</h2><p>俺有一个 MM 家里管得特别严，没法见面，只好借助于她弟弟在我们俩之间传送信息，她对我有什么指示，就写一张纸条让她弟弟带给我。这不，她弟弟又传送过来一个 COMMAND，为了感谢他，我请他吃了碗杂酱面，哪知道他说：“我同时给我姐姐三个男朋友送 COMMAND，就数你最小气，才请我吃面。”</p><p>命令模式：命令模式把一个请求或者操作封装到一个对象中。命令模式把发出命令的责任和执行命令的责任分割开，委派给不同的对象。命令模式允许请求的一方和发送的一方独立开来，使得请求的一方不必知道接收请求的一方的接口，更不必知道请求是怎么被接收，以及操作是否执行，何时被执行以及是怎么被执行的。系统支持命令的撤消。</p><h2 id="15-解释器模式"><a href="#15-解释器模式" class="headerlink" title="15 解释器模式"></a>15 解释器模式</h2><p>俺有一个《泡 MM 真经》，上面有各种泡 MM 的攻略，比如说去吃西餐的步骤、去看电影的方法等等，跟 MM 约会时，只要做一个 Interpreter，照着上面的脚本执行就可以了。</p><p>解释器模式：给定一个语言后，解释器模式可以定义出其文法的一种表示，并同时提供一个解释器。客户端可以使用这个解释器来解释这个语言中的句子。解释器模式将描述怎样在有了一个简单的文法后，使用模式设计解释这些语句。</p><p>在解释器模式里面提到的语言是指任何解释器对象能够解释的任何组合。在解释器模式中需要定义一个代表文法的命令类的等级结构，也就是一系列的组合规则。每一个命令对象都有一个解释方法，代表对命令对象的解释。命令对象的等级结构中的对象的任何排列组合都是一个语言。</p><h2 id="16-迭代模式"><a href="#16-迭代模式" class="headerlink" title="16 迭代模式"></a>16 迭代模式</h2><p>我爱上了 Mary，不顾一切的向她求婚。Mary：“想要我跟你结婚，得答应我的条件” 我：“什么条件我都答应，你说吧” Mary：“我看上了那个一克拉的钻石” 我：“我买，我买，还有吗？” Mary：“我看上了湖边的那栋别墅” 我：“我买，我买，还有吗？” Mary：“我看上那辆法拉利跑车” 我脑袋嗡的一声，坐在椅子上，一咬牙：“我买，我买，还有吗？”</p><p>迭代模式：迭代模式可以<strong>顺序访问一个聚集中的元素而不必暴露聚集的内部表象</strong>。多个对象聚在一起形成的总体称之为聚集，聚集对象是能够包容一组对象的容器对象。迭代子模式将迭代逻辑封装到一个独立的子对象中，从而与聚集本身隔开。</p><p>迭代模式简化了聚集的界面。每一个聚集对象都可以有一个或一个以上的迭代子对象，每一个迭代子的迭代状态可以是彼此独立的。迭代算法可以独立于聚集角色变化。</p><h2 id="17-调停者模式"><a href="#17-调停者模式" class="headerlink" title="17 调停者模式"></a>17 调停者模式</h2><p>四个 MM 打麻将，相互之间谁应该给谁多少钱算不清楚了，幸亏当时我在旁边，按照各自的筹码数算钱，赚了钱的从我这里拿，赔了钱的也付给我，一切就 OK 啦，俺得到了四个 MM 的电话。调停者模式：调停者模式包装了一系列对象相互作用的方式，使得这些对象不必相互明显作用。从而使他们可以松散偶合。</p><p>当某些对象之间的作用发生改变时，不会立即影响其他的一些对象之间的作用。保证这些作用可以彼此独立的变化。调停者模式将多对多的相互作用转化为一对多的相互作用。调停者模式将对象的行为和协作抽象化，把对象在小尺度的行为上与其他对象的相互作用分开处理。</p><h2 id="18-备忘录模式"><a href="#18-备忘录模式" class="headerlink" title="18 备忘录模式"></a>18 备忘录模式</h2><p>同时跟几个 MM 聊天时，一定要记清楚刚才跟 MM 说了些什么话，不然 MM 发现了会不高兴的哦，幸亏我有个备忘录，刚才与哪个 MM 说了什么话我都拷贝一份放到备忘录里面保存，这样可以随时察看以前的记录啦。</p><p>备忘录模式：备忘录对象是一个用来存储另外一个对象内部状态的快照的对象。备忘录模式的用意是在不破坏封装的条件下，将一个对象的状态捉住，并外部化，存储起来，从而可以在将来合适的时候把这个对象还原到存储起来的状态。</p><h2 id="19-观察者模式"><a href="#19-观察者模式" class="headerlink" title="19 观察者模式"></a>19 观察者模式</h2><p>想知道咱们公司最新 MM 情报吗？加入公司的 MM 情报邮件组就行了，tom 负责搜集情报，他发现的新情报不用一个一个通知我们，直接发布给邮件组，我们作为订阅者（观察者）就可以及时收到情报啦。</p><p>观察者模式：观察者模式定义了一种一队多的依赖关系，让多个观察者对象同时监听某一个主题对象。这个主题对象在状态上发生变化时，会通知所有观察者对象，使他们能够自动更新自己。关注微信订阅号码匠笔记回复设计模式还有视频版本哦</p><h2 id="20-状态模式"><a href="#20-状态模式" class="headerlink" title="20 状态模式"></a>20 状态模式</h2><p>跟 MM 交往时，一定要注意她的状态哦，在不同的状态时她的行为会有不同，比如你约她今天晚上去看电影，对你没兴趣的 MM 就会说 “有事情啦”，对你不讨厌但还没喜欢上的 MM 就会说 “好啊，不过可以带上我同事么？”，已经喜欢上你的 MM 就会说 “几点钟？看完电影再去泡吧怎么样？”，当然你看电影过程中表现良好的话，也可以把 MM 的状态从不讨厌不喜欢变成喜欢哦。</p><p>状态模式：状态模式允许一个对象在其内部状态改变的时候改变行为。这个对象看上去象是改变了它的类一样。<strong>状态模式把所研究的对象的行为包装在不同的状态对象里，每一个状态对象都属于一个抽象状态类的一个子类</strong>。</p><p>状态模式的意图是让一个对象在其内部状态改变的时候，其行为也随之改变。状态模式需要对每一个系统可能取得的状态创立一个状态类的子类。当系统的状态变化时，系统便改变所选的子类。</p><h2 id="21-策略模式"><a href="#21-策略模式" class="headerlink" title="21 策略模式"></a>21 策略模式</h2><p>跟不同类型的 MM 约会，要用不同的策略，有的请电影比较好，有的则去吃小吃效果不错，有的去海边浪漫最合适，单目的都是为了得到 MM 的芳心，我的追 MM 锦囊中有好多 Strategy 哦。策略模式：策略模式针对一组算法，将每一个算法封装到具有共同接口的独立的类中，从而使得它们可以相互替换。</p><p>策略模式使得算法可以在不影响到客户端的情况下发生变化。策略模把行为和环境分开。环境类负责维持和查询行为类，各种算法在具体的策略类中提供。由于算法和环境独立开来，算法的增减，修改都不会影响到环境和客户端。</p><h2 id="22-模板方法模式"><a href="#22-模板方法模式" class="headerlink" title="22 模板方法模式"></a>22 模板方法模式</h2><p>看过《如何说服女生上床》这部经典文章吗？女生从认识到上床的不变的步骤分为巧遇、打破僵局、展开追求、接吻、前戏、动手、爱抚、进去八大步骤 (Template method)，但每个步骤针对不同的情况，都有不一样的做法，这就要看你随机应变啦 (具体实现)；</p><p>模板方法模式：模板方法模式<strong>准备一个抽象类，将部分逻辑以具体方法以及具体构造子的形式实现，然后声明一些抽象方法来迫使子类实现剩余的逻辑</strong>。不同的子类可以以不同的方式实现这些抽象方法，从而对剩余的逻辑有不同的实现。先制定一个顶级逻辑框架，而将逻辑的细节留给具体的子类去实现。</p><h2 id="23-访问者模式"><a href="#23-访问者模式" class="headerlink" title="23 访问者模式"></a>23 访问者模式</h2><p>情人节到了，要给每个 MM 送一束鲜花和一张卡片，可是每个 MM 送的花都要针对她个人的特点，每张卡片也要根据个人的特点来挑，我一个人哪搞得清楚，还是找花店老板和礼品店老板做一下 Visitor，让花店老板根据 MM 的特点选一束花，让礼品店老板也根据每个人特点选一张卡，这样就轻松多了；</p><p>访问者模式：访问者模式的<strong>目的是封装一些施加于某种数据结构元素之上的操作。一旦这些操作需要修改的话，接受这个操作的数据结构可以保持不变</strong>。访问者模式适用于<strong>数据结构相对稳定</strong>的系统，它<strong>把数据结构和作用于结构上的操作之间的耦合解脱开</strong>，使得操作集合可以相对自由的演化。访问者模式使得增加新的操作变的很容易，就是增加一个新的访问者类。</p><p>访问者模式将有关的行为集中到一个访问者对象中，而不是分散到一个个的节点类中。当使用访问者模式时，要将尽可能多的对象浏览逻辑放在访问者类中，而不是放到它的子类中。访问者模式可以跨过几个类的等级结构访问属于不同的等级结构的成员类。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;设计模式按类型分为3类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建型模式&lt;/li&gt;
&lt;li&gt;结构型模式&lt;/li&gt;
&lt;li&gt;行为型模式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中创建型模式又分为5种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工厂方法&lt;/li&gt;
&lt;li&gt;抽象工厂&lt;/li&gt;
&lt;li&gt;生成器&lt;/li
      
    
    </summary>
    
    
      <category term="设计模式" scheme="http://iwantjingjing.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式、重构" scheme="http://iwantjingjing.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E3%80%81%E9%87%8D%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>解读Go语言的2021：稳定为王</title>
    <link href="http://iwantjingjing.com/2022/02/25/%E8%A7%A3%E8%AF%BBGo%E8%AF%AD%E8%A8%80%E7%9A%842021%EF%BC%9A%E7%A8%B3%E5%AE%9A%E4%B8%BA%E7%8E%8B/"/>
    <id>http://iwantjingjing.com/2022/02/25/%E8%A7%A3%E8%AF%BBGo%E8%AF%AD%E8%A8%80%E7%9A%842021%EF%BC%9A%E7%A8%B3%E5%AE%9A%E4%B8%BA%E7%8E%8B/</id>
    <published>2022-02-25T06:39:42.000Z</published>
    <updated>2022-02-25T08:23:32.487Z</updated>
    
    <content type="html"><![CDATA[<p>本文摘抄自infoQ《2021年技术盘点与展望》</p><p><a href="https://www.infoq.cn/minibook/Rmc3QT7vIXdr0ovFhZZ8" target="_blank" rel="noopener">原文链接</a></p><h2 id="年度回顾"><a href="#年度回顾" class="headerlink" title="年度回顾"></a>年度回顾</h2><h3 id="新的官网网站"><a href="#新的官网网站" class="headerlink" title="新的官网网站"></a>新的官网网站</h3><p><a href="https://golang.org" target="_blank" rel="noopener">官网</a></p><p><a href="https://golang.google.cn" target="_blank" rel="noopener">中国官网</a></p><p><a href="https://go.dev" target="_blank" rel="noopener">google新搞的</a></p><p><a href="https://pkg.go.dev" target="_blank" rel="noopener">google新搞的二级域名存文档啥的</a></p><h3 id="模块管理"><a href="#模块管理" class="headerlink" title="模块管理"></a>模块管理</h3><h4 id="系统环境变量-GO111MODULE"><a href="#系统环境变量-GO111MODULE" class="headerlink" title="系统环境变量 GO111MODULE"></a>系统环境变量 GO111MODULE</h4><h4 id="Go-模块的配置文件：模块图修剪"><a href="#Go-模块的配置文件：模块图修剪" class="headerlink" title="Go 模块的配置文件：模块图修剪"></a>Go 模块的配置文件：模块图修剪</h4><h4 id="Go-模块的配置文件：新的指令"><a href="#Go-模块的配置文件：新的指令" class="headerlink" title="Go 模块的配置文件：新的指令"></a>Go 模块的配置文件：新的指令</h4><h4 id="Go-模块的配置文件：新的注释"><a href="#Go-模块的配置文件：新的注释" class="headerlink" title="Go 模块的配置文件：新的注释"></a>Go 模块的配置文件：新的注释</h4><h3 id="标准命令"><a href="#标准命令" class="headerlink" title="标准命令"></a>标准命令</h3><h4 id="go-install-命令"><a href="#go-install-命令" class="headerlink" title="go install 命令"></a>go install 命令</h4><h4 id="go-get命令"><a href="#go-get命令" class="headerlink" title="go get命令"></a>go get命令</h4><h3 id="标准库"><a href="#标准库" class="headerlink" title="标准库"></a>标准库</h3><h4 id="新增的-3-个代码包"><a href="#新增的-3-个代码包" class="headerlink" title="新增的 3 个代码包"></a>新增的 3 个代码包</h4><h4 id="废弃-io-ioutil-包"><a href="#废弃-io-ioutil-包" class="headerlink" title="废弃 io/ioutil 包"></a>废弃 io/ioutil 包</h4><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><h3 id="其他更新"><a href="#其他更新" class="headerlink" title="其他更新"></a>其他更新</h3><h2 id="未来展望"><a href="#未来展望" class="headerlink" title="未来展望"></a>未来展望</h2><h4 id="模块管理工具"><a href="#模块管理工具" class="headerlink" title="模块管理工具"></a>模块管理工具</h4><h4 id="泛型语法支持"><a href="#泛型语法支持" class="headerlink" title="泛型语法支持"></a>泛型语法支持</h4><h4 id="其他期待"><a href="#其他期待" class="headerlink" title="其他期待"></a>其他期待</h4><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文摘抄自infoQ《2021年技术盘点与展望》&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.infoq.cn/minibook/Rmc3QT7vIXdr0ovFhZZ8&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原文链接&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="技术视野" scheme="http://iwantjingjing.com/categories/%E6%8A%80%E6%9C%AF%E8%A7%86%E9%87%8E/"/>
    
    
      <category term="技术视野" scheme="http://iwantjingjing.com/tags/%E6%8A%80%E6%9C%AF%E8%A7%86%E9%87%8E/"/>
    
      <category term="Go" scheme="http://iwantjingjing.com/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>六顶思考帽</title>
    <link href="http://iwantjingjing.com/2022/02/25/%E5%85%AD%E9%A1%B6%E6%80%9D%E8%80%83%E5%B8%BD/"/>
    <id>http://iwantjingjing.com/2022/02/25/%E5%85%AD%E9%A1%B6%E6%80%9D%E8%80%83%E5%B8%BD/</id>
    <published>2022-02-25T01:26:43.000Z</published>
    <updated>2022-02-25T05:02:13.270Z</updated>
    
    <content type="html"><![CDATA[<h2 id="脑图"><a href="#脑图" class="headerlink" title="脑图"></a>脑图</h2><p><img src="img_2.png" alt=""></p><h2 id="作者"><a href="#作者" class="headerlink" title="作者"></a>作者</h2><p>作者: [英] 爱德华•德•博诺 (Edward De Bono)</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><h3 id="序"><a href="#序" class="headerlink" title="序"></a>序</h3><ul><li>01 引言 </li><li>02 六顶帽子，六种颜色 </li><li>03 使用思考帽 <h3 id="蓝帽思考"><a href="#蓝帽思考" class="headerlink" title="蓝帽思考"></a>蓝帽思考</h3></li><li>04 蓝帽思考：掌控思考 </li><li>05 蓝帽思考：专注 </li><li>06 蓝帽思考：程序设计 </li><li>07 蓝帽思考：归纳与总结 </li><li>08 蓝帽思考：控制与监控 </li><li>09 蓝色思考帽小结 <h3 id="白帽思考"><a href="#白帽思考" class="headerlink" title="白帽思考"></a>白帽思考</h3></li><li>10 白帽思考：事实和数据 </li><li>11 白帽思考：这是谁的事实？ </li><li>12 白帽思考：日式输入 </li><li>13 白帽思考：事实、真理和哲学家 </li><li>14 白帽思考：谁戴上了这顶帽子？ </li><li>15 白色思考帽小结 <h3 id="红帽思考"><a href="#红帽思考" class="headerlink" title="红帽思考"></a>红帽思考</h3></li><li>16 红帽思考：情绪与情感 </li><li>17 红帽思考：情绪在思考中的地位 </li><li>18 红帽思考：直觉和预感 </li><li>19 红帽思考：时时刻刻 </li><li>20 红帽思考：用对情绪 </li><li>21 红帽思考：情绪的语言 </li><li>22 红色思考帽小结 <h3 id="黄帽思考"><a href="#黄帽思考" class="headerlink" title="黄帽思考"></a>黄帽思考</h3></li><li>23 黄帽思考：冒险之帽——积极探索 </li><li>24 黄帽思考：积极的范围 </li><li>25 黄帽思考：理由和逻辑证据 </li><li>26 黄帽思考：建设性思考 </li><li>27 黄帽思考：投机远见 </li><li>28 黄帽思考：与创造力的关系 </li><li>29 黄色思考帽小结 <h3 id="黑帽思考"><a href="#黑帽思考" class="headerlink" title="黑帽思考"></a>黑帽思考</h3></li><li>30 黑帽思考：谨慎和小心 </li><li>31 黑帽思考：内容和过程 </li><li>32 黑帽思考：过去和未来 </li><li>33 黑帽思考：过度使用的问题 </li><li>34 黑色思考帽小结 <h3 id="绿帽思考"><a href="#绿帽思考" class="headerlink" title="绿帽思考"></a>绿帽思考</h3></li><li>35 绿帽思考：创造性思考 </li><li>36 绿帽思考：水平思考 </li><li>37 绿帽思考：行动而非判断 </li><li>38 绿帽思考：激发的必要性 </li><li>39 绿帽思考：备选路线 </li><li>40 绿帽思考：性格与技能 </li><li>41 绿帽思考：创意的遭遇？ </li><li>42 绿色思考帽小结 </li><li>43 六顶思考帽方法的优点 <h3 id="结-语"><a href="#结-语" class="headerlink" title="结 语"></a>结 语</h3></li></ul><h2 id="最近感悟"><a href="#最近感悟" class="headerlink" title="最近感悟"></a>最近感悟</h2><p>最近在读六顶思考帽这本书。很早之前就听过这本书，一直也没看，最近公司读书会形式有所改变，不再是大家通读一本书，说实话原来那种形式我不是太喜欢，每天往群里发几页，遇见想看的吧嫌发的太少，大多数时候都是不喜欢读，从书的选择和读形式我都是很抵触的，本来自我感觉还是喜欢看书的人，但读书会的这种形式，我看还是算了吧！</p><p>别把我好不容易来的读书兴趣给抹杀了！</p><p>现在信息爆炸，每天被各种垃圾信息包围，读书也是：如果不经过认真挑选，你就会被垃圾环绕。</p><p>作为一个挑食（精神食粮）的人，初看到这本书，扫了眼豆瓣，评分好像是6点多，属实不高。用什么6个颜色来表达6种思考方式，我觉得很欠妥。本来就有见文知意的字来形容这6种思维模式。愣是自造概念整了6种颜色。好吧——在我创造的世界里我就是上帝。</p><p>以上吐槽告一段落。说点积极的，书中还是有一些积极意义的：</p><p>6中思维模式</p><table><thead><tr><th align="left">颜色</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">蓝色</td><td align="left">框架思维</td></tr><tr><td align="left">白色</td><td align="left">事实思维</td></tr><tr><td align="left">绿色</td><td align="left">创造性思维</td></tr><tr><td align="left">黄色</td><td align="left">积极思维</td></tr><tr><td align="left">黑色</td><td align="left">危机思维</td></tr><tr><td align="left">红色</td><td align="left">情绪思维</td></tr></tbody></table><p>咋用呢？</p><p>书中说可以单独用，也可以顺序都用，也可以定时用，注意纪律性。好吧貌似都是说给开会使用的。</p><p>说到开会，想起了一句话：”评价一个人领导力水平高低就是看这人会不会开会”</p><p>书中说到了一句话我很喜欢，在此记录：”思考最大的敌人是复杂性，因为那会导致混乱。当思考过程清晰简单，它本身就很愉快，也更有效。”</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;脑图&quot;&gt;&lt;a href=&quot;#脑图&quot; class=&quot;headerlink&quot; title=&quot;脑图&quot;&gt;&lt;/a&gt;脑图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;img_2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;作者&quot;&gt;&lt;a href=&quot;#作者&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="读书" scheme="http://iwantjingjing.com/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="思维模型" scheme="http://iwantjingjing.com/tags/%E6%80%9D%E7%BB%B4%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>解读人工智能的2021：超大规模预训练模型爆发，自动驾驶迎来商业化前夜</title>
    <link href="http://iwantjingjing.com/2022/02/22/%E8%A7%A3%E8%AF%BB%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9A%842021%EF%BC%9A%E8%B6%85%E5%A4%A7%E8%A7%84%E6%A8%A1%E9%A2%84%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B%E7%88%86%E5%8F%91%EF%BC%8C%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E8%BF%8E%E6%9D%A5%E5%95%86%E4%B8%9A%E5%8C%96%E5%89%8D%E5%A4%9C/"/>
    <id>http://iwantjingjing.com/2022/02/22/%E8%A7%A3%E8%AF%BB%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9A%842021%EF%BC%9A%E8%B6%85%E5%A4%A7%E8%A7%84%E6%A8%A1%E9%A2%84%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B%E7%88%86%E5%8F%91%EF%BC%8C%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E8%BF%8E%E6%9D%A5%E5%95%86%E4%B8%9A%E5%8C%96%E5%89%8D%E5%A4%9C/</id>
    <published>2022-02-22T08:17:50.000Z</published>
    <updated>2022-02-25T01:25:38.962Z</updated>
    
    <content type="html"><![CDATA[<p>本文摘抄自infoQ《2021年技术盘点与展望》</p><p><a href="https://www.infoq.cn/minibook/Rmc3QT7vIXdr0ovFhZZ8" target="_blank" rel="noopener">原文链接</a></p><h2 id="解读人工智能的2021：超大规模预训练模型爆发，自动驾驶迎来商业化前夜"><a href="#解读人工智能的2021：超大规模预训练模型爆发，自动驾驶迎来商业化前夜" class="headerlink" title="解读人工智能的2021：超大规模预训练模型爆发，自动驾驶迎来商业化前夜"></a>解读人工智能的2021：超大规模预训练模型爆发，自动驾驶迎来商业化前夜</h2><p><strong>AI 技术</strong></p><ul><li><p>人工智能大模型</p></li><li><p>深度学习框架</p></li><li><p>NLP</p></li><li><p>智能语音</p><table><thead><tr><th>col1</th><th>col2</th><th>col3</th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table></li><li><p>自动驾驶</p></li><li><p>知识图谱</p></li></ul><h3 id="2021-年度-AI-技术突破"><a href="#2021-年度-AI-技术突破" class="headerlink" title="2021 年度 AI 技术突破"></a>2021 年度 AI 技术突破</h3><h4 id="人工智能预测蛋白质结构"><a href="#人工智能预测蛋白质结构" class="headerlink" title="人工智能预测蛋白质结构"></a>人工智能预测蛋白质结构</h4><h5 id="AphaFold2“解锁”98-人类蛋白质组"><a href="#AphaFold2“解锁”98-人类蛋白质组" class="headerlink" title="AphaFold2“解锁”98%人类蛋白质组"></a>AphaFold2“解锁”98%人类蛋白质组</h5><h5 id="RoseTTAFold-可十分钟内计算出蛋白质结构"><a href="#RoseTTAFold-可十分钟内计算出蛋白质结构" class="headerlink" title="RoseTTAFold 可十分钟内计算出蛋白质结构"></a>RoseTTAFold 可十分钟内计算出蛋白质结构</h5><h5 id="其他研究进展"><a href="#其他研究进展" class="headerlink" title="其他研究进展"></a>其他研究进展</h5><h3 id="AI-技术-2021-年发展总结与展望"><a href="#AI-技术-2021-年发展总结与展望" class="headerlink" title="AI 技术 2021 年发展总结与展望"></a>AI 技术 2021 年发展总结与展望</h3><p>去年，GPT-3 横空出世，这个具有 1750 亿参数规模的预训练模型所表现出来的零样本与小样本学习能力刷新了人们的认知，也引爆了 2021 年 AI 大模型研究的热潮。</p><h4 id="人工智能迈向“炼大模型”阶段"><a href="#人工智能迈向“炼大模型”阶段" class="headerlink" title="人工智能迈向“炼大模型”阶段"></a>人工智能迈向“炼大模型”阶段</h4><p>2021 年 1 月，Google 推出的 Switch Transformer 模型以高达 1.6 万亿的参数量打 破了 GPT-3 作为最大 AI 模型的统治地位，成为史上首个万亿级语言模型。</p><p>国内研究机构也不甘示弱。今年 6 月，北京智源人工智能研究院发布了超大规模智能 模型“悟道 2.0”，达到 1.75 万亿参数，超过 Switch Transformer 成为全球最大的预训 练模型。</p><h5 id="超大规模预训练模型的“军备竞赛”"><a href="#超大规模预训练模型的“军备竞赛”" class="headerlink" title="超大规模预训练模型的“军备竞赛”"></a>超大规模预训练模型的“军备竞赛”</h5><h5 id="预训练模型技术新进展"><a href="#预训练模型技术新进展" class="headerlink" title="预训练模型技术新进展"></a>预训练模型技术新进展</h5><h5 id="降低-AI-规模化落地的门槛"><a href="#降低-AI-规模化落地的门槛" class="headerlink" title="降低 AI 规模化落地的门槛"></a>降低 AI 规模化落地的门槛</h5><h5 id="小结和展望"><a href="#小结和展望" class="headerlink" title="小结和展望"></a>小结和展望</h5><h4 id="国产深度学习框架不再是“技术的跟随者”"><a href="#国产深度学习框架不再是“技术的跟随者”" class="headerlink" title="国产深度学习框架不再是“技术的跟随者”"></a>国产深度学习框架不再是“技术的跟随者”</h4><h5 id="新进展，新趋势"><a href="#新进展，新趋势" class="headerlink" title="新进展，新趋势"></a>新进展，新趋势</h5><h5 id="技术自立之路"><a href="#技术自立之路" class="headerlink" title="技术自立之路"></a>技术自立之路</h5><h5 id="研发难点"><a href="#研发难点" class="headerlink" title="研发难点"></a>研发难点</h5><h5 id="将更好地支持大模型训练"><a href="#将更好地支持大模型训练" class="headerlink" title="将更好地支持大模型训练"></a>将更好地支持大模型训练</h5><h4 id="智能语音这一年：技术突破不断，工业落地加速"><a href="#智能语音这一年：技术突破不断，工业落地加速" class="headerlink" title="智能语音这一年：技术突破不断，工业落地加速"></a>智能语音这一年：技术突破不断，工业落地加速</h4><h5 id="语⾳领域的⼤规模预训练模型层出不穷"><a href="#语⾳领域的⼤规模预训练模型层出不穷" class="headerlink" title="语⾳领域的⼤规模预训练模型层出不穷"></a>语⾳领域的⼤规模预训练模型层出不穷</h5><h5 id="工业界落地加速"><a href="#工业界落地加速" class="headerlink" title="工业界落地加速"></a>工业界落地加速</h5><h5 id="商业化难点主要在于商业模式选择"><a href="#商业化难点主要在于商业模式选择" class="headerlink" title="商业化难点主要在于商业模式选择"></a>商业化难点主要在于商业模式选择</h5><h5 id="端到端和预训练等技术仍然值得关注"><a href="#端到端和预训练等技术仍然值得关注" class="headerlink" title="端到端和预训练等技术仍然值得关注"></a>端到端和预训练等技术仍然值得关注</h5><h4 id="群雄逐鹿，谁能赢得自动驾驶之战？"><a href="#群雄逐鹿，谁能赢得自动驾驶之战？" class="headerlink" title="群雄逐鹿，谁能赢得自动驾驶之战？"></a>群雄逐鹿，谁能赢得自动驾驶之战？</h4><h5 id="造车热"><a href="#造车热" class="headerlink" title="造车热"></a>造车热</h5><h5 id="商业化前夜"><a href="#商业化前夜" class="headerlink" title="商业化前夜"></a>商业化前夜</h5><h5 id="2022，这些技术将是下半场竞争胜负的关键"><a href="#2022，这些技术将是下半场竞争胜负的关键" class="headerlink" title="2022，这些技术将是下半场竞争胜负的关键"></a>2022，这些技术将是下半场竞争胜负的关键</h5><h4 id="NLP，黄金时代持续？"><a href="#NLP，黄金时代持续？" class="headerlink" title="NLP，黄金时代持续？"></a>NLP，黄金时代持续？</h4><h5 id="基于提示的微调技术迅速流行"><a href="#基于提示的微调技术迅速流行" class="headerlink" title="基于提示的微调技术迅速流行"></a>基于提示的微调技术迅速流行</h5><h5 id="与-CV、语音识别相比，NLP-项目在业务中落地往往较慢"><a href="#与-CV、语音识别相比，NLP-项目在业务中落地往往较慢" class="headerlink" title="与 CV、语音识别相比，NLP 项目在业务中落地往往较慢"></a>与 CV、语音识别相比，NLP 项目在业务中落地往往较慢</h5><h5 id="明年，NLP-将在哪些场景实现规模化落地？"><a href="#明年，NLP-将在哪些场景实现规模化落地？" class="headerlink" title="明年，NLP 将在哪些场景实现规模化落地？"></a>明年，NLP 将在哪些场景实现规模化落地？</h5><h5 id="2022-年，NLP-值得关注的技术点"><a href="#2022-年，NLP-值得关注的技术点" class="headerlink" title="2022 年，NLP 值得关注的技术点"></a>2022 年，NLP 值得关注的技术点</h5><h4 id="元宇宙概念大火，计算机视觉是基石技术之一"><a href="#元宇宙概念大火，计算机视觉是基石技术之一" class="headerlink" title="元宇宙概念大火，计算机视觉是基石技术之一"></a>元宇宙概念大火，计算机视觉是基石技术之一</h4><h5 id="具身智能，从被动式-AI-转向主动式人工智能"><a href="#具身智能，从被动式-AI-转向主动式人工智能" class="headerlink" title="具身智能，从被动式 AI 转向主动式人工智能"></a>具身智能，从被动式 AI 转向主动式人工智能</h5><h5 id="进入元宇宙，需要智能感知和交互这张门票"><a href="#进入元宇宙，需要智能感知和交互这张门票" class="headerlink" title="进入元宇宙，需要智能感知和交互这张门票"></a>进入元宇宙，需要智能感知和交互这张门票</h5><h5 id="趋势一：面向内容生成的-AIGC"><a href="#趋势一：面向内容生成的-AIGC" class="headerlink" title="趋势一：面向内容生成的 AIGC"></a>趋势一：面向内容生成的 AIGC</h5><h5 id="趋势二：SCV-合成"><a href="#趋势二：SCV-合成" class="headerlink" title="趋势二：SCV 合成"></a>趋势二：SCV 合成</h5><h4 id="制约知识图谱商业化落地的主要问题在于标准化"><a href="#制约知识图谱商业化落地的主要问题在于标准化" class="headerlink" title="制约知识图谱商业化落地的主要问题在于标准化"></a>制约知识图谱商业化落地的主要问题在于标准化</h4><h5 id="重要技术进展"><a href="#重要技术进展" class="headerlink" title="重要技术进展"></a>重要技术进展</h5><h5 id="应用落地进展"><a href="#应用落地进展" class="headerlink" title="应用落地进展"></a>应用落地进展</h5><h3 id="2022-年，值得关注的重要技术趋势"><a href="#2022-年，值得关注的重要技术趋势" class="headerlink" title="2022 年，值得关注的重要技术趋势"></a>2022 年，值得关注的重要技术趋势</h3><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文摘抄自infoQ《2021年技术盘点与展望》&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.infoq.cn/minibook/Rmc3QT7vIXdr0ovFhZZ8&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原文链接&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="技术视野" scheme="http://iwantjingjing.com/categories/%E6%8A%80%E6%9C%AF%E8%A7%86%E9%87%8E/"/>
    
    
      <category term="技术视野" scheme="http://iwantjingjing.com/tags/%E6%8A%80%E6%9C%AF%E8%A7%86%E9%87%8E/"/>
    
      <category term="人工智能" scheme="http://iwantjingjing.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>解读数据架构的2021：大数据10体系基本建成，但头上仍有几朵乌云</title>
    <link href="http://iwantjingjing.com/2022/02/22/%E8%A7%A3%E8%AF%BB%E6%95%B0%E6%8D%AE%E6%9E%B6%E6%9E%84%E7%9A%842021%EF%BC%9A%E5%A4%A7%E6%95%B0%E6%8D%AE10%E4%BD%93%E7%B3%BB%E5%9F%BA%E6%9C%AC%E5%BB%BA%E6%88%90%EF%BC%8C%E4%BD%86%E5%A4%B4%E4%B8%8A%E4%BB%8D%E6%9C%89%E5%87%A0%E6%9C%B5%E4%B9%8C%E4%BA%91/"/>
    <id>http://iwantjingjing.com/2022/02/22/%E8%A7%A3%E8%AF%BB%E6%95%B0%E6%8D%AE%E6%9E%B6%E6%9E%84%E7%9A%842021%EF%BC%9A%E5%A4%A7%E6%95%B0%E6%8D%AE10%E4%BD%93%E7%B3%BB%E5%9F%BA%E6%9C%AC%E5%BB%BA%E6%88%90%EF%BC%8C%E4%BD%86%E5%A4%B4%E4%B8%8A%E4%BB%8D%E6%9C%89%E5%87%A0%E6%9C%B5%E4%B9%8C%E4%BA%91/</id>
    <published>2022-02-22T07:51:28.000Z</published>
    <updated>2022-02-22T08:21:07.370Z</updated>
    
    <content type="html"><![CDATA[<p>本文摘抄自infoQ《2021年技术盘点与展望》</p><p><a href="https://www.infoq.cn/minibook/Rmc3QT7vIXdr0ovFhZZ8" target="_blank" rel="noopener">原文链接</a></p><h2 id="解读数据架构的2021：大数据10体系基本建成，但头上仍有几朵乌云"><a href="#解读数据架构的2021：大数据10体系基本建成，但头上仍有几朵乌云" class="headerlink" title="解读数据架构的2021：大数据10体系基本建成，但头上仍有几朵乌云"></a>解读数据架构的2021：大数据10体系基本建成，但头上仍有几朵乌云</h2><h3 id="2021年，大数据领域发展到哪一阶段？"><a href="#2021年，大数据领域发展到哪一阶段？" class="headerlink" title="2021年，大数据领域发展到哪一阶段？"></a>2021年，大数据领域发展到哪一阶段？</h3><p>Gartner Hype Cycle 把整个发展周期分成 5 个部分</p><ul><li>创新期  </li><li>狂热期</li><li>冷静期</li><li>复兴期</li><li>普惠期 </li></ul><h4 id="大数据技术体系-1-0-基本建成"><a href="#大数据技术体系-1-0-基本建成" class="headerlink" title="大数据技术体系 1.0 基本建成"></a>大数据技术体系 1.0 基本建成</h4><p>新技术</p><ul><li>湖仓一体</li><li>边缘计算</li><li>区块链账本<h4 id="数据平台赛道价值显性化，带来大量投资和创业机会"><a href="#数据平台赛道价值显性化，带来大量投资和创业机会" class="headerlink" title="数据平台赛道价值显性化，带来大量投资和创业机会"></a>数据平台赛道价值显性化，带来大量投资和创业机会</h4></li><li> 2021 年 6 月 25 日，Apache Kafka 商业化公司 Confluent 正式登陆纳斯达克，首日开涨 25%，市值超过 110 亿美元。</li><li> 2021 年 8 月 29 日，Apache Iceberg 的创建者 Ryan Blue、Dan Weeks 和 Netflix数据架构总监 Jason Reid 宣布从风投 a16z 处拿到了 A 轮融资，正式成立围绕</li><li>Apache Iceberg 构建新型数据平台的商业公司 Tabular。  2021 年 8 月 31 日，大数据初创公司 Databricks 宣布获得 16 亿美元 H 轮融资，</li><li>最新估值飙升至 380 亿美元，距离上一轮 10 亿美元的 G 轮融资仅仅过去 7 个月时间。</li><li> 2021 年 9 月 20 日，ClickHouse 的创建者 Alexey 正式从 Yandex 独立出来并成成立了一个公司ClickHouse, Inc。同时 ClickHouse 公司获得由 Index Ventures 和 Benchmark 领投的 5000 万美元 A 轮融资，Yandex 也参与其中。</li><li> 2021 年 10 月 12 日，基于开源的 Apache Pulsar 的商业化公司 StreamNative 宣布获得 2300 万美元 A 轮融资。</li><li>2021 年，Clickhouse、Tebula（Apache Iceberg 背后的商业公司）、Firebolt 以及国内诸多新兴创业公司为这一领域带来了很好的讨论度。</li></ul><h4 id="客户开始明确分层，带来平台架构的不同取舍"><a href="#客户开始明确分层，带来平台架构的不同取舍" class="headerlink" title="客户开始明确分层，带来平台架构的不同取舍"></a>客户开始明确分层，带来平台架构的不同取舍</h4><p><strong>客户分层</strong></p><ol><li><p>头部互联网技术公司，以 Top30-50 一线互联网公司为代表。技术栈上，以自建平台为主，且大部分公司采用以开源为基础的自建方式（其中少数 Top10 头部厂商会投资 0 到 1 自研）。</p></li><li><p>中腰部技术公司，其中又可以细分为两类：  </p><ul><li><p>中腰部互联网公司，这类型公司大多数诞生于云时代（近 8 年），通常处于成 长期并聚焦自身业务发展，对基础设施投资有限，同时追求更低的 TCO（包含 硬件和人力的总成本），倾向直接采用公共云平台架构并购买 PaaS 服务。（注：这类型客户是 SnowFlake 的典型客户）。 </p></li><li><p>有技术能力的非互联网公司，以银行/通信等领域企业为主。因监管或者资管要 求，通常采用专有云或者混合云模式，企业具备数据开发人员，能够在数据平 台上完成数据应用/解决方案的开发。这类型客户通常负责关键业务，对平台的 企业级能力（包括稳定性、安全性、免运维能力）要求很高。</p></li></ul></li><li><p>纯甲方应用型客户，以线下大型非技术型企业为主。这类型客户通常没有数据开发 和应用建设的经验和团队，对数据类应用的需求多通过与合作伙伴（ISV）合作或 者外包方式完成。对技术栈和技术选型通常不敏感，但对稳定性要求很高。</p></li></ol><h3 id="当下技术架构的五个热点"><a href="#当下技术架构的五个热点" class="headerlink" title="当下技术架构的五个热点"></a>当下技术架构的五个热点</h3><h4 id="引擎架构的进化，向进一步解耦和池化发展"><a href="#引擎架构的进化，向进一步解耦和池化发展" class="headerlink" title="引擎架构的进化，向进一步解耦和池化发展"></a>引擎架构的进化，向进一步解耦和池化发展</h4><h4 id="面向云原生、云中立的系统架构设计"><a href="#面向云原生、云中立的系统架构设计" class="headerlink" title="面向云原生、云中立的系统架构设计"></a>面向云原生、云中立的系统架构设计</h4><h4 id="数据湖与数据仓库技术相互融合：湖仓一体"><a href="#数据湖与数据仓库技术相互融合：湖仓一体" class="headerlink" title="数据湖与数据仓库技术相互融合：湖仓一体"></a>数据湖与数据仓库技术相互融合：湖仓一体</h4><table><thead><tr><th>对比维度</th><th>数据湖</th><th>数据仓库</th></tr></thead><tbody><tr><td>方法论</td><td>事后建模</td><td>事前建模</td></tr><tr><td>存储类型</td><td>结构化、半结构化、非结构化</td><td>结构化、半结构化</td></tr><tr><td>计算引擎</td><td>向所有引擎开放 各引擎有限优化</td><td>向特定引擎开放</td></tr><tr><td>成本</td><td>难运维管理</td><td>难启动</td></tr><tr><td>数据治理</td><td>质量低 难管理使用</td><td>质量高 易管理使用</td></tr></tbody></table><p>发展趋势：湖仓一体</p><p>实际上湖仓一体有两个流派：数据仓库到数据湖，数据湖到数据仓库</p><p>第一个流派是以数仓这种方式诞生的，它是一个左右派，左边是一个数据仓库，右边是一个数据湖，中间以高速网络相连形成一个反对式的联动；</p><p>第二个流派是从数据湖向数仓演进，整体架构是在数据湖上搭建数据仓库。</p><p>这两个流派的代表分别是 AWS Redshift/阿里云 MaxCompute，以及 Databricks，目前这两个流派都还在发展中。</p><h4 id="AI-成为数据平台的一等公民"><a href="#AI-成为数据平台的一等公民" class="headerlink" title="AI 成为数据平台的一等公民"></a>AI 成为数据平台的一等公民</h4><p>数据分析和 BI 更侧重于历史数据的总结</p><p>而算法/AI 具备越来越好的面向未来做预测,给大家带来更多决策支撑</p><h4 id="“1-N-1”的系统架构"><a href="#“1-N-1”的系统架构" class="headerlink" title="“1+N+1”的系统架构"></a>“1+N+1”的系统架构</h4><p>第一个 1，代表存储和资源的统一。</p><p>中间的 N 指代的是多种运算引擎和模式，例如批处理、流处理、机器学习、图计算等等，不同的计算引擎共享底层的数据和资源池。</p><p>最后一个 1，是指统一的接入层和数据开发应用层，这个层次是可选的。有些企业选择统一入口管理的架构，做更好的权限管理等。有些企业和厂商选择不再收敛了，引擎可以被各种团队或者各种用户独立使用。</p><h3 id="面向未来的四个发展趋势"><a href="#面向未来的四个发展趋势" class="headerlink" title="面向未来的四个发展趋势"></a>面向未来的四个发展趋势</h3><h4 id="实现从离线到实时的全频谱"><a href="#实现从离线到实时的全频谱" class="headerlink" title="实现从离线到实时的全频谱"></a>实现从离线到实时的全频谱</h4><p>Apache Delta、Hudi为代表的近实时化技术</p><p>Data Freshness、Resource Costs 和 Query Performance</p><h4 id="IoT-类数据处理成为新热点"><a href="#IoT-类数据处理成为新热点" class="headerlink" title="IoT 类数据处理成为新热点"></a>IoT 类数据处理成为新热点</h4><p>云边端协同的计算模式会成为热点，统称 IoT。</p><h4 id="数据安全、共享与隐私保护的矛盾需要新解法"><a href="#数据安全、共享与隐私保护的矛盾需要新解法" class="headerlink" title="数据安全、共享与隐私保护的矛盾需要新解法"></a>数据安全、共享与隐私保护的矛盾需要新解法</h4><p>数据安全不仅仅是一个权限问题，还涉及很复杂的系统架构包括:</p><ul><li>权限管理</li><li>用户隔离</li><li>存储加密</li><li>异地备份</li><li>敏感数据、风险行为的识别</li></ul><h4 id="AI-for-System（DW-Automation）"><a href="#AI-for-System（DW-Automation）" class="headerlink" title="AI for System（DW Automation）"></a>AI for System（DW Automation）</h4><ul><li>PB级别</li><li>EB级别</li><li>每天百万级别</li></ul><p>DBA 以人为轴的数据管理和优化方式不再胜任</p><p>机器学习、深度学习的自动化技术</p><p>通过机器学习自动进行数据分层：</p><ul><li>依据访问的统计判断什么样的数据更重要</li><li>什么样的数据其实不重要</li><li>哪些作业可以放在冷存储上</li><li>哪些是关键作业需要放在更高优先级的存储上。</li></ul><p><font color=red>当作业量达到百万量级时，这些决策应该由机器来自动完成，而不应该由人来完成。</font></p><h3 id="三个未解的挑战"><a href="#三个未解的挑战" class="headerlink" title="三个未解的挑战"></a>三个未解的挑战</h3><h4 id="疑问1：引擎多样化，最终是否能诞生一套OneSizeForAll引擎满足多样的计算需求，并兼顾通用性和效率？"><a href="#疑问1：引擎多样化，最终是否能诞生一套OneSizeForAll引擎满足多样的计算需求，并兼顾通用性和效率？" class="headerlink" title="疑问1：引擎多样化，最终是否能诞生一套OneSizeForAll引擎满足多样的计算需求，并兼顾通用性和效率？"></a>疑问1：引擎多样化，最终是否能诞生一套OneSizeForAll引擎满足多样的计算需求，并兼顾通用性和效率？</h4><p>自建系统：</p><ul><li>Spark 做批处理</li><li>Flink 做流处理</li><li>Clickhouse 做交互分析</li><li>HBase 做 KV 查询</li><li>ElasticSearch 做文本检索。</li></ul><h4 id="疑问-2：基于开源自建与直接选购企业级产品，谁更能获得用户的认可？"><a href="#疑问-2：基于开源自建与直接选购企业级产品，谁更能获得用户的认可？" class="headerlink" title="疑问 2：基于开源自建与直接选购企业级产品，谁更能获得用户的认可？"></a>疑问 2：基于开源自建与直接选购企业级产品，谁更能获得用户的认可？</h4><p>这个答案可能需要结合客户分层来看</p><p><strong>一个简单的经验公式是：</strong></p><p><font color=red>对于百台规模的平台，基于开源软件自建的总 TCO=物理硬件成本+开发和维护人力成本=物理硬件成本*2</font></p><h4 id="疑问-3：关系模型之外，是否会发展出其他主流计算范式？"><a href="#疑问-3：关系模型之外，是否会发展出其他主流计算范式？" class="headerlink" title="疑问 3：关系模型之外，是否会发展出其他主流计算范式？"></a>疑问 3：关系模型之外，是否会发展出其他主流计算范式？</h4><p>主流的计算范式就是二维关系表达</p><p>图计算是目前最被看好的方向，它是点边模型。</p><p>图学习 GraphEmbedding 技术</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文摘抄自infoQ《2021年技术盘点与展望》&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.infoq.cn/minibook/Rmc3QT7vIXdr0ovFhZZ8&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原文链接&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="技术视野" scheme="http://iwantjingjing.com/categories/%E6%8A%80%E6%9C%AF%E8%A7%86%E9%87%8E/"/>
    
    
      <category term="技术视野" scheme="http://iwantjingjing.com/tags/%E6%8A%80%E6%9C%AF%E8%A7%86%E9%87%8E/"/>
    
      <category term="大数据" scheme="http://iwantjingjing.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>2021年技术盘点与展望</title>
    <link href="http://iwantjingjing.com/2022/02/22/2021%E5%B9%B4%E6%8A%80%E6%9C%AF%E7%9B%98%E7%82%B9%E4%B8%8E%E5%B1%95%E6%9C%9B/"/>
    <id>http://iwantjingjing.com/2022/02/22/2021%E5%B9%B4%E6%8A%80%E6%9C%AF%E7%9B%98%E7%82%B9%E4%B8%8E%E5%B1%95%E6%9C%9B/</id>
    <published>2022-02-22T07:20:02.000Z</published>
    <updated>2022-02-22T08:17:40.477Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2021年技术盘点与展望"><a href="#2021年技术盘点与展望" class="headerlink" title="2021年技术盘点与展望"></a>2021年技术盘点与展望</h1><p>本文摘抄自infoQ《2021年技术盘点与展望》</p><p><a href="https://www.infoq.cn/minibook/Rmc3QT7vIXdr0ovFhZZ8" target="_blank" rel="noopener">原文链接</a></p><p><strong>2021 年度技术盘点</strong></p><h2 id="解读编程语言的-2021：Go-与-Rust-走向「成熟」，Kotlin、wasm、Julia「无限生长」1"><a href="#解读编程语言的-2021：Go-与-Rust-走向「成熟」，Kotlin、wasm、Julia「无限生长」1" class="headerlink" title="解读编程语言的 2021：Go 与 Rust 走向「成熟」，Kotlin、wasm、Julia「无限生长」1"></a>解读编程语言的 2021：Go 与 Rust 走向「成熟」，Kotlin、wasm、Julia「无限生长」1</h2><h2 id="解读云原生的2021：抢占技术C位，迎来落地大爆发"><a href="#解读云原生的2021：抢占技术C位，迎来落地大爆发" class="headerlink" title="解读云原生的2021：抢占技术C位，迎来落地大爆发"></a>解读云原生的2021：抢占技术C位，迎来落地大爆发</h2><h2 id="解读数据架构的2021：大数据10体系基本建成，但头上仍有几朵乌云"><a href="#解读数据架构的2021：大数据10体系基本建成，但头上仍有几朵乌云" class="headerlink" title="解读数据架构的2021：大数据10体系基本建成，但头上仍有几朵乌云"></a>解读数据架构的2021：大数据10体系基本建成，但头上仍有几朵乌云</h2><h2 id="解读人工智能的2021：超大规模预训练模型爆发，自动驾驶迎来商业化前夜"><a href="#解读人工智能的2021：超大规模预训练模型爆发，自动驾驶迎来商业化前夜" class="headerlink" title="解读人工智能的2021：超大规模预训练模型爆发，自动驾驶迎来商业化前夜"></a>解读人工智能的2021：超大规模预训练模型爆发，自动驾驶迎来商业化前夜</h2><h3 id="2021-年度-AI-技术突破"><a href="#2021-年度-AI-技术突破" class="headerlink" title="2021 年度 AI 技术突破"></a>2021 年度 AI 技术突破</h3><h4 id="人工智能预测蛋白质结构"><a href="#人工智能预测蛋白质结构" class="headerlink" title="人工智能预测蛋白质结构"></a>人工智能预测蛋白质结构</h4><h5 id="AphaFold2“解锁”98-人类蛋白质组"><a href="#AphaFold2“解锁”98-人类蛋白质组" class="headerlink" title="AphaFold2“解锁”98%人类蛋白质组"></a>AphaFold2“解锁”98%人类蛋白质组</h5><h5 id="RoseTTAFold-可十分钟内计算出蛋白质结构"><a href="#RoseTTAFold-可十分钟内计算出蛋白质结构" class="headerlink" title="RoseTTAFold 可十分钟内计算出蛋白质结构"></a>RoseTTAFold 可十分钟内计算出蛋白质结构</h5><h5 id="其他研究进展"><a href="#其他研究进展" class="headerlink" title="其他研究进展"></a>其他研究进展</h5><h3 id="AI-技术-2021-年发展总结与展望"><a href="#AI-技术-2021-年发展总结与展望" class="headerlink" title="AI 技术 2021 年发展总结与展望"></a>AI 技术 2021 年发展总结与展望</h3><h4 id="人工智能迈向“炼大模型”阶段"><a href="#人工智能迈向“炼大模型”阶段" class="headerlink" title="人工智能迈向“炼大模型”阶段"></a>人工智能迈向“炼大模型”阶段</h4><h5 id="超大规模预训练模型的“军备竞赛”"><a href="#超大规模预训练模型的“军备竞赛”" class="headerlink" title="超大规模预训练模型的“军备竞赛”"></a>超大规模预训练模型的“军备竞赛”</h5><h5 id="预训练模型技术新进展"><a href="#预训练模型技术新进展" class="headerlink" title="预训练模型技术新进展"></a>预训练模型技术新进展</h5><h5 id="降低-AI-规模化落地的门槛"><a href="#降低-AI-规模化落地的门槛" class="headerlink" title="降低 AI 规模化落地的门槛"></a>降低 AI 规模化落地的门槛</h5><h5 id="小结和展望"><a href="#小结和展望" class="headerlink" title="小结和展望"></a>小结和展望</h5><h4 id="国产深度学习框架不再是“技术的跟随者”"><a href="#国产深度学习框架不再是“技术的跟随者”" class="headerlink" title="国产深度学习框架不再是“技术的跟随者”"></a>国产深度学习框架不再是“技术的跟随者”</h4><h5 id="新进展，新趋势"><a href="#新进展，新趋势" class="headerlink" title="新进展，新趋势"></a>新进展，新趋势</h5><h5 id="技术自立之路"><a href="#技术自立之路" class="headerlink" title="技术自立之路"></a>技术自立之路</h5><h5 id="研发难点"><a href="#研发难点" class="headerlink" title="研发难点"></a>研发难点</h5><h5 id="将更好地支持大模型训练"><a href="#将更好地支持大模型训练" class="headerlink" title="将更好地支持大模型训练"></a>将更好地支持大模型训练</h5><h4 id="智能语音这一年：技术突破不断，工业落地加速"><a href="#智能语音这一年：技术突破不断，工业落地加速" class="headerlink" title="智能语音这一年：技术突破不断，工业落地加速"></a>智能语音这一年：技术突破不断，工业落地加速</h4><h5 id="语⾳领域的⼤规模预训练模型层出不穷"><a href="#语⾳领域的⼤规模预训练模型层出不穷" class="headerlink" title="语⾳领域的⼤规模预训练模型层出不穷"></a>语⾳领域的⼤规模预训练模型层出不穷</h5><h5 id="工业界落地加速"><a href="#工业界落地加速" class="headerlink" title="工业界落地加速"></a>工业界落地加速</h5><h5 id="商业化难点主要在于商业模式选择"><a href="#商业化难点主要在于商业模式选择" class="headerlink" title="商业化难点主要在于商业模式选择"></a>商业化难点主要在于商业模式选择</h5><h5 id="端到端和预训练等技术仍然值得关注"><a href="#端到端和预训练等技术仍然值得关注" class="headerlink" title="端到端和预训练等技术仍然值得关注"></a>端到端和预训练等技术仍然值得关注</h5><h4 id="群雄逐鹿，谁能赢得自动驾驶之战？"><a href="#群雄逐鹿，谁能赢得自动驾驶之战？" class="headerlink" title="群雄逐鹿，谁能赢得自动驾驶之战？"></a>群雄逐鹿，谁能赢得自动驾驶之战？</h4><h5 id="造车热"><a href="#造车热" class="headerlink" title="造车热"></a>造车热</h5><h5 id="商业化前夜"><a href="#商业化前夜" class="headerlink" title="商业化前夜"></a>商业化前夜</h5><h5 id="2022，这些技术将是下半场竞争胜负的关键"><a href="#2022，这些技术将是下半场竞争胜负的关键" class="headerlink" title="2022，这些技术将是下半场竞争胜负的关键"></a>2022，这些技术将是下半场竞争胜负的关键</h5><h4 id="NLP，黄金时代持续？"><a href="#NLP，黄金时代持续？" class="headerlink" title="NLP，黄金时代持续？"></a>NLP，黄金时代持续？</h4><h5 id="基于提示的微调技术迅速流行"><a href="#基于提示的微调技术迅速流行" class="headerlink" title="基于提示的微调技术迅速流行"></a>基于提示的微调技术迅速流行</h5><h5 id="与-CV、语音识别相比，NLP-项目在业务中落地往往较慢"><a href="#与-CV、语音识别相比，NLP-项目在业务中落地往往较慢" class="headerlink" title="与 CV、语音识别相比，NLP 项目在业务中落地往往较慢"></a>与 CV、语音识别相比，NLP 项目在业务中落地往往较慢</h5><h5 id="明年，NLP-将在哪些场景实现规模化落地？"><a href="#明年，NLP-将在哪些场景实现规模化落地？" class="headerlink" title="明年，NLP 将在哪些场景实现规模化落地？"></a>明年，NLP 将在哪些场景实现规模化落地？</h5><h5 id="2022-年，NLP-值得关注的技术点"><a href="#2022-年，NLP-值得关注的技术点" class="headerlink" title="2022 年，NLP 值得关注的技术点"></a>2022 年，NLP 值得关注的技术点</h5><h4 id="元宇宙概念大火，计算机视觉是基石技术之一"><a href="#元宇宙概念大火，计算机视觉是基石技术之一" class="headerlink" title="元宇宙概念大火，计算机视觉是基石技术之一"></a>元宇宙概念大火，计算机视觉是基石技术之一</h4><h5 id="具身智能，从被动式-AI-转向主动式人工智能"><a href="#具身智能，从被动式-AI-转向主动式人工智能" class="headerlink" title="具身智能，从被动式 AI 转向主动式人工智能"></a>具身智能，从被动式 AI 转向主动式人工智能</h5><h5 id="进入元宇宙，需要智能感知和交互这张门票"><a href="#进入元宇宙，需要智能感知和交互这张门票" class="headerlink" title="进入元宇宙，需要智能感知和交互这张门票"></a>进入元宇宙，需要智能感知和交互这张门票</h5><h5 id="趋势一：面向内容生成的-AIGC"><a href="#趋势一：面向内容生成的-AIGC" class="headerlink" title="趋势一：面向内容生成的 AIGC"></a>趋势一：面向内容生成的 AIGC</h5><h5 id="趋势二：SCV-合成"><a href="#趋势二：SCV-合成" class="headerlink" title="趋势二：SCV 合成"></a>趋势二：SCV 合成</h5><h4 id="制约知识图谱商业化落地的主要问题在于标准化"><a href="#制约知识图谱商业化落地的主要问题在于标准化" class="headerlink" title="制约知识图谱商业化落地的主要问题在于标准化"></a>制约知识图谱商业化落地的主要问题在于标准化</h4><h5 id="重要技术进展"><a href="#重要技术进展" class="headerlink" title="重要技术进展"></a>重要技术进展</h5><h5 id="应用落地进展"><a href="#应用落地进展" class="headerlink" title="应用落地进展"></a>应用落地进展</h5><h3 id="2022-年，值得关注的重要技术趋势"><a href="#2022-年，值得关注的重要技术趋势" class="headerlink" title="2022 年，值得关注的重要技术趋势"></a>2022 年，值得关注的重要技术趋势</h3><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><h2 id="解读大前端的2021：究竟“卷”出了什么名堂？"><a href="#解读大前端的2021：究竟“卷”出了什么名堂？" class="headerlink" title="解读大前端的2021：究竟“卷”出了什么名堂？"></a>解读大前端的2021：究竟“卷”出了什么名堂？</h2><h2 id="解读操作系统的2021：触到了创新的天花板，却站在巨变的前夜"><a href="#解读操作系统的2021：触到了创新的天花板，却站在巨变的前夜" class="headerlink" title="解读操作系统的2021：触到了创新的天花板，却站在巨变的前夜"></a>解读操作系统的2021：触到了创新的天花板，却站在巨变的前夜</h2><h2 id="解读服务网格的2021：告别架构“大跃进”，技术生态百家争鸣"><a href="#解读服务网格的2021：告别架构“大跃进”，技术生态百家争鸣" class="headerlink" title="解读服务网格的2021：告别架构“大跃进”，技术生态百家争鸣"></a>解读服务网格的2021：告别架构“大跃进”，技术生态百家争鸣</h2><h2 id="解读Julia的2021：逐步迈向主流编程语言"><a href="#解读Julia的2021：逐步迈向主流编程语言" class="headerlink" title="解读Julia的2021：逐步迈向主流编程语言"></a>解读Julia的2021：逐步迈向主流编程语言</h2><h2 id="解读中间件的2021：被云原生重塑之后，选型更难了"><a href="#解读中间件的2021：被云原生重塑之后，选型更难了" class="headerlink" title="解读中间件的2021：被云原生重塑之后，选型更难了"></a>解读中间件的2021：被云原生重塑之后，选型更难了</h2><h2 id="解读架构的2021：服务网格开道，云原生架构成型"><a href="#解读架构的2021：服务网格开道，云原生架构成型" class="headerlink" title="解读架构的2021：服务网格开道，云原生架构成型"></a>解读架构的2021：服务网格开道，云原生架构成型</h2><h2 id="2021年是开源鸿蒙的元年，也是打基础的一年"><a href="#2021年是开源鸿蒙的元年，也是打基础的一年" class="headerlink" title="2021年是开源鸿蒙的元年，也是打基础的一年"></a>2021年是开源鸿蒙的元年，也是打基础的一年</h2><h2 id="解读鸿蒙系统的2021：喧嚣褪去，生态初具规模"><a href="#解读鸿蒙系统的2021：喧嚣褪去，生态初具规模" class="headerlink" title="解读鸿蒙系统的2021：喧嚣褪去，生态初具规模"></a>解读鸿蒙系统的2021：喧嚣褪去，生态初具规模</h2><h2 id="解读开源的2021：从“开发者亚文化”，变成主流软件开发模式"><a href="#解读开源的2021：从“开发者亚文化”，变成主流软件开发模式" class="headerlink" title="解读开源的2021：从“开发者亚文化”，变成主流软件开发模式"></a>解读开源的2021：从“开发者亚文化”，变成主流软件开发模式</h2><h2 id="解读计算机视觉的2021：「进化」的力量推动技术变革，元宇宙时代的重要技术基础"><a href="#解读计算机视觉的2021：「进化」的力量推动技术变革，元宇宙时代的重要技术基础" class="headerlink" title="解读计算机视觉的2021：「进化」的力量推动技术变革，元宇宙时代的重要技术基础"></a>解读计算机视觉的2021：「进化」的力量推动技术变革，元宇宙时代的重要技术基础</h2><h2 id="解读预训练大模型的2021年：人们正在驯服这些“庞然大物”"><a href="#解读预训练大模型的2021年：人们正在驯服这些“庞然大物”" class="headerlink" title="解读预训练大模型的2021年：人们正在驯服这些“庞然大物”"></a>解读预训练大模型的2021年：人们正在驯服这些“庞然大物”</h2><h2 id="解读Go语言的2021：稳定为王"><a href="#解读Go语言的2021：稳定为王" class="headerlink" title="解读Go语言的2021：稳定为王"></a>解读Go语言的2021：稳定为王</h2><h2 id="解读数据库的2021：资本进来添了一把火，开源已占据半壁江山"><a href="#解读数据库的2021：资本进来添了一把火，开源已占据半壁江山" class="headerlink" title="解读数据库的2021：资本进来添了一把火，开源已占据半壁江山"></a>解读数据库的2021：资本进来添了一把火，开源已占据半壁江山</h2><h2 id="漫谈操作系统现状：波澜不惊的应用环境与风起云涌的技术狂潮"><a href="#漫谈操作系统现状：波澜不惊的应用环境与风起云涌的技术狂潮" class="headerlink" title="漫谈操作系统现状：波澜不惊的应用环境与风起云涌的技术狂潮"></a>漫谈操作系统现状：波澜不惊的应用环境与风起云涌的技术狂潮</h2><p><strong>2022年度技术展望</strong></p><h2 id="编程语言将走入怎样的2022"><a href="#编程语言将走入怎样的2022" class="headerlink" title="编程语言将走入怎样的2022"></a>编程语言将走入怎样的2022</h2><h2 id="展望2022年大数据趋势：上云短期不会是ClickHouse社区目标，现在仍是“黄金时代”"><a href="#展望2022年大数据趋势：上云短期不会是ClickHouse社区目标，现在仍是“黄金时代”" class="headerlink" title="展望2022年大数据趋势：上云短期不会是ClickHouse社区目标，现在仍是“黄金时代”"></a>展望2022年大数据趋势：上云短期不会是ClickHouse社区目标，现在仍是“黄金时代”</h2><h2 id="展望中间件的2022：微服务中间件还需进一步优化，消息队列迈向“标准-化”"><a href="#展望中间件的2022：微服务中间件还需进一步优化，消息队列迈向“标准-化”" class="headerlink" title="展望中间件的2022：微服务中间件还需进一步优化，消息队列迈向“标准 化”"></a>展望中间件的2022：微服务中间件还需进一步优化，消息队列迈向“标准 化”</h2><h2 id="2022年，云原生领域有哪些值得关注的趋势？"><a href="#2022年，云原生领域有哪些值得关注的趋势？" class="headerlink" title="2022年，云原生领域有哪些值得关注的趋势？"></a>2022年，云原生领域有哪些值得关注的趋势？</h2><h2 id="展望架构的2022：热度居高不下的云原生，如何撑起架构的未来"><a href="#展望架构的2022：热度居高不下的云原生，如何撑起架构的未来" class="headerlink" title="展望架构的2022：热度居高不下的云原生，如何撑起架构的未来"></a>展望架构的2022：热度居高不下的云原生，如何撑起架构的未来</h2><h2 id="展望大前端的2022：VR大潮来袭，大前端迎来新机遇"><a href="#展望大前端的2022：VR大潮来袭，大前端迎来新机遇" class="headerlink" title="展望大前端的2022：VR大潮来袭，大前端迎来新机遇"></a>展望大前端的2022：VR大潮来袭，大前端迎来新机遇</h2><h2 id="展望操作系统的2022：加速驶向快车道，云、XPU和开源成“催化剂”"><a href="#展望操作系统的2022：加速驶向快车道，云、XPU和开源成“催化剂”" class="headerlink" title="展望操作系统的2022：加速驶向快车道，云、XPU和开源成“催化剂”"></a>展望操作系统的2022：加速驶向快车道，云、XPU和开源成“催化剂”</h2><h2 id="对话小马智行：量产、商业化、路线之争，聊聊自动驾驶的现在和未来"><a href="#对话小马智行：量产、商业化、路线之争，聊聊自动驾驶的现在和未来" class="headerlink" title="对话小马智行：量产、商业化、路线之争，聊聊自动驾驶的现在和未来"></a>对话小马智行：量产、商业化、路线之争，聊聊自动驾驶的现在和未来</h2><h3 id="对话腾讯云数据库技术负责人：得益于开源的深入和云厂商的崛起，数据库又重新回到了聚光灯下"><a href="#对话腾讯云数据库技术负责人：得益于开源的深入和云厂商的崛起，数据库又重新回到了聚光灯下" class="headerlink" title="对话腾讯云数据库技术负责人：得益于开源的深入和云厂商的崛起，数据库又重新回到了聚光灯下"></a>对话腾讯云数据库技术负责人：得益于开源的深入和云厂商的崛起，数据库又重新回到了聚光灯下</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;2021年技术盘点与展望&quot;&gt;&lt;a href=&quot;#2021年技术盘点与展望&quot; class=&quot;headerlink&quot; title=&quot;2021年技术盘点与展望&quot;&gt;&lt;/a&gt;2021年技术盘点与展望&lt;/h1&gt;&lt;p&gt;本文摘抄自infoQ《2021年技术盘点与展望》&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
      <category term="技术视野" scheme="http://iwantjingjing.com/categories/%E6%8A%80%E6%9C%AF%E8%A7%86%E9%87%8E/"/>
    
    
      <category term="技术视野" scheme="http://iwantjingjing.com/tags/%E6%8A%80%E6%9C%AF%E8%A7%86%E9%87%8E/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch7.15指南</title>
    <link href="http://iwantjingjing.com/2021/11/30/Elasticsearch7-15%E6%8C%87%E5%8D%97/"/>
    <id>http://iwantjingjing.com/2021/11/30/Elasticsearch7-15%E6%8C%87%E5%8D%97/</id>
    <published>2021-11-30T08:41:17.000Z</published>
    <updated>2021-12-03T08:28:30.261Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Elasticsearch7-15指南"><a href="#Elasticsearch7-15指南" class="headerlink" title="Elasticsearch7.15指南"></a>Elasticsearch7.15指南</h2><h3 id="什么是Elasticsearch"><a href="#什么是Elasticsearch" class="headerlink" title="什么是Elasticsearch?"></a>什么是Elasticsearch?</h3><p>你知道，为了搜索（和分析）</p><p>Elasticsearch 是位于 Elastic Stack 核心的分布式搜索和分析引擎。Logstash 和 Beats 有助于收集、聚合和丰富您的数据并将其存储在 Elasticsearch 中。Kibana<br>使您能够以交互方式探索、可视化和共享对数据的洞察，并管理和监控堆栈。Elasticsearch 是索引、搜索和分析魔法发生的地方。</p><p>Elasticsearch 为所有类型的数据提供近乎实时的搜索和分析。无论您拥有结构化或非结构化文本、数值数据还是地理空间数据，Elasticsearch<br>都可以以支持快速搜索的方式高效地存储和索引它。您可以超越简单的数据检索和聚合信息来发现数据中的趋势和模式。随着您的数据和查询量的增长，Elasticsearch 的分布式特性使您的部署能够随之无缝增长。</p><p>虽然并非所有问题都是搜索问题，但 Elasticsearch 提供了在各种用例中处理数据的速度和灵活性：</p><ul><li>向应用程序或网站添加搜索框</li><li>存储和分析日志、指标和安全事件数据</li><li>使用机器学习自动实时建模数据的行为</li><li>使用 Elasticsearch 作为存储引擎自动化业务工作流</li><li>使用 Elasticsearch 作为地理信息系统 (GIS) 管理、集成和分析空间信息</li><li>使用 Elasticsearch 作为生物信息学研究工具存储和处理遗传数据</li></ul><p>我们不断对人们使用搜索的新颖方式感到惊讶。但是，无论您的用例是否与其中之一类似，或者您正在使用 Elasticsearch 来解决新问题，您在 Elasticsearch 中处理数据、文档和索引的方式都是相同的。</p><h3 id="数据输入：文档和索引"><a href="#数据输入：文档和索引" class="headerlink" title="数据输入：文档和索引"></a>数据输入：文档和索引</h3><p>Elasticsearch 是一个分布式文档存储。Elasticsearch 不是将信息存储为列状数据的行，而是存储已序列化为 JSON 文档的复杂数据结构。当集群中有多个 Elasticsearch<br>节点时，存储的文档分布在整个集群中，并且可以从任何节点立即访问。</p><p>存储文档后，它会被编入索引，并且可以近乎实时地在1 秒内完全搜索。Elasticsearch 使用一种称为倒排索引的数据结构，它支持非常快速的全文搜索。倒排索引列出出现在任何文档中的每个唯一单词，并标识每个单词出现的所有文档。</p><p>可以将索引视为文档的优化集合，每个文档都是字段的集合，这些字段是包含您的数据的键值对。默认情况下，Elasticsearch<br>索引每个字段中的所有数据，每个索引字段都有一个专用的、优化的数据结构。例如，文本字段存储在倒排索引中，数值和地理字段存储在 BKD 树中。使用每个字段的数据结构来组合和返回搜索结果的能力使 Elasticsearch 如此之快。</p><p>Elasticsearch 还具有无模式的能力，这意味着可以在不明确指定如何处理文档中可能出现的每个不同字段的情况下为文档编制索引。启用动态映射后，Elasticsearch<br>会自动检测并将新字段添加到索引中。这种默认行为使索引和探索数据变得容易——只需开始索引文档，Elasticsearch 就会检测并将布尔值、浮点和整数值、日期和字符串映射到适当的 Elasticsearch 数据类型。</p><p>但是，归根结底，您比 Elasticsearch 更了解您的数据以及您希望如何使用它。您可以定义规则来控制动态映射并显式定义映射以完全控制字段的存储和索引方式。</p><p>定义您自己的映射使您能够：</p><ul><li>区分全文字符串字段和精确值字符串字段</li><li>执行特定于语言的文本分析</li><li>优化部分匹配的字段</li><li>使用自定义日期格式</li><li>使用无法自动检测到的 数据类型geo_point和geo_shape<br>为了不同的目的以不同的方式索引相同的字段通常很有用。例如，您可能希望将字符串字段索引为用于全文搜索的文本字段和用于排序或聚合数据的关键字字段。或者，您可以选择使用多个语言分析器来处理包含用户输入的字符串字段的内容。</li></ul><p>在索引期间应用于全文字段的分析链也在搜索时使用。当您查询全文字段时，在索引中查找术语之前，查询文本会经过相同的分析。</p><h3 id="信息输出：搜索和分析"><a href="#信息输出：搜索和分析" class="headerlink" title="信息输出：搜索和分析"></a>信息输出：搜索和分析</h3><p>虽然您可以将 Elasticsearch 用作文档存储并检索文档及其元数据，但真正的强大之处在于能够轻松访问构建在 Apache Lucene 搜索引擎库上的全套搜索功能。</p><p>Elasticsearch 提供了一个简单、一致的 REST API 来管理您的集群以及索引和搜索您的数据。出于测试目的，您可以直接从命令行或通过 Kibana 中的开发人员控制台轻松提交请求。在您的应用程序中，您可以将<br>Elasticsearch 客户端 用于您选择的语言：Java、JavaScript、Go、.NET、PHP、Perl、Python 或 Ruby。</p><p>搜索您的数据</p><p>Elasticsearch REST API 支持结构化查询、全文查询和将两者结合的复杂查询。结构化查询类似于您可以在 SQL<br>中构造的查询类型。例如，您可以搜索索引中的gender和age字段并按字段employee对匹配项进行排序hire_date。全文查询查找与查询字符串匹配的所有文档，并按相关性排序返回它们——它们与您的搜索词的匹配程度。</p><p>除了搜索单个术语外，您还可以执行短语搜索、相似性搜索和前缀搜索，并获得自动完成建议。</p><p>有要搜索的地理空间数据或其他数字数据吗？Elasticsearch 在支持高性能地理和数值查询的优化数据结构中索引非文本数据。</p><p>您可以使用 Elasticsearch 的综合 JSON 样式查询语言 ( Query DSL )访问所有这些搜索功能。您还可以构建SQL 样式的查询以在 Elasticsearch 内部搜索和聚合数据，JDBC 和 ODBC<br>驱动程序使广泛的第三方应用程序能够通过 SQL 与 Elasticsearch 交互。</p><p>分析您的数据编辑 Elasticsearch 聚合使您能够构建复杂的数据摘要并深入了解关键指标、模式和趋势。聚合不仅可以找到众所周知的“大海捞针”，还可以让您回答以下问题：</p><ul><li>大海捞针有多少针？</li><li>针的平均长度是多少？</li><li>制造商细分的针的中位数长度是多少？</li><li>在过去的六个月中，每一个月都向大海捞针添加了多少针？</li></ul><p>您还可以使用聚合来回答更微妙的问题，例如：</p><ul><li>您最受欢迎的针头制造商是哪些？</li><li>是否有异常或异常的针团？</li></ul><p>因为聚合利用了用于搜索的相同数据结构，所以它们也非常快。这使您能够实时分析和可视化数据。您的报告和仪表板会随着数据的变化而更新，以便您可以根据最新信息采取行动。</p><p>更重要的是，聚合与搜索请求一起运行。您可以在单个请求中对相同数据同时搜索文档、过滤结果和执行分析。并且因为聚合是在特定搜索的上下文中计算的，所以您不仅会显示所有 70 号针的计数，还显示了与用户搜索条件匹配的 70<br>号针的计数——例如，所有尺寸 70不粘绣花针。</p><p>但是等等，还有更多编辑</p><p>想要自动化时间序列数据的分析吗？您可以使用 机器学习功能创建数据中正常行为的准确基线并识别异常模式。通过机器学习，您可以检测：</p><ul><li>与值、计数或频率的时间偏差相关的异常</li><li>统计稀有度</li><li>某个群体成员的异常行为</li></ul><p>最好的部分是？您无需指定算法、模型或其他与数据科学相关的配置即可执行此操作。</p><h3 id="可扩展性和弹性：集群、节点和分片"><a href="#可扩展性和弹性：集群、节点和分片" class="headerlink" title="可扩展性和弹性：集群、节点和分片"></a>可扩展性和弹性：集群、节点和分片</h3><p>Elasticsearch 旨在始终可用并根据您的需求进行扩展。它通过自然分布来做到这一点。您可以将服务器（节点）添加到集群以增加容量，Elasticsearch<br>会自动在所有可用节点之间分配您的数据和查询负载。无需大修您的应用程序，Elasticsearch 知道如何平衡多节点集群以提供可扩展性和高可用性。节点越多越好。</p><p>这是如何运作的？在幕后，Elasticsearch 索引实际上只是一个或多个物理分片的逻辑分组，其中每个分片实际上是一个独立的索引。通过将索引中的文档分布在多个分片中，并将这些分片分布在多个节点上，Elasticsearch<br>可以确保冗余，这既可以防止硬件故障，又可以在将节点添加到集群时增加查询容量。随着集群的增长（或缩小），Elasticsearch 会自动迁移分片以重新平衡集群。</p><p>有两种类型的分片：主分片和副本。索引中的每个文档都属于一个主分片。副本分片是主分片的副本。副本提供数据的冗余副本，以防止硬件故障并增加处理读取请求（如搜索或检索文档）的容量。</p><p>索引中的主分片数量在创建索引时是固定的，但副本分片的数量可以随时更改，而不会中断索引或查询操作。</p><p>这取决于……</p><p>关于分片大小和为索引配置的主分片数量，有许多性能考虑和权衡。分片越多，维护这些索引的开销就越大。分片大小越大，当 Elasticsearch 需要重新平衡集群时，移动分片所需的时间就越长。</p><p>查询大量小分片会使每个分片的处理速度更快，但更多查询意味着更多开销，因此查询较少数量的较大分片可能会更快。简而言之……视情况而定。</p><p>作为起点：</p><ul><li>旨在将平均分片大小保持在几 GB 到几十 GB 之间。对于具有基于时间的数据的用例，通常会看到 20GB 到 40GB 范围内的分片。</li><li>避免大量碎片问题。一个节点可以容纳的分片数量与可用的堆空间成正比。作为一般规则，每 GB 堆空间的分片数应小于 20。</li></ul><p>为您的用例确定最佳配置的最佳方法是 使用您自己的数据和查询进行测试。</p><p>发生灾害时</p><p>集群节点之间需要良好、可靠的连接。为了提供更好的连接，您通常将节点放在同一数据中心或附近的数据中心。但是，为了保持高可用性，您还需要避免任何单点故障。在一个位置发生重大中断的情况下，另一个位置的服务器需要能够接管。答案？跨集群复制 (<br>CCR)。</p><p>CCR 提供了一种将索引从主集群自动同步到可用作热备份的辅助远程集群的方法。如果主集群出现故障，辅助集群可以接管。您还可以使用 CCR 创建辅助集群，以便为您的用户提供地理位置邻近的读取请求。</p><p>跨集群复制是主动-被动的。主集群上的索引是活动的领导者索引，处理所有写请求。复制到辅助集群的索引是只读的跟随者。</p><p>护理和喂养</p><p>与任何企业系统一样，您需要工具来保护、管理和监控您的 Elasticsearch 集群。集成到 Elasticsearch 中的安全、监控和管理功能使您能够将Kibana 用作管理集群的控制中心。类似的特征数据汇总和指标生命周期管理<br>可帮助您明智随着时间的推移管理您的数据。</p><h3 id="7-15-中的新功能"><a href="#7-15-中的新功能" class="headerlink" title="7.15 中的新功能"></a>7.15 中的新功能</h3><p>以下是 Elasticsearch 7.15 中新增和改进的亮点！</p><p>有关此版本的详细信息，请参阅发行说明和 迁移指南。</p><p>其他版本： 7.14 | 7.13 | 7.12 | 7.11 | 7.10 | 7.9 | 7.8 | 7.7 | 7.6 | 7.5 | 7.4 | 7.3 | 7.2 | 7.1 | 7.0</p><p>索引磁盘使用API编辑</p><p>有一个新的 API 支持分析索引的每个字段的磁盘使用情况，包括整个索引本身。API 通过迭代字段的内容并跟踪读取的字节数来估计字段的磁盘使用情况。请参阅分析索引磁盘使用情况 API。</p><p>搜索矢量切片 API编辑</p><p>有一个新端点可用于从存储在 Elasticsearch 中的地理空间数据生成矢量切片。此功能对于想要在地图上呈现存储在 Elasticsearch 中的地理空间信息的任何应用程序都很有用。请参阅搜索矢量切片 API。</p><p>复合运行时字段编辑</p><p>运行时字段支持 grok 和 dissect 模式，但之前仅针对单个字段发出值。您现在可以使用composite运行时字段从单个字段发出多个值。请参阅定义复合运行时字段。</p><h3 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h3><p>本指南帮助初学者学习如何：</p><ul><li>在测试环境中安装和运行 Elasticsearch</li><li>将数据添加到 Elasticsearch</li><li>搜索和排序数据</li><li>在搜索期间从非结构化内容中提取字段</li></ul><h4 id="运行-Elasticsearch编辑"><a href="#运行-Elasticsearch编辑" class="headerlink" title="运行 Elasticsearch编辑"></a>运行 Elasticsearch编辑</h4><p>设置 Elasticsearch 的最简单方法是在 Elastic Cloud 上使用 Elasticsearch Service 创建托管部署。如果您更喜欢管理自己的测试环境，可以使用 Docker 安装和运行<br>Elasticsearch。</p><blockquote><blockquote><p>弹性搜索服务</p></blockquote><ol><li>获得免费试用。</li><li>登录Elastic Cloud。</li><li>单击创建部署。</li><li>选择一个解决方案并为您的部署命名。</li><li>单击创建部署并下载elastic用户的密码。</li></ol></blockquote><blockquote><blockquote><p>docker 安装</p></blockquote><p><strong>安装并运行 Elasticsearch</strong></p><p>1.安装并启动Docker 桌面。</p><p>2.运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker network create elastic</span><br><span class="line">docker pull docker.elastic.co&#x2F;elasticsearch&#x2F;elasticsearch:7.15.2</span><br><span class="line">docker run --name es01-test --net elastic -p 127.0.0.1:9200:9200 -p 127.0.0.1:9300:9300 -e &quot;discovery.type&#x3D;single-node&quot; docker.elastic.co&#x2F;elasticsearch&#x2F;elasticsearch:7.15.2</span><br></pre></td></tr></table></figure><p><strong>安装并运行 Kibana</strong></p><p>要使用直观的 UI 分析、可视化和管理 Elasticsearch 数据，请安装 Kibana。</p><p>1.在新的终端会话中，运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;docker pull docker.elastic.co&#x2F;kibana&#x2F;kibana:7.15.2</span><br><span class="line">&gt;docker run --name kib01-test --net elastic -p 127.0.0.1:5601:5601 -e &quot;ELASTICSEARCH_HOSTS&#x3D;http:&#x2F;&#x2F;es01-test:9200&quot; docker.elastic.co&#x2F;kibana&#x2F;kibana:7.15.2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.要访问 Kibana，请转到<a href="http://localhost:5601" target="_blank" rel="noopener">http://localhost:5601</a></p></blockquote><h4 id="向-Elasticsearch-发送请求编辑"><a href="#向-Elasticsearch-发送请求编辑" class="headerlink" title="向 Elasticsearch 发送请求编辑"></a>向 Elasticsearch 发送请求编辑</h4><p>您使用 REST API 向 Elasticsearch 发送数据和其他请求。这使您可以使用任何发送 HTTP 请求的客户端（例如curl ）与 Elasticsearch 进行交互 。您还可以使用 Kibana 的控制台向<br>Elasticsearch 发送请求。</p><blockquote><blockquote><p>弹性搜索服务<br>使用卷曲</p></blockquote><p>1.要使用 curl 或其他客户端与 Elasticsearch 通信，您需要集群的端点。进入Elasticsearch页面，点击Copy endpoint。<br>2.要提交示例 API 请求，请在新的终端会话中运行以下 curl 命令。替换<password>为elastic用户的密码。替换<elasticsearch_endpoint>为您的端点。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl - u elastic :&lt;密码&gt; &lt; elasticsearch_endpoint &gt;&#x2F;</span><br></pre></td></tr></table></figure><p>使用 Kibana</p><p>1.转到Kibana页面并单击Launch。</p><p>2.打开 Kibana 的主菜单并转到Dev Tools &gt; Console。</p><p>在控制台中运行以下示例 API 请求：</p></blockquote><p>Add dataedit</p><p>You add data to Elasticsearch as JSON objects called documents. Elasticsearch stores these documents in searchable indices.</p><p>For time series data, such as logs and metrics, you typically add documents to a data stream made up of multiple auto-generated backing indices.</p><p>A data stream requires an index template that matches its name. Elasticsearch uses this template to configure the stream’s backing indices. Documents sent to a data stream must have a @timestamp field.</p><p>Add a single documentedit</p><p>Submit the following indexing request to add a single log entry to the logs-my_app-default data stream. Since logs-my_app-default doesn’t exist, the request automatically creates it using the built-in logs-<em>-</em> index template.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST &quot;localhost:9200&#x2F;logs-my_app-default&#x2F;_doc?pretty&quot; -H &#39;Content-Type: application&#x2F;json&#39; -d&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;@timestamp&quot;: &quot;2099-05-06T16:21:15.000Z&quot;,</span><br><span class="line">  &quot;event&quot;: &#123;</span><br><span class="line">    &quot;original&quot;: &quot;192.0.2.42 - - [06&#x2F;May&#x2F;2099:16:21:15 +0000] \&quot;GET &#x2F;images&#x2F;bg.jpg HTTP&#x2F;1.0\&quot; 200 24736&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#39;</span><br></pre></td></tr></table></figure><p>The response includes metadata that Elasticsearch generates for the document:</p><ul><li>The backing _index that contains the document. Elasticsearch automatically generates the names of backing indices.</li><li>A unique _id for the document within the index.<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;_index&quot;: &quot;.ds-logs-my_app-default-2099-05-06-000001&quot;,</span><br><span class="line">  &quot;_type&quot;: &quot;_doc&quot;,</span><br><span class="line">  &quot;_id&quot;: &quot;gl5MJXMBMk1dGnErnBW8&quot;,</span><br><span class="line">  &quot;_version&quot;: 1,</span><br><span class="line">  &quot;result&quot;: &quot;created&quot;,</span><br><span class="line">  &quot;_shards&quot;: &#123;</span><br><span class="line">    &quot;total&quot;: 2,</span><br><span class="line">    &quot;successful&quot;: 1,</span><br><span class="line">    &quot;failed&quot;: 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;_seq_no&quot;: 0,</span><br><span class="line">  &quot;_primary_term&quot;: 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>Add multiple documentsedit</li></ul><p>Use the _bulk endpoint to add multiple documents in one request. Bulk data must be newline-delimited JSON (NDJSON). Each line must end in a newline character (\n), including the last line.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT &quot;localhost:9200&#x2F;logs-my_app-default&#x2F;_bulk?pretty&quot; -H &#39;Content-Type: application&#x2F;json&#39; -d&#39;</span><br><span class="line">&#123; &quot;create&quot;: &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;@timestamp&quot;: &quot;2099-05-07T16:24:32.000Z&quot;, &quot;event&quot;: &#123; &quot;original&quot;: &quot;192.0.2.242 - - [07&#x2F;May&#x2F;2020:16:24:32 -0500] \&quot;GET &#x2F;images&#x2F;hm_nbg.jpg HTTP&#x2F;1.0\&quot; 304 0&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;create&quot;: &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;@timestamp&quot;: &quot;2099-05-08T16:25:42.000Z&quot;, &quot;event&quot;: &#123; &quot;original&quot;: &quot;192.0.2.255 - - [08&#x2F;May&#x2F;2099:16:25:42 +0000] \&quot;GET &#x2F;favicon.ico HTTP&#x2F;1.0\&quot; 200 3638&quot; &#125; &#125;</span><br><span class="line">&#39;</span><br></pre></td></tr></table></figure><h4 id="Search-dataedit"><a href="#Search-dataedit" class="headerlink" title="Search dataedit"></a>Search dataedit</h4><p>Indexed documents are available for search in near real-time. The following search matches all log entries in logs-my_app-default and sorts them by @timestamp in descending order.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET &quot;localhost:9200&#x2F;logs-my_app-default&#x2F;_search?pretty&quot; -H &#39;Content-Type: application&#x2F;json&#39; -d&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123; &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;@timestamp&quot;: &quot;desc&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">&#39;</span><br></pre></td></tr></table></figure><p>By default, the hits section of the response includes up to the first 10 documents that match the search. The _source of each hit contains the original JSON object submitted during indexing.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;took&quot;: 2,</span><br><span class="line">  &quot;timed_out&quot;: false,</span><br><span class="line">  &quot;_shards&quot;: &#123;</span><br><span class="line">    &quot;total&quot;: 1,</span><br><span class="line">    &quot;successful&quot;: 1,</span><br><span class="line">    &quot;skipped&quot;: 0,</span><br><span class="line">    &quot;failed&quot;: 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;hits&quot;: &#123;</span><br><span class="line">    &quot;total&quot;: &#123;</span><br><span class="line">      &quot;value&quot;: 3,</span><br><span class="line">      &quot;relation&quot;: &quot;eq&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;max_score&quot;: null,</span><br><span class="line">    &quot;hits&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot;: &quot;.ds-logs-my_app-default-2099-05-06-000001&quot;,</span><br><span class="line">        &quot;_type&quot;: &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot;: &quot;PdjWongB9KPnaVm2IyaL&quot;,</span><br><span class="line">        &quot;_score&quot;: null,</span><br><span class="line">        &quot;_source&quot;: &#123;</span><br><span class="line">          &quot;@timestamp&quot;: &quot;2099-05-08T16:25:42.000Z&quot;,</span><br><span class="line">          &quot;event&quot;: &#123;</span><br><span class="line">            &quot;original&quot;: &quot;192.0.2.255 - - [08&#x2F;May&#x2F;2099:16:25:42 +0000] \&quot;GET &#x2F;favicon.ico HTTP&#x2F;1.0\&quot; 200 3638&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;sort&quot;: [</span><br><span class="line">          4081940742000</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      ...</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Get-specific-fields"><a href="#Get-specific-fields" class="headerlink" title="Get specific fields"></a>Get specific fields</h5><p>Parsing the entire _source is unwieldy for large documents. To exclude it from the response, set the _source parameter to false. Instead, use the fields parameter to retrieve the fields you want.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET &quot;localhost:9200&#x2F;logs-my_app-default&#x2F;_search?pretty&quot; -H &#39;Content-Type: application&#x2F;json&#39; -d&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123; &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;fields&quot;: [</span><br><span class="line">    &quot;@timestamp&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;_source&quot;: false,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;@timestamp&quot;: &quot;desc&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">&#39;</span><br></pre></td></tr></table></figure><p>The response contains each hit’s fields values as a flat array.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  &quot;hits&quot;: &#123;</span><br><span class="line">    ...</span><br><span class="line">    &quot;hits&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot;: &quot;.ds-logs-my_app-default-2099-05-06-000001&quot;,</span><br><span class="line">        &quot;_type&quot;: &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot;: &quot;PdjWongB9KPnaVm2IyaL&quot;,</span><br><span class="line">        &quot;_score&quot;: null,</span><br><span class="line">        &quot;fields&quot;: &#123;</span><br><span class="line">          &quot;@timestamp&quot;: [</span><br><span class="line">            &quot;2099-05-08T16:25:42.000Z&quot;</span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;sort&quot;: [</span><br><span class="line">          4081940742000</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      ...</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Search-a-date-range"><a href="#Search-a-date-range" class="headerlink" title="Search a date range"></a>Search a date range</h5><p>To search across a specific time or IP range, use a range query.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET &quot;localhost:9200&#x2F;logs-my_app-default&#x2F;_search?pretty&quot; -H &#39;Content-Type: application&#x2F;json&#39; -d&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;range&quot;: &#123;</span><br><span class="line">      &quot;@timestamp&quot;: &#123;</span><br><span class="line">        &quot;gte&quot;: &quot;2099-05-05&quot;,</span><br><span class="line">        &quot;lt&quot;: &quot;2099-05-08&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;fields&quot;: [</span><br><span class="line">    &quot;@timestamp&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;_source&quot;: false,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;@timestamp&quot;: &quot;desc&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">&#39;</span><br></pre></td></tr></table></figure><p>You can use date math to define relative time ranges. The following query searches for data from the past day, which won’t match any log entries in logs-my_app-default.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET &quot;localhost:9200&#x2F;logs-my_app-default&#x2F;_search?pretty&quot; -H &#39;Content-Type: application&#x2F;json&#39; -d&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;range&quot;: &#123;</span><br><span class="line">      &quot;@timestamp&quot;: &#123;</span><br><span class="line">        &quot;gte&quot;: &quot;now-1d&#x2F;d&quot;,</span><br><span class="line">        &quot;lt&quot;: &quot;now&#x2F;d&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;fields&quot;: [</span><br><span class="line">    &quot;@timestamp&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;_source&quot;: false,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;@timestamp&quot;: &quot;desc&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">&#39;</span><br></pre></td></tr></table></figure><h5 id="Extract-fields-from-unstructured-contentedit"><a href="#Extract-fields-from-unstructured-contentedit" class="headerlink" title="Extract fields from unstructured contentedit"></a>Extract fields from unstructured contentedit</h5><p>You can extract runtime fields from unstructured content, such as log messages, during a search.</p><p>Use the following search to extract the source.ip runtime field from event.original. To include it in the response, add source.ip to the fields parameter.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET &quot;localhost:9200&#x2F;logs-my_app-default&#x2F;_search?pretty&quot; -H &#39;Content-Type: application&#x2F;json&#39; -d&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;runtime_mappings&quot;: &#123;</span><br><span class="line">    &quot;source.ip&quot;: &#123;</span><br><span class="line">      &quot;type&quot;: &quot;ip&quot;,</span><br><span class="line">      &quot;script&quot;: &quot;String sourceip&#x3D;grok(\u0027%&#123;IPORHOST:sourceip&#125; .*\u0027).extract(doc[ \&quot;event.original\&quot; ].value)?.sourceip;\nif (sourceip !&#x3D; null) emit(sourceip);&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;range&quot;: &#123;</span><br><span class="line">      &quot;@timestamp&quot;: &#123;</span><br><span class="line">        &quot;gte&quot;: &quot;2099-05-05&quot;,</span><br><span class="line">        &quot;lt&quot;: &quot;2099-05-08&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;fields&quot;: [</span><br><span class="line">    &quot;@timestamp&quot;,</span><br><span class="line">    &quot;source.ip&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;_source&quot;: false,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;@timestamp&quot;: &quot;desc&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">&#39;</span><br></pre></td></tr></table></figure><h5 id="Combine-queriesedit"><a href="#Combine-queriesedit" class="headerlink" title="Combine queriesedit"></a>Combine queriesedit</h5><p>You can use the bool query to combine multiple queries. The following search combines two range queries: one on @timestamp and one on the source.ip runtime field.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET &quot;localhost:9200&#x2F;logs-my_app-default&#x2F;_search?pretty&quot; -H &#39;Content-Type: application&#x2F;json&#39; -d&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;runtime_mappings&quot;: &#123;</span><br><span class="line">    &quot;source.ip&quot;: &#123;</span><br><span class="line">      &quot;type&quot;: &quot;ip&quot;,</span><br><span class="line">      &quot;script&quot;: &quot;String sourceip&#x3D;grok(\u0027%&#123;IPORHOST:sourceip&#125; .*\u0027).extract(doc[ \&quot;event.original\&quot; ].value)?.sourceip;\nif (sourceip !&#x3D; null) emit(sourceip);&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;range&quot;: &#123;</span><br><span class="line">            &quot;@timestamp&quot;: &#123;</span><br><span class="line">              &quot;gte&quot;: &quot;2099-05-05&quot;,</span><br><span class="line">              &quot;lt&quot;: &quot;2099-05-08&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;range&quot;: &#123;</span><br><span class="line">            &quot;source.ip&quot;: &#123;</span><br><span class="line">              &quot;gte&quot;: &quot;192.0.2.0&quot;,</span><br><span class="line">              &quot;lte&quot;: &quot;192.0.2.240&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;fields&quot;: [</span><br><span class="line">    &quot;@timestamp&quot;,</span><br><span class="line">    &quot;source.ip&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;_source&quot;: false,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;@timestamp&quot;: &quot;desc&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">&#39;</span><br></pre></td></tr></table></figure><h5 id="Aggregate-dataedit"><a href="#Aggregate-dataedit" class="headerlink" title="Aggregate dataedit"></a>Aggregate dataedit</h5><p>Use aggregations to summarize data as metrics, statistics, or other analytics.</p><p>The following search uses an aggregation to calculate the average_response_size using the http.response.body.bytes runtime field. The aggregation only runs on documents that match the query.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET &quot;localhost:9200&#x2F;logs-my_app-default&#x2F;_search?pretty&quot; -H &#39;Content-Type: application&#x2F;json&#39; -d&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;runtime_mappings&quot;: &#123;</span><br><span class="line">    &quot;http.response.body.bytes&quot;: &#123;</span><br><span class="line">      &quot;type&quot;: &quot;long&quot;,</span><br><span class="line">      &quot;script&quot;: &quot;String bytes&#x3D;grok(\u0027%&#123;COMMONAPACHELOG&#125;\u0027).extract(doc[ \&quot;event.original\&quot; ].value)?.bytes;\nif (bytes !&#x3D; null) emit(Integer.parseInt(bytes));&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;aggs&quot;: &#123;</span><br><span class="line">    &quot;average_response_size&quot;:&#123;</span><br><span class="line">      &quot;avg&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;http.response.body.bytes&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;range&quot;: &#123;</span><br><span class="line">            &quot;@timestamp&quot;: &#123;</span><br><span class="line">              &quot;gte&quot;: &quot;2099-05-05&quot;,</span><br><span class="line">              &quot;lt&quot;: &quot;2099-05-08&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;fields&quot;: [</span><br><span class="line">    &quot;@timestamp&quot;,</span><br><span class="line">    &quot;http.response.body.bytes&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;_source&quot;: false,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;@timestamp&quot;: &quot;desc&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">&#39;</span><br></pre></td></tr></table></figure><p>The response’s aggregations object contains aggregation results.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  &quot;aggregations&quot; : &#123;</span><br><span class="line">    &quot;average_response_size&quot; : &#123;</span><br><span class="line">      &quot;value&quot; : 12368.0</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Explore more search optionsedit<br>To keep exploring, index more data to your data stream and check out Common search options.</p><h4 id="Clean-upedit"><a href="#Clean-upedit" class="headerlink" title="Clean upedit"></a>Clean upedit</h4><p>When you’re done, delete your test data stream and its backing indices.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X DELETE &quot;localhost:9200&#x2F;_data_stream&#x2F;logs-my_app-default?pretty&quot;</span><br></pre></td></tr></table></figure><p>You can also delete your test deployment.</p><blockquote><blockquote><p>Elasticsearch Service</p></blockquote><p>Click Delete deployment from the deployment overview page and follow the prompts.</p></blockquote><blockquote><blockquote><p>Self-managed</p></blockquote><p>To stop your Elasticsearch and Kibana Docker containers, run:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop es01-test</span><br><span class="line">docker stop kib01-test</span><br></pre></td></tr></table></figure><p>To remove the containers and their network, run:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;docker network rm elastic</span><br><span class="line">docker rm es01-test</span><br><span class="line">docker rm kib01-test</span><br></pre></td></tr></table></figure></blockquote><p><strong>What’s next?edit</strong></p><ul><li>Get the most out of your time series data by setting up data tiers and ILM. See Use Elasticsearch for time series data.</li><li>Use Fleet and Elastic Agent to collect logs and metrics directly from your data sources and send them to Elasticsearch. See the Fleet quick start guide.</li><li>Use Kibana to explore, visualize, and manage your Elasticsearch data. See the Kibana quick start guide.</li></ul><h3 id="Set-up-Elasticsearchedit"><a href="#Set-up-Elasticsearchedit" class="headerlink" title="Set up Elasticsearchedit"></a>Set up Elasticsearchedit</h3><p>This section includes information on how to setup Elasticsearch and get it running, including:</p><ul><li>Downloading</li><li>Installing</li><li>Starting</li><li>Configuring</li></ul><h4 id="Supported-platforms"><a href="#Supported-platforms" class="headerlink" title="Supported platforms"></a>Supported platforms</h4><p>The matrix of officially supported operating systems and JVMs is available here: Support Matrix. Elasticsearch is tested on the listed platforms, but it is possible that it will work on other platforms too.</p><h4 id="Java-JVM-Version"><a href="#Java-JVM-Version" class="headerlink" title="Java (JVM) Version"></a>Java (JVM) Version</h4><p>Elasticsearch is built using Java, and includes a bundled version of OpenJDK from the JDK maintainers (GPLv2+CE) within each distribution. The bundled JVM is the recommended JVM and is located within the jdk directory of the Elasticsearch home directory.</p><p>To use your own version of Java, set the ES_JAVA_HOME environment variable. If you must use a version of Java that is different from the bundled JVM, we recommend using a supported LTS version of Java. Elasticsearch will refuse to start if a known-bad version of Java is used. The bundled JVM directory may be removed when using your own JVM.</p><h4 id="Use-dedicated-hosts"><a href="#Use-dedicated-hosts" class="headerlink" title="Use dedicated hosts"></a>Use dedicated hosts</h4><p>In production, we recommend you run Elasticsearch on a dedicated host or as a primary service. Several Elasticsearch features, such as automatic JVM heap sizing, assume it’s the only resource-intensive application on the host or container. For example, you might run Metricbeat alongside Elasticsearch for cluster statistics, but a resource-heavy Logstash deployment should be on its own host.</p><h3 id="Installing-Elasticsearch"><a href="#Installing-Elasticsearch" class="headerlink" title="Installing Elasticsearch"></a>Installing Elasticsearch</h3><h4 id="Hosted-Elasticsearch"><a href="#Hosted-Elasticsearch" class="headerlink" title="Hosted Elasticsearch"></a>Hosted Elasticsearch</h4><p>You can run Elasticsearch on your own hardware or use our hosted Elasticsearch Service that is available on AWS, GCP, and Azure. Try the Elasticsearch Service for free.</p><h4 id="Installing-Elasticsearch-Yourself"><a href="#Installing-Elasticsearch-Yourself" class="headerlink" title="Installing Elasticsearch Yourself"></a>Installing Elasticsearch Yourself</h4><p>Elasticsearch is provided in the following package formats:</p><table><thead><tr><th align="left">系统</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">Linux and MacOS tar.gz archives</td><td align="left">The tar.gz archives are available for installation on any Linux distribution and MacOS.</td></tr><tr><td align="left">Windows .zip archive</td><td align="left">The zip archive is suitable for installation on Windows.</td></tr><tr><td align="left">deb</td><td align="left">The deb package is suitable for Debian, Ubuntu, and other Debian-based systems. Debian packages may be downloaded from the Elasticsearch website or from our Debian repository.</td></tr><tr><td align="left">rpm</td><td align="left">The rpm package is suitable for installation on Red Hat, Centos, SLES, OpenSuSE and other RPM-based systems. RPMs may be downloaded from the Elasticsearch website or from our RPM repository.</td></tr><tr><td align="left">msi</td><td align="left">[beta] This functionality is in beta and is subject to change. The design and code is less mature than official GA features and is being provided as-is with no warranties. Beta features are not subject to the support SLA of official GA features.The msi package is suitable for installation on Windows 64-bit systems with at least .NET 4.5 framework installed, and is the easiest choice for getting started with Elasticsearch on Windows. MSIs may be downloaded from the Elasticsearch website.</td></tr><tr><td align="left">docker</td><td align="left">Images are available for running Elasticsearch as Docker containers. They may be downloaded from the Elastic Docker Registry.<br><a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.15/docker.html" target="_blank" rel="noopener">Install Elasticsearch with Docker</a></td></tr><tr><td align="left">brew</td><td align="left">Formulae are available from the Elastic Homebrew tap for installing Elasticsearch on macOS with the Homebrew package manager.</td></tr></tbody></table><h4 id="Configuration-Management-Tools"><a href="#Configuration-Management-Tools" class="headerlink" title="Configuration Management Tools"></a>Configuration Management Tools</h4><p>We also provide the following configuration management tools to help with large deployments:</p><table><thead><tr><th align="left">tool</th><th align="left">url</th></tr></thead><tbody><tr><td align="left">Puppet</td><td align="left"><a href="https://github.com/voxpupuli/puppet-elasticsearch" target="_blank" rel="noopener">puppet-elasticsearch</a></td></tr><tr><td align="left">Chef</td><td align="left"><a href="https://github.com/elastic/cookbook-elasticsearch" target="_blank" rel="noopener">cookbook-elasticsearch</a></td></tr><tr><td align="left">Ansible</td><td align="left"><a href="https://github.com/elastic/ansible-elasticsearch" target="_blank" rel="noopener">ansible-elasticsearch</a></td></tr></tbody></table><h3 id="Install-Elasticsearch-from-archive-on-Linux-or-MacOS"><a href="#Install-Elasticsearch-from-archive-on-Linux-or-MacOS" class="headerlink" title="Install Elasticsearch from archive on Linux or MacOS"></a>Install Elasticsearch from archive on Linux or MacOS</h3><h3 id="Configuring-Elasticsearchedit"><a href="#Configuring-Elasticsearchedit" class="headerlink" title="Configuring Elasticsearchedit"></a>Configuring Elasticsearchedit</h3><p>Elasticsearch ships with good defaults and requires very little configuration. Most settings can be changed on a running cluster using the Cluster update settings API.</p><p>The configuration files should contain settings which are node-specific (such as node.name and paths), or settings which a node requires in order to be able to join a cluster, such as cluster.name and network.host.</p><h4 id="Config-files-locationedit"><a href="#Config-files-locationedit" class="headerlink" title="Config files locationedit"></a>Config files locationedit</h4><p>Elasticsearch has three configuration files:</p><ul><li>elasticsearch.yml for configuring Elasticsearch</li><li>jvm.options for configuring Elasticsearch JVM settings</li><li>log4j2.properties for configuring Elasticsearch logging</li></ul><p>These files are located in the config directory, whose default location depends on whether or not the installation is from an archive distribution (tar.gz or zip) or a package distribution (Debian or RPM packages).</p><p>For the archive distributions, the config directory location defaults to $ES_HOME/config. The location of the config directory can be changed via the ES_PATH_CONF environment variable as follows:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ES_PATH_CONF&#x3D;&#x2F;path&#x2F;to&#x2F;my&#x2F;config .&#x2F;bin&#x2F;elasticsearch</span><br></pre></td></tr></table></figure><p>Alternatively, you can export the ES_PATH_CONF environment variable via the command line or via your shell profile.</p><p>For the package distributions, the config directory location defaults to /etc/elasticsearch. The location of the config directory can also be changed via the ES_PATH_CONF environment variable, but note that setting this in your shell is not sufficient. Instead, this variable is sourced from /etc/default/elasticsearch (for the Debian package) and /etc/sysconfig/elasticsearch (for the RPM package). You will need to edit the ES_PATH_CONF=/etc/elasticsearch entry in one of these files accordingly to change the config directory location.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Elasticsearch7-15指南&quot;&gt;&lt;a href=&quot;#Elasticsearch7-15指南&quot; class=&quot;headerlink&quot; title=&quot;Elasticsearch7.15指南&quot;&gt;&lt;/a&gt;Elasticsearch7.15指南&lt;/h2&gt;&lt;h3 i
      
    
    </summary>
    
    
      <category term="elk" scheme="http://iwantjingjing.com/categories/elk/"/>
    
    
      <category term="elk" scheme="http://iwantjingjing.com/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>Mermaid实用教程</title>
    <link href="http://iwantjingjing.com/2021/11/25/Mermaid%E5%AE%9E%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://iwantjingjing.com/2021/11/25/Mermaid%E5%AE%9E%E7%94%A8%E6%95%99%E7%A8%8B/</id>
    <published>2021-11-25T08:54:16.000Z</published>
    <updated>2021-11-26T11:00:11.312Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://vincentruan.github.io/2020/02/04/Mermaid-%E5%AE%9E%E7%94%A8%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener">转发自</a></p><p><a href="https://mermaid-js.github.io/mermaid/#/" target="_blank" rel="noopener">官方文档</a></p><p><a href="https://github.com/knsv/mermaid" target="_blank" rel="noopener">github</a></p><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><h3 id="语法说明"><a href="#语法说明" class="headerlink" title="语法说明"></a>语法说明</h3><h4 id="图标方向"><a href="#图标方向" class="headerlink" title="图标方向"></a>图标方向</h4><p>Mermaid支持多种图表的方向，语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph 方向描述</span><br><span class="line">    图表中的其他语句...</span><br></pre></td></tr></table></figure><h5 id="方向描述"><a href="#方向描述" class="headerlink" title="方向描述"></a>方向描述</h5><table><thead><tr><th align="left">方向描述</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">TB</td><td align="left">从上到下</td></tr><tr><td align="left">BT</td><td align="left">从下到上</td></tr><tr><td align="left">RL</td><td align="left">从右到左</td></tr><tr><td align="left">LR</td><td align="left">从左到右</td></tr></tbody></table><h5 id="节点描述"><a href="#节点描述" class="headerlink" title="节点描述"></a>节点描述</h5><p>即流程图中每个文本块，包括开始、结束、处理、判断等。Mermaid中每个节点都有一个id，以及节点的文字。</p><table><thead><tr><th align="left">表述</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">id[文字]</td><td align="left">矩形节点</td></tr><tr><td align="left">id(文字)</td><td align="left">圆角矩形节点</td></tr><tr><td align="left">id((文字))</td><td align="left">圆形节点</td></tr><tr><td align="left">id&gt;文字}</td><td align="left">右向旗帜状节点</td></tr><tr><td align="left">id{文字}</td><td align="left">菱形节点</td></tr><tr><td align="left">需要注意的是，如果节点的文字中包含标点符号，需要时用双引号包裹起来。</td><td align="left"></td></tr></tbody></table><p>希望在文字中换行，请使用</p><p>替换换行</p><h5 id="节点间的连线"><a href="#节点间的连线" class="headerlink" title="节点间的连线"></a>节点间的连线</h5><table><thead><tr><th align="left">表述</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">&gt;</td><td align="left">添加尾部箭头</td></tr><tr><td align="left">-</td><td align="left">不添加尾部箭头</td></tr><tr><td align="left">–</td><td align="left">单线</td></tr><tr><td align="left">–text–</td><td align="left">单线上加文字</td></tr><tr><td align="left">==</td><td align="left">粗线</td></tr><tr><td align="left">==text==</td><td align="left">粗线加文字</td></tr><tr><td align="left">-.-</td><td align="left">虚线</td></tr><tr><td align="left">-.text.-</td><td align="left">虚线上加文字</td></tr></tbody></table><h5 id="子图表"><a href="#子图表" class="headerlink" title="子图表"></a>子图表</h5><p>使用以下语法添加子图表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">subgraph 子图表名称</span><br><span class="line">    子图表中的描述语句...</span><br><span class="line">end123</span><br></pre></td></tr></table></figure><h5 id="对font-awesome的支持"><a href="#对font-awesome的支持" class="headerlink" title="对font awesome的支持"></a>对font awesome的支持</h5><p>使用<code>fa: #图表名称#</code>的语法添加fontawesome</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph TD;</span><br><span class="line">    A--&gt;B;</span><br><span class="line">    A--&gt;C;</span><br><span class="line">    B--&gt;D;</span><br><span class="line">    C--&gt;D;</span><br></pre></td></tr></table></figure><h3 id="方向"><a href="#方向" class="headerlink" title="方向"></a>方向</h3><ul><li>TB/TD - top bottom</li><li>BT - bottom top</li><li>RL - right left</li><li>LR - left right</li></ul><h4 id="向下"><a href="#向下" class="headerlink" title="向下"></a>向下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">Start --&gt; Stop</span><br></pre></td></tr></table></figure><h4 id="向下-1"><a href="#向下-1" class="headerlink" title="向下"></a>向下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">Start --&gt; Stop</span><br></pre></td></tr></table></figure><h4 id="向上"><a href="#向上" class="headerlink" title="向上"></a>向上</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph BT</span><br><span class="line">Start --&gt; Stop</span><br></pre></td></tr></table></figure><h4 id="从右向左"><a href="#从右向左" class="headerlink" title="从右向左"></a>从右向左</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph RL</span><br><span class="line">Start --&gt; Stop</span><br></pre></td></tr></table></figure><h4 id="从左向右"><a href="#从左向右" class="headerlink" title="从左向右"></a>从左向右</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">Start --&gt; Stop</span><br></pre></td></tr></table></figure><h3 id="节点"><a href="#节点" class="headerlink" title="节点"></a>节点</h3><h4 id="普通节点"><a href="#普通节点" class="headerlink" title="普通节点"></a>普通节点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">id</span><br></pre></td></tr></table></figure><h4 id="带文字节点"><a href="#带文字节点" class="headerlink" title="带文字节点"></a>带文字节点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">id[带文字节点]</span><br></pre></td></tr></table></figure><h4 id="圆角节点"><a href="#圆角节点" class="headerlink" title="圆角节点"></a>圆角节点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">id(圆角节点)</span><br></pre></td></tr></table></figure><h4 id="圆形节点"><a href="#圆形节点" class="headerlink" title="圆形节点"></a>圆形节点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">id((圆形节点))</span><br></pre></td></tr></table></figure><h4 id="不对称节点"><a href="#不对称节点" class="headerlink" title="不对称节点"></a>不对称节点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">id&gt;不对称节点]</span><br></pre></td></tr></table></figure><h4 id="菱形节点"><a href="#菱形节点" class="headerlink" title="菱形节点"></a>菱形节点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">id&#123;菱形节点&#125;</span><br></pre></td></tr></table></figure><h3 id="连接线"><a href="#连接线" class="headerlink" title="连接线"></a>连接线</h3><h4 id="实线，有箭头，无文字"><a href="#实线，有箭头，无文字" class="headerlink" title="实线，有箭头，无文字"></a>实线，有箭头，无文字</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A--&gt;B</span><br></pre></td></tr></table></figure><h4 id="实线，无箭头，无文字"><a href="#实线，无箭头，无文字" class="headerlink" title="实线，无箭头，无文字"></a>实线，无箭头，无文字</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A---B</span><br></pre></td></tr></table></figure><h4 id="实线，无箭头，有文字"><a href="#实线，无箭头，有文字" class="headerlink" title="实线，无箭头，有文字"></a>实线，无箭头，有文字</h4><p>前面两个<code>-</code>,后面三个<code>-</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A-- 文字 ---B</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A--- |文字| B</span><br></pre></td></tr></table></figure><h4 id="实线，有箭头，有文字"><a href="#实线，有箭头，有文字" class="headerlink" title="实线，有箭头，有文字"></a>实线，有箭头，有文字</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A-- 文字 --&gt;B</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A--&gt; |文字| B</span><br></pre></td></tr></table></figure><h4 id="虚线，有箭头，有文字"><a href="#虚线，有箭头，有文字" class="headerlink" title="虚线，有箭头，有文字"></a>虚线，有箭头，有文字</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A-. text .-&gt; B</span><br></pre></td></tr></table></figure><h4 id="大箭头，无文字"><a href="#大箭头，无文字" class="headerlink" title="大箭头，无文字"></a>大箭头，无文字</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A &#x3D;&#x3D;&gt; B</span><br></pre></td></tr></table></figure><h4 id="大箭头，文字"><a href="#大箭头，文字" class="headerlink" title="大箭头，文字"></a>大箭头，文字</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A &#x3D;&#x3D; text &#x3D;&#x3D;&gt; B</span><br></pre></td></tr></table></figure><h3 id="特殊语法"><a href="#特殊语法" class="headerlink" title="特殊语法"></a>特殊语法</h3><h4 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h4><p>文字里用引号避免一些特殊字符的错误。比如矩形节点里有（）时就无法渲染，所以加上引号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">id1[&quot;This is the (text) in the box&quot;]</span><br></pre></td></tr></table></figure><h4 id="实体字符"><a href="#实体字符" class="headerlink" title="实体字符"></a>实体字符</h4><p>可以使用 HTML 中的实体字符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[&quot;A double quote:#quot;&quot;] --&gt;B[&quot;A dec char:#9829;&quot;]</span><br></pre></td></tr></table></figure><h3 id="子图"><a href="#子图" class="headerlink" title="子图"></a>子图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">    c1--&gt;a2</span><br><span class="line">    subgraph one</span><br><span class="line">    a1--&gt;a2</span><br><span class="line">    end</span><br><span class="line">    subgraph two</span><br><span class="line">    b1--&gt;b2</span><br><span class="line">    end</span><br><span class="line">    subgraph three</span><br><span class="line">    c1--&gt;c2</span><br><span class="line">    end</span><br></pre></td></tr></table></figure><h3 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h3><h4 id="linkStyle-后面的数字表示第几根线，从-0-开始。可以指定颜色和粗细。"><a href="#linkStyle-后面的数字表示第几根线，从-0-开始。可以指定颜色和粗细。" class="headerlink" title="linkStyle 后面的数字表示第几根线，从 0 开始。可以指定颜色和粗细。"></a>linkStyle 后面的数字表示第几根线，从 0 开始。可以指定颜色和粗细。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">graph TD;</span><br><span class="line">    A--&gt;B;</span><br><span class="line">    A--&gt;C;</span><br><span class="line">    B--&gt;D;</span><br><span class="line">    C--&gt;D;</span><br><span class="line">    linkStyle 0 stroke:#0ff,stroke-width:2px;</span><br><span class="line">    linkStyle 3 stroke:#ff3,stroke-width:4px;</span><br></pre></td></tr></table></figure><h4 id="设置节点背景，边框颜色，粗细，实线还是虚线"><a href="#设置节点背景，边框颜色，粗细，实线还是虚线" class="headerlink" title="设置节点背景，边框颜色，粗细，实线还是虚线"></a>设置节点背景，边框颜色，粗细，实线还是虚线</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    id1(Start)--&gt;id2(Stop)</span><br><span class="line">    style id1 fill:#f9f,stroke:#333,stroke-width:4px</span><br><span class="line">    style id2 fill:#ccf,stroke:#f66,stroke-width:2px,stroke-dasharray: 5, 5</span><br></pre></td></tr></table></figure><h4 id="样式类"><a href="#样式类" class="headerlink" title="样式类"></a>样式类</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    A--&gt;B</span><br><span class="line"></span><br><span class="line">    %% 定义样式类</span><br><span class="line">    classDef className fill:#f9f,stroke:#333,stroke-width:4px;</span><br><span class="line"></span><br><span class="line">    %% 应用样式类，markdown里没效果</span><br><span class="line">    class A className</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">classDef default fill:#f9f,stroke:#333,stroke-width:4px;</span><br></pre></td></tr></table></figure><p>定义一个名为 default 的类，节点没有指定特定样式类时，将都会应用这个样式类。</p><h3 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h3><p>可以使用 Font Awesome 图标。语法 fa:icon class name。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">   B[&quot;fa:fa-twitter for peace&quot;]</span><br><span class="line">   B--&gt;C[fa:fa-ban forbidden]</span><br><span class="line">   B--&gt;D(fa:fa-spinner);</span><br><span class="line">   B--&gt;E(A fa:fa-camera-retro perhaps?);</span><br></pre></td></tr></table></figure><h2 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    participant Alice</span><br><span class="line">    participant Bob</span><br><span class="line">    Alice-&gt;John: Hello John, how are you?</span><br><span class="line">    loop Healthcheck</span><br><span class="line">        John-&gt;John: Fight against hypochondria</span><br><span class="line">    end</span><br><span class="line">    Note right of John: Rational thoughts &lt;br&#x2F;&gt;prevail...</span><br><span class="line">    John--&gt;Alice: Great!</span><br><span class="line">    John-&gt;Bob: How about you?</span><br><span class="line">    Bob--&gt;John: Jolly good!</span><br></pre></td></tr></table></figure><h3 id="参与者"><a href="#参与者" class="headerlink" title="参与者"></a>参与者</h3><p>如果不显示声明，参与者将根据第一次出现的顺序排列，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    Alice-&gt;&gt;John: Hello John, how are you?</span><br><span class="line">    John--&gt;&gt;Alice: Great!</span><br></pre></td></tr></table></figure><p>第一条语句出现了两个参与者角色，而在这条语句中，Alice 在 John 之前，所以图中也是这个顺序。如果不想根据第一次出现的顺序来排，可以主动声明以定义顺序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    participant John</span><br><span class="line">    participant Alice</span><br><span class="line">    Alice-&gt;&gt;John: Hello John, how are you?</span><br><span class="line">    John--&gt;&gt;Alice: Great!</span><br></pre></td></tr></table></figure><h3 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h3><p>可以给角色写一个简短的别名以方便书写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    participant A as Alice</span><br><span class="line">    participant J as John</span><br><span class="line">    A-&gt;&gt;J: Hello John, how are you?</span><br><span class="line">    J-&gt;&gt;A: Great!</span><br></pre></td></tr></table></figure><h3 id="消息"><a href="#消息" class="headerlink" title="消息"></a>消息</h3><p>消息连线有六种样式。</p><p>有一个<code>-</code>是实线，两个<code>-</code>是虚线。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    A-&gt;B: 无箭头实线</span><br><span class="line">    A--&gt;B: 无箭头虚线(点线)</span><br><span class="line">    A-&gt;&gt;B: 有箭头实线</span><br><span class="line">    A--&gt;&gt;B: 有箭头实线</span><br><span class="line">    A-x B: 有箭头实线，加上叉</span><br><span class="line">    A--x B: 有箭头虚线，加上叉</span><br></pre></td></tr></table></figure><h3 id="活动期"><a href="#活动期" class="headerlink" title="活动期"></a>活动期</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    Alice-&gt;&gt;John: Hello John, how are you?</span><br><span class="line">    %% activate 角色名 表示激活控制焦点</span><br><span class="line">    activate John</span><br><span class="line">    John--&gt;&gt;Alice: Great!</span><br><span class="line">    %% deactivate 角色名 表示控制焦点结束</span><br><span class="line">    deactivate John</span><br></pre></td></tr></table></figure><p>使用 <code>+/-</code> 的更方便的写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    Alice-&gt;&gt;+John: Hello John, how are you?</span><br><span class="line">    John--&gt;&gt;-Alice: Great!</span><br></pre></td></tr></table></figure><p>可以嵌套：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    Alice-&gt;&gt;+John: Hello John, how are you?</span><br><span class="line">    Alice-&gt;&gt;+John: John, can you hear me?</span><br><span class="line">    John--&gt;&gt;-Alice: Hi Alice, I can hear you!</span><br><span class="line">    John--&gt;&gt;-Alice: I feel great!</span><br></pre></td></tr></table></figure><h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><p>语法：Note [ right of | left of | over ] [Actor]。</p><table><thead><tr><th align="left">表述</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">right of</td><td align="left">右侧</td></tr><tr><td align="left">left of</td><td align="left">左侧</td></tr><tr><td align="left">over</td><td align="left">在当中，可以横跨多个参与者</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    participant John</span><br><span class="line">    Note right of John: Text in note</span><br></pre></td></tr></table></figure><p>over 可用于单独一个角色上，也可以用于相邻两个角色间：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    Alice-&gt;John: Hello John, how are you?</span><br><span class="line">    Note over Alice,John: A typical interaction</span><br></pre></td></tr></table></figure><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">loop Loop text</span><br><span class="line">... statements ...</span><br><span class="line">end</span><br><span class="line">sequenceDiagram</span><br><span class="line">    Alice-&gt;John: Hello John, how are you?</span><br><span class="line">    %% loop 后跟循环体说明文字</span><br><span class="line">    loop Every minute</span><br><span class="line">        John--&gt;Alice: Great!</span><br><span class="line">    %% 标记循环结束</span><br><span class="line">    end</span><br></pre></td></tr></table></figure><h3 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h3><p>语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">alt Describing text</span><br><span class="line">... statements ...</span><br><span class="line">else</span><br><span class="line">... statements ...</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>可选条件，比如在没有 else 分支的情况下使用，有点类似 java 中的 switch 的 default 分支，代表剩下所有情况。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">opt Describing text</span><br><span class="line">... statements ...</span><br><span class="line">end</span><br><span class="line">sequenceDiagram</span><br><span class="line">    Alice-&gt;&gt;Bob: Hello Bob, how are you?</span><br><span class="line">    alt is sick</span><br><span class="line">        Bob-&gt;&gt;Alice: Not so good :(</span><br><span class="line">    else is well</span><br><span class="line">        Bob-&gt;&gt;Alice: Feeling fresh like a daisy</span><br><span class="line">    end</span><br><span class="line">    opt Extra response</span><br><span class="line">        Bob-&gt;&gt;Alice: Thanks for asking</span><br><span class="line">    end</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;参考文档&quot;&gt;&lt;a href=&quot;#参考文档&quot; class=&quot;headerlink&quot; title=&quot;参考文档&quot;&gt;&lt;/a&gt;参考文档&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vincentruan.github.io/2020/02/04/Mermaid-%E5%
      
    
    </summary>
    
    
      <category term="markdown" scheme="http://iwantjingjing.com/categories/markdown/"/>
    
    
      <category term="markdown" scheme="http://iwantjingjing.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>markdown画流程图</title>
    <link href="http://iwantjingjing.com/2021/11/25/markdown%E7%94%BB%E6%B5%81%E7%A8%8B%E5%9B%BE/"/>
    <id>http://iwantjingjing.com/2021/11/25/markdown%E7%94%BB%E6%B5%81%E7%A8%8B%E5%9B%BE/</id>
    <published>2021-11-25T02:54:53.000Z</published>
    <updated>2021-11-25T07:39:44.828Z</updated>
    
    <content type="html"><![CDATA[<h2 id="流程图各个形状的含义"><a href="#流程图各个形状的含义" class="headerlink" title="流程图各个形状的含义"></a>流程图各个形状的含义</h2><p><img src="flow.png" alt=""></p><ul><li>圆角矩形（表示起止）</li><li>平行四边形（输入输出）</li><li>菱形（判断）</li><li>直角矩形（操作/执行）</li></ul><table><thead><tr><th align="left">符号</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">start</td><td align="left">开始（圆角矩形）</td></tr><tr><td align="left">end</td><td align="left">结束（圆角矩形）</td></tr><tr><td align="left">condition</td><td align="left">判断（菱形）</td></tr><tr><td align="left">operation</td><td align="left">操作（直角矩形）</td></tr><tr><td align="left">inputoutput</td><td align="left">输入输出（平行四边形）</td></tr></tbody></table><p>** note:可以对符号自定义命名，如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">st&#x3D;&gt; start: 输入数据</span><br><span class="line">解释：</span><br><span class="line">    st就是对start的命名，命名用&#x3D;&gt;符号</span><br><span class="line">    start: 后的文字，就是图形框内要显示的文字</span><br><span class="line">    start: 冒号后一定要空格再写文字</span><br></pre></td></tr></table></figure><p><strong>注意: 冒号后一定要加一个空格！！！</strong></p><p>下面表示各个图形和流程的串联，一个简单的-&gt;符号就好:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 下面是赋值语句</span><br><span class="line">st&#x3D;&gt;start: Start|past:&gt;http:&#x2F;&#x2F;www.google.com[blank]</span><br><span class="line">e&#x3D;&gt;end: End:&gt;http:&#x2F;&#x2F;www.google.com</span><br><span class="line">op1&#x3D;&gt;operation: My Operation|past</span><br><span class="line">op2&#x3D;&gt;operation: Stuff</span><br><span class="line">cond&#x3D;&gt;condition: Yes or No?</span><br><span class="line">c2&#x3D;&gt;condition: Good idea</span><br><span class="line">io&#x3D;&gt;inputoutput: catch something...</span><br><span class="line"></span><br><span class="line"># 下面是连接语句</span><br><span class="line">st-&gt;op1-&gt;cond</span><br><span class="line">cond(yes)-&gt;c2</span><br><span class="line">c2(yes)-&gt;io-&gt;e</span><br><span class="line">c2(no)-&gt;op2-&gt;e</span><br><span class="line"></span><br><span class="line">&#96;</span><br></pre></td></tr></table></figure><h2 id="横向流程图源码格式："><a href="#横向流程图源码格式：" class="headerlink" title="横向流程图源码格式："></a>横向流程图源码格式：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">graph LR</span><br><span class="line"></span><br><span class="line">A[方形] --&gt;B(圆角)</span><br><span class="line"></span><br><span class="line">B --&gt; C&#123;条件a&#125;</span><br><span class="line"></span><br><span class="line">C --&gt;|a&#x3D;1| D[结果1]</span><br><span class="line"></span><br><span class="line">C --&gt;|a&#x3D;2| E[结果2]</span><br><span class="line"></span><br><span class="line">F[横向流程图]</span><br></pre></td></tr></table></figure><h2 id="竖向流程图源码格式："><a href="#竖向流程图源码格式：" class="headerlink" title="竖向流程图源码格式："></a>竖向流程图源码格式：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">graph TD</span><br><span class="line"></span><br><span class="line">A[方形] --&gt; B(圆角)</span><br><span class="line"></span><br><span class="line">B --&gt; C&#123;条件a&#125;</span><br><span class="line"></span><br><span class="line">C --&gt; |a&#x3D;1| D[结果1]</span><br><span class="line"></span><br><span class="line">C --&gt; |a&#x3D;2| E[结果2]</span><br><span class="line"></span><br><span class="line">F[竖向流程图]</span><br></pre></td></tr></table></figure><h2 id="标准流程图源码格式："><a href="#标准流程图源码格式：" class="headerlink" title="标准流程图源码格式："></a>标准流程图源码格式：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">st&#x3D;&gt;start: 开始框</span><br><span class="line"></span><br><span class="line">op&#x3D;&gt;operation: 处理框</span><br><span class="line"></span><br><span class="line">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class="line"></span><br><span class="line">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class="line"></span><br><span class="line">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class="line"></span><br><span class="line">e&#x3D;&gt;end: 结束框</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line"></span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line"></span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure><h2 id="标准流程图源码格式（横向）："><a href="#标准流程图源码格式（横向）：" class="headerlink" title="标准流程图源码格式（横向）："></a>标准流程图源码格式（横向）：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">st&#x3D;&gt;start: 开始框</span><br><span class="line"></span><br><span class="line">op&#x3D;&gt;operation: 处理框</span><br><span class="line"></span><br><span class="line">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class="line"></span><br><span class="line">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class="line"></span><br><span class="line">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class="line"></span><br><span class="line">e&#x3D;&gt;end: 结束框</span><br><span class="line"></span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line"></span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line"></span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure><h2 id="UML时序图源码样例："><a href="#UML时序图源码样例：" class="headerlink" title="UML时序图源码样例："></a>UML时序图源码样例：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sequenceDiagram</span><br><span class="line"></span><br><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line"></span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line"></span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line"></span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line"></span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br></pre></td></tr></table></figure><h2 id="UML时序图源码复杂样例："><a href="#UML时序图源码复杂样例：" class="headerlink" title="UML时序图源码复杂样例："></a>UML时序图源码复杂样例：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sequenceDiagram</span><br><span class="line"></span><br><span class="line">Title: 标题：复杂使用</span><br><span class="line"></span><br><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line"></span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line"></span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line"></span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line"></span><br><span class="line">对象B-&gt;小三: 你好吗</span><br><span class="line"></span><br><span class="line">小三--&gt;&gt;对象A: 对象B找我了</span><br><span class="line"></span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br><span class="line"></span><br><span class="line">Note over 小三,对象B: 我们是朋友</span><br><span class="line"></span><br><span class="line">participant C</span><br><span class="line"></span><br><span class="line">Note right of C: 没人陪我玩</span><br></pre></td></tr></table></figure><h2 id="UML标准时序图样例："><a href="#UML标准时序图样例：" class="headerlink" title="UML标准时序图样例："></a>UML标准时序图样例：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span><br><span class="line"></span><br><span class="line">sequenceDiagram</span><br><span class="line"></span><br><span class="line">participant 张三</span><br><span class="line"></span><br><span class="line">participant 李四</span><br><span class="line"></span><br><span class="line">张三-&gt;王五: 王五你好吗？</span><br><span class="line"></span><br><span class="line">loop 健康检查</span><br><span class="line"></span><br><span class="line">王五-&gt;王五: 与疾病战斗</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">Note right of 王五: 合理 食物 &lt;br&#x2F;&gt;看医生...</span><br><span class="line"></span><br><span class="line">李四--&gt;&gt;张三: 很好!</span><br><span class="line"></span><br><span class="line">王五-&gt;李四: 你怎么样?</span><br><span class="line"></span><br><span class="line">李四--&gt;王五: 很好!</span><br></pre></td></tr></table></figure><h2 id="甘特图样例："><a href="#甘特图样例：" class="headerlink" title="甘特图样例："></a>甘特图样例：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">gantt</span><br><span class="line"></span><br><span class="line">dateFormat YYYY-MM-DD</span><br><span class="line"></span><br><span class="line">title 软件开发甘特图</span><br><span class="line"></span><br><span class="line">section 设计</span><br><span class="line"></span><br><span class="line">需求 :done, des1, 2014-01-06,2014-01-08</span><br><span class="line"></span><br><span class="line">原型 :active, des2, 2014-01-09, 3d</span><br><span class="line"></span><br><span class="line">UI设计 : des3, after des2, 5d</span><br><span class="line"></span><br><span class="line">未来任务 : des4, after des3, 5d</span><br><span class="line"></span><br><span class="line">section 开发</span><br><span class="line"></span><br><span class="line">学习准备理解需求 :crit, done, 2014-01-06,24h</span><br><span class="line"></span><br><span class="line">设计框架 :crit, done, after des2, 2d</span><br><span class="line"></span><br><span class="line">开发 :crit, active, 3d</span><br><span class="line"></span><br><span class="line">未来任务 :crit, 5d</span><br><span class="line"></span><br><span class="line">耍 :2d</span><br><span class="line"></span><br><span class="line">section 测试</span><br><span class="line"></span><br><span class="line">功能测试 :active, a1, after des3, 3d</span><br><span class="line"></span><br><span class="line">压力测试 :after a1 , 20h</span><br><span class="line"></span><br><span class="line">测试报告 : 48h</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;流程图各个形状的含义&quot;&gt;&lt;a href=&quot;#流程图各个形状的含义&quot; class=&quot;headerlink&quot; title=&quot;流程图各个形状的含义&quot;&gt;&lt;/a&gt;流程图各个形状的含义&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;flow.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;
      
    
    </summary>
    
    
      <category term="markdown" scheme="http://iwantjingjing.com/categories/markdown/"/>
    
      <category term="idea" scheme="http://iwantjingjing.com/categories/markdown/idea/"/>
    
    
      <category term="markdown" scheme="http://iwantjingjing.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>git提交标准及工具</title>
    <link href="http://iwantjingjing.com/2021/10/27/git%E6%8F%90%E4%BA%A4%E6%A0%87%E5%87%86%E5%8F%8A%E5%B7%A5%E5%85%B7/"/>
    <id>http://iwantjingjing.com/2021/10/27/git%E6%8F%90%E4%BA%A4%E6%A0%87%E5%87%86%E5%8F%8A%E5%B7%A5%E5%85%B7/</id>
    <published>2021-10-27T01:31:21.000Z</published>
    <updated>2021-10-27T01:31:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git-Message规范化实践"><a href="#Git-Message规范化实践" class="headerlink" title="Git Message规范化实践"></a>Git Message规范化实践</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="为什么（why"><a href="#为什么（why" class="headerlink" title="为什么（why)"></a>为什么（why)</h3><p>随着项目业务的发展、编程人员的增多，当你想要找到某次代码提交的记录时，git commit message就显得尤为重要，标准化的commit message可以大大提高我们的开发效率，对项目的可持续化维护尤为重要。毕竟谁也不想只看到add、update、优化、新增列表等反馈不了实际修改了哪些内容的git log。</p><h3 id="是什么-what"><a href="#是什么-what" class="headerlink" title="是什么(what)"></a>是什么(what)</h3><p>先说结论： 标准化commit message（Angular规范） + Commitizen + Change log</p><h3 id="怎么做（how）"><a href="#怎么做（how）" class="headerlink" title="怎么做（how）"></a>怎么做（how）</h3><ol><li>安装brew(已安装忽略)</li><li>安装node(已安装忽略)</li><li>安装Commitizen</li><li>生成 Change log</li></ol><h2 id="Commit-message的作用"><a href="#Commit-message的作用" class="headerlink" title="Commit message的作用"></a>Commit message的作用</h2><h3 id="（1）提供更多的历史信息，方便快速浏览"><a href="#（1）提供更多的历史信息，方便快速浏览" class="headerlink" title="（1）提供更多的历史信息，方便快速浏览"></a>（1）提供更多的历史信息，方便快速浏览</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log &lt;last tag&gt; HEAD --pretty&#x3D;format:%s</span><br></pre></td></tr></table></figure><h3 id="（2）过滤某些commit（比如文档改动），便于快速查找信息"><a href="#（2）过滤某些commit（比如文档改动），便于快速查找信息" class="headerlink" title="（2）过滤某些commit（比如文档改动），便于快速查找信息"></a>（2）过滤某些commit（比如文档改动），便于快速查找信息</h3><p>比如，下面的命令仅仅显示本次发布新增加的功能。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log &lt;last release&gt; HEAD --grep feature</span><br></pre></td></tr></table></figure><h3 id="（3）可以直接从commit生成Change-log"><a href="#（3）可以直接从commit生成Change-log" class="headerlink" title="（3）可以直接从commit生成Change log"></a>（3）可以直接从commit生成Change log</h3><h2 id="Commit-message的格式"><a href="#Commit-message的格式" class="headerlink" title="Commit message的格式"></a>Commit message的格式</h2><p>每次提交，Commit message 都包括三个部分：Header，Body 和 Footer。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span><br><span class="line">&#x2F;&#x2F; 空一行</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&#x2F;&#x2F; 空一行</span><br><span class="line">&lt;footer&gt;</span><br></pre></td></tr></table></figure><p>其中，Header 是必需的，Body 和 Footer 可以省略。</p><p>不管是哪一个部分，任何一行都不得超过72个字符（或100个字符）。这是为了避免自动换行影响美观。</p><h3 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h3><p>Header部分只有一行，包括三个字段：type（必需）、scope（可选）和subject（必需）。</p><h4 id="type"><a href="#type" class="headerlink" title="type"></a>type</h4><p>type 用于说明commit的类别，只允许使用下面7个标识。</p><ul><li>feat: 新功能（feature）</li><li>fix: 修补bug</li><li>docs: 文档（documentation）</li><li>style: 格式（不影响代码运行的变动）</li><li>refactor: 重构（即不是新增功能，也不是修改bug的代码变动）</li><li>test: 增加测试</li><li>chore: 构建过程或辅助工具的变动</li></ul><p><font color=red>type为feat和fix，则该commit将肯定出现在Change log之中。其他情况（docs、chore、style、refactor、test)由你决定，要不要放入Change log,建议是不要。 </font></p><h4 id="scope"><a href="#scope" class="headerlink" title="scope"></a>scope</h4><p>scope用于说明commit影响的范围，比如数据层、控制层、视图层等等，或业务影响范围。</p><h4 id="subject"><a href="#subject" class="headerlink" title="subject"></a>subject</h4><p>subject是commit的简短描述,不超过50个字符。</p><ul><li>以动词开头，使用第一人称现在时，比如change,而不是changed或changes</li><li>第一个字母小写</li><li>结尾不加句号（.)<h3 id="Body"><a href="#Body" class="headerlink" title="Body"></a>Body</h3>body部分是对本次commit的详细描述，可以分为多行，下面是一个范例。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">More detailed explanatory text, if necessary.  Wrap it to </span><br><span class="line">about 72 characters or so. </span><br><span class="line"></span><br><span class="line">Further paragraphs come after blank lines.</span><br><span class="line"></span><br><span class="line">- Bullet points are okay, too</span><br><span class="line">- Use a hanging indent</span><br></pre></td></tr></table></figure><font color=red>注意：</font></li></ul><ol><li>使用第一人称现在时，比如使用change而不是changed或changes。</li><li>应该说明代码变动的动机，以及与以前行为的对比。</li></ol><h3 id="Footer"><a href="#Footer" class="headerlink" title="Footer"></a>Footer</h3><p>Footer 部分只用于两种情况。</p><h4 id="（1）不兼容变动"><a href="#（1）不兼容变动" class="headerlink" title="（1）不兼容变动"></a>（1）不兼容变动</h4><p>如果当前代码与上一个版本不兼容，则 Footer 部分以BREAKING CHANGE开头，后面是对变动的描述、以及变动理由和迁移方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">BREAKING CHANGE: isolate scope bindings definition has changed.</span><br><span class="line"></span><br><span class="line">    To migrate the code follow the example below:</span><br><span class="line"></span><br><span class="line">    Before:</span><br><span class="line"></span><br><span class="line">    scope: &#123;</span><br><span class="line">      myAttr: &#39;attribute&#39;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    After:</span><br><span class="line"></span><br><span class="line">    scope: &#123;</span><br><span class="line">      myAttr: &#39;@&#39;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    The removed &#96;inject&#96; wasn&#39;t generaly useful for directives so there should be no code using it.</span><br></pre></td></tr></table></figure><h4 id="（2）关闭-Issue"><a href="#（2）关闭-Issue" class="headerlink" title="（2）关闭 Issue"></a>（2）关闭 Issue</h4><p>如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Closes #234</span><br></pre></td></tr></table></figure><p>也可以一次关闭多个 issue 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Closes #123, #245, #992</span><br><span class="line">&#96;&#96;&#96;&#96;        </span><br><span class="line"></span><br><span class="line">### Revert</span><br><span class="line">还有一种特殊情况，如果当前 commit 用于撤销以前的 commit，则必须以revert:开头，后面跟着被撤销 Commit 的 Header。</span><br></pre></td></tr></table></figure><p>revert: feat(pencil): add ‘graphiteWidth’ option</p><p>This reverts commit 667ecc1654a317a13331b17617d973392f415f02.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Body部分的格式是固定的，必须写成This reverts commit &lt;hash&gt;.，其中的hash是被撤销 commit 的 SHA 标识符。</span><br><span class="line"></span><br><span class="line">如果当前 commit 与被撤销的 commit，在同一个发布（release）里面，那么它们都不会出现在 Change log 里面。如果两者在不同的发布，那么当前 commit，会出现在 Change log 的Reverts小标题下面。</span><br><span class="line"></span><br><span class="line">## Commitizen</span><br><span class="line"></span><br><span class="line">[Commitizen](https:&#x2F;&#x2F;github.com&#x2F;commitizen&#x2F;cz-cli) 是一个撰写合格 Commit message的工具。</span><br><span class="line"></span><br><span class="line">### 安装命令</span><br></pre></td></tr></table></figure><p>$ npm install -g commitizen</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">### 在项目根目录里，运行下面的命令，使其支持 Angular 的 Commit message 格式。</span><br></pre></td></tr></table></figure><p>$ commitizen init cz-conventional-changelog –save –save-exact</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意 执行node项目一般没问题，但我们是Java项目，可能会一下错误</span><br></pre></td></tr></table></figure><p>Attempting to initialize using the npm package cz-conventional-changelog<br>npm WARN saveError ENOENT: no such file or directory, open ‘/Users/owner/my/huifan/hf-kernel/package.json’<br>npm notice created a lockfile as package-lock.json. You should commit this file.<br>npm WARN enoent ENOENT: no such file or directory, open ‘/Users/owner/my/huifan/hf-kernel/package.json’<br>npm WARN hf-kernel No description<br>npm WARN hf-kernel No repository field.<br>npm WARN hf-kernel No README data<br>npm WARN hf-kernel No license field.</p><p>Error: ENOENT: no such file or directory, open ‘/Users/owner/my/huifan/hf-kernel/package.json’<br>    at Object.openSync (fs.js:458:3)<br>    at Object.readFileSync (fs.js:360:35)<br>    at addPathToAdapterConfig (/usr/local/lib/node_modules/commitizen/dist/commitizen/adapter.js:1257:62)<br>    at init (/usr/local/lib/node_modules/commitizen/dist/commitizen/init.js:1035:5)<br>    at Object.bootstrap (/usr/local/lib/node_modules/commitizen/dist/cli/commitizen.js:34:30)<br>    at Object.<anonymous> (/usr/local/lib/node_modules/commitizen/bin/commitizen.js:2:38)<br>    at Module._compile (internal/modules/cjs/load</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">上述报错的原因为没有package.json文件，可执行以下命令生成默认的package.json</span><br></pre></td></tr></table></figure><p>npm init –yes</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">### git commit 替换为 git cz</span><br><span class="line">以后，&lt;font color&#x3D;red&gt;凡是用到git commit命令，一律改为使用git cz。&lt;&#x2F;font&gt;这时，就会出现选项，用来生成符合格式的 Commit message。</span><br><span class="line"></span><br><span class="line">## validate-commit-msg</span><br><span class="line">[validate-commit-msg](https:&#x2F;&#x2F;github.com&#x2F;conventional-changelog-archived-repos&#x2F;validate-commit-msg) 用于检查 Node 项目的 Commit message 是否符合格式。</span><br><span class="line"></span><br><span class="line">### 安装</span><br></pre></td></tr></table></figure><p>npm install –save-dev validate-commit-msg</p><p>npm install ghooks –save-dev</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">### 配置</span><br><span class="line"></span><br><span class="line">在项目的根目录下, 新建一个名为.vcmrc的文件, 并输入以下内容:</span><br></pre></td></tr></table></figure><p>{<br>  “types”: [“feat”, “fix”, “docs”, “style”, “refactor”, “perf”, “test”, “build”, “ci”, “chore”, “revert”],<br>  “scope”: {<br>    “required”: false,<br>    “allowed”: [“*”],<br>    “validate”: false,<br>    “multiple”: false<br>  },<br>  “warnOnFail”: false,<br>  “maxSubjectLength”: 100,<br>  “subjectPattern”: “.+”,<br>  “subjectPatternErrorMsg”: “subject does not match subject pattern!”,<br>  “helpMessage”: “”,<br>  “autoFix”: false<br>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">然后, 在package.json中添加如下配置</span><br></pre></td></tr></table></figure><p>  “config”: {<br>    “ghooks”: {<br>      “commit-msg”: “validate-commit-msg”<br>    }<br>  }</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">### 使用场景</span><br><span class="line">每次git commit的时候，这个脚本就会自动检查 Commit message 是否合格。如果不合格，就会报错。</span><br></pre></td></tr></table></figure><p>$ git add -A<br>$ git commit -m “edit markdown”<br>INVALID COMMIT MSG: does not match “<type>(<scope>): <subject>“ ! was: edit markdown</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 生成Change log</span><br><span class="line">如果你的所有 Commit 都符合 Angular 格式，那么发布新版本时， Change log 就可以用脚本自动生成。</span><br><span class="line"></span><br><span class="line">生成的文档包括以下三个部分。</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;&#96;        </span><br><span class="line">New features</span><br><span class="line">Bug fixes</span><br><span class="line">Breaking changes</span><br><span class="line">&#96;&#96;&#96;&#96;        </span><br><span class="line"></span><br><span class="line">每个部分都会罗列相关的 commit ，并且有指向这些 commit 的链接。当然，生成的文档允许手动修改，所以发布前，你还可以添加其他内容。</span><br><span class="line"></span><br><span class="line">[conventional-changelog](https:&#x2F;&#x2F;github.com&#x2F;conventional-changelog&#x2F;conventional-changelog) 就是生成 Change log 的工具，运行下面的命令即可。</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;&#96;        </span><br><span class="line">$ npm install -g conventional-changelog</span><br><span class="line">$ cd my-project</span><br><span class="line">$ conventional-changelog -p angular -i CHANGELOG.md -w</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;&#96;        </span><br><span class="line"></span><br><span class="line">上面命令不会覆盖以前的 Change log，只会在CHANGELOG.md的头部加上自从上次发布以来的变动。</span><br><span class="line"></span><br><span class="line">如果你想生成所有发布的 Change log，要改为运行下面的命令。</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;&#96;    </span><br><span class="line">$ conventional-changelog -p angular -i CHANGELOG.md -w -r 0</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;&#96;    </span><br><span class="line">为了方便使用，可以将其写入package.json的scripts字段。</span><br></pre></td></tr></table></figure><p>{<br>  “scripts”: {<br>      “changelog”: “conventional-changelog -p angular -i CHANGELOG.md -s -r 0”</p><p>  }<br>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">以后，直接运行下面的命令即可。</span><br></pre></td></tr></table></figure><p>$ npm run changelog</p><pre><code>## 参考文档[Git - Git 钩子](https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90)[优雅的使用Git](https://juejin.cn/post/6844904008025391118)[Linux统计文件夹下的文件数目](http://noahsnail.com/2017/02/07/2017-02-07-Linux%E7%BB%9F%E8%AE%A1%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84%E6%96%87%E4%BB%B6%E6%95%B0%E7%9B%AE/)[git commit 、CHANGELOG 和版本发布的标准自动化](https://zhuanlan.zhihu.com/p/51894196)[git教程](https://git-scm.com/book/zh/v2)[优雅的使用Git](https://juejin.cn/post/6844904008025391118)[ghooks](https://www.npmjs.com/package/ghooks)[npm 安装参数中的 --save-dev 是什么意思](https://segmentfault.com/q/1010000000403629)</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Git-Message规范化实践&quot;&gt;&lt;a href=&quot;#Git-Message规范化实践&quot; class=&quot;headerlink&quot; title=&quot;Git Message规范化实践&quot;&gt;&lt;/a&gt;Git Message规范化实践&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a hr
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>jdk8更换</title>
    <link href="http://iwantjingjing.com/2021/09/27/jdk8%E6%9B%B4%E6%8D%A2/"/>
    <id>http://iwantjingjing.com/2021/09/27/jdk8%E6%9B%B4%E6%8D%A2/</id>
    <published>2021-09-27T02:09:58.000Z</published>
    <updated>2021-09-28T01:30:15.364Z</updated>
    
    <content type="html"><![CDATA[<h2 id="最新免费版jdk"><a href="#最新免费版jdk" class="headerlink" title="最新免费版jdk"></a>最新免费版jdk</h2><p><a href="https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html" target="_blank" rel="noopener">最新免费版下载地址</a></p><h2 id="Linux系统更换jdk"><a href="#Linux系统更换jdk" class="headerlink" title="Linux系统更换jdk"></a>Linux系统更换jdk</h2><ul><li><p>查看Linux内核版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">第一种方式</span><br><span class="line">uname -srm</span><br><span class="line">输出结果：</span><br><span class="line"></span><br><span class="line">Linux 3.10.0-957.12.2.el7.x86_64 x86_64</span><br><span class="line">3 - 内核版本.</span><br><span class="line">10 - 主修订版本.</span><br><span class="line">0-957 - 次要修订版本.</span><br><span class="line">12 - 补丁版本.</span><br><span class="line"></span><br><span class="line">第二种方式</span><br><span class="line">使用&#96;hostnamectl&#96;命令查看内核版本</span><br><span class="line">hostnamectl实用程序是systemd的一部分，用于查询和更改系统主机名。 它还显示Linux发行版和内核版本：</span><br><span class="line"></span><br><span class="line">root@pre-k8s-node1 ~]# hostnamectl</span><br><span class="line">   Static hostname: pre-k8s-node1</span><br><span class="line">         Icon name: computer-vm</span><br><span class="line">           Chassis: vm</span><br><span class="line">        Machine ID: 8f5b018f6eb344909f6cfec5ad0839ef</span><br><span class="line">           Boot ID: 89c4766582c24bb8b9bfa1300c74d151</span><br><span class="line">    Virtualization: kvm</span><br><span class="line">  Operating System: CentOS Linux 7 (Core)</span><br><span class="line">       CPE OS Name: cpe:&#x2F;o:centos:centos:7</span><br><span class="line">            Kernel: Linux 3.10.0-1062.12.1.el7.x86_64</span><br><span class="line">      Architecture: x86-64</span><br><span class="line">      </span><br><span class="line">第三种方式      </span><br><span class="line">使用以下命令只显示当前内核版本：</span><br><span class="line"></span><br><span class="line">[root@pre-k8s-node1 ~]# hostnamectl | grep -i kernel</span><br><span class="line">            Kernel: Linux 3.10.0-1062.12.1.el7.x86_64</span><br><span class="line">            </span><br><span class="line">第四种方式      </span><br><span class="line">通过查看&#x2F;proc&#x2F;version文件确认内核版本</span><br><span class="line">&#x2F;proc目录包含虚拟文件，其中包含有关系统内存，CPU内核，已安装文件系统等的信息。有关正在运行的内核的信息存储在&#x2F;proc&#x2F;version虚拟文件中。</span><br><span class="line">结合cat查看文件内容：</span><br><span class="line"></span><br><span class="line">cat &#x2F;proc&#x2F;version</span><br><span class="line">输出结果如下：</span><br><span class="line"></span><br><span class="line">Linux version 3.10.0-957.12.2.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-36) (GCC) ) 1 SMP Tue May 14 21:24:32 UTC 2019            </span><br><span class="line">      </span><br><span class="line">这些命令适用于所有流行的Linux发行版，包括Debian，Red Hat，Ubuntu，Arch Linux，Fedora，CentOS，Kali Linux，OpenSUSE，Linux Mint等。</span><br></pre></td></tr></table></figure></li><li><p>从<a href="https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html" target="_blank" rel="noopener">最新免费版下载地址</a><br>获取最新版本。</p></li><li><p>依据Linux内核确定 版本为jdk-8u202-linux-x64.tar.gz</p></li><li><p>通过FinalShell将解压后的文件上传至/usr/local/java/</p></li><li><p>配置环境变量vim /etc/profile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.8.0_202</span><br><span class="line">export PATH&#x3D;$JAVA_HOME&#x2F;bin:$PATH</span><br><span class="line">export CLASSPATH&#x3D;.:JAVA_HOME&#x2F;lib&#x2F;dt.jar:$JAVA_HOME&#x2F;lib&#x2F;tools.jar</span><br></pre></td></tr></table></figure></li><li><p>刷新配置<br>source /etc/profile</p></li><li><p>查看java的安装目录<br>which java</p></li></ul><h2 id="docker环境更换jdk"><a href="#docker环境更换jdk" class="headerlink" title="docker环境更换jdk"></a>docker环境更换jdk</h2><h2 id="公告文档"><a href="#公告文档" class="headerlink" title="公告文档"></a>公告文档</h2><p>Hello开发小伙伴们：</p><p>   因Oracle JDK许可变更，在没有商业许可的情况下，在2019年1月之后发布的Oracle Java SE 8的公开更新将不可用于<br>商业或生产用途。</p><p>   经架构委员会、运维部会议讨论，目前Oracle JDK 8u202已经满足公司当前开发需求。如后期有更高版本的使用需求，须<br>经架构委员会评估后，另行通知方可使用。</p><p>   从即日起全公司使用的Oracle JDK版本不得高于8u202,请各业务线上技术经理知悉并安排自检，同时通知研发人员不得使用<br>更高版本JDK进行开发，以防新特性无法上线。</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p> <a href="https://www.cnblogs.com/xuruiming/p/12881503.html" target="_blank" rel="noopener">Oracle JDK究竟从哪个版本开始收费？</a></p><p> <a href="https://www.shuzhiduo.com/A/kvJ34GYw5g/" target="_blank" rel="noopener">linux下解决安装jdk后‘环境变量’不生效的问题</a></p><p> <a href="https://lenjor.github.io/2020/12/Linux-Java-JDK-install/" target="_blank" rel="noopener">Linux安装JDK，并配置多个JDK切换</a></p><p> <a href="https://blog.csdn.net/jxpxlinkui/article/details/79649204" target="_blank" rel="noopener">Linux下安装JDK(多个版本) 切换</a></p><p> <a href="https://www.cnblogs.com/javabg/p/10332993.html" target="_blank" rel="noopener">linux 卸载jdk和安装</a></p><p> <a href="https://blog.csdn.net/ca1m0921/article/details/90322309" target="_blank" rel="noopener">JDK Linux修改jdk不生效</a></p><p> <a href="https://blog.csdn.net/zhangvalue/article/details/84979635" target="_blank" rel="noopener">Linux 给文件夹或者文件增加权限</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 文件夹</span><br><span class="line">参数-R是递归的意思</span><br><span class="line">777表示开放所有权限</span><br><span class="line"></span><br><span class="line">chmod 777 test.sh</span><br><span class="line"></span><br><span class="line">chmod +x 某文件</span><br><span class="line"></span><br><span class="line">如果给所有人添加可执行权限：chmod a+x 文件名；</span><br><span class="line">如果给文件所有者添加可执行权限：chmod u+x 文件名；</span><br><span class="line">如果给所在组添加可执行权限：chmod g+x 文件名；</span><br><span class="line">如果给所在组以外的人添加可执行权限：chmod o+x 文件名；</span><br></pre></td></tr></table></figure><p> <a href="https://www.cnblogs.com/linuxprobe/p/11664104.html" target="_blank" rel="noopener">查看Linux内核版本</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;最新免费版jdk&quot;&gt;&lt;a href=&quot;#最新免费版jdk&quot; class=&quot;headerlink&quot; title=&quot;最新免费版jdk&quot;&gt;&lt;/a&gt;最新免费版jdk&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.oracle.com/java/technolog
      
    
    </summary>
    
    
      <category term="java" scheme="http://iwantjingjing.com/categories/java/"/>
    
    
      <category term="java" scheme="http://iwantjingjing.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>github登录不上解决办法</title>
    <link href="http://iwantjingjing.com/2021/09/01/github%E7%99%BB%E5%BD%95%E4%B8%8D%E4%B8%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://iwantjingjing.com/2021/09/01/github%E7%99%BB%E5%BD%95%E4%B8%8D%E4%B8%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2021-09-01T09:07:53.000Z</published>
    <updated>2021-09-01T09:10:33.438Z</updated>
    
    <content type="html"><![CDATA[<h2 id="打开下面网站获取IP地址"><a href="#打开下面网站获取IP地址" class="headerlink" title="打开下面网站获取IP地址"></a>打开下面网站获取IP地址</h2><p><a href="https://github.com.ipaddress.com/" target="_blank" rel="noopener">https://github.com.ipaddress.com/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">140.82.113.3 github.com</span><br></pre></td></tr></table></figure><h2 id="打开下面网站获取IP地址-1"><a href="#打开下面网站获取IP地址-1" class="headerlink" title="打开下面网站获取IP地址"></a>打开下面网站获取IP地址</h2><p><a href="https://fastly.net.ipaddress.com/github.global.ssl.fastly.net#ipinfo" target="_blank" rel="noopener">https://fastly.net.ipaddress.com/github.global.ssl.fastly.net#ipinfo</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br></pre></td></tr></table></figure><h2 id="打开下面网站获取IP地址-2"><a href="#打开下面网站获取IP地址-2" class="headerlink" title="打开下面网站获取IP地址"></a>打开下面网站获取IP地址</h2><p><a href="https://github.com.ipaddress.com/assets-cdn.github.com" target="_blank" rel="noopener">https://github.com.ipaddress.com/assets-cdn.github.com</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">185.199.108.153 assets-cdn.github.com</span><br><span class="line">185.199.109.153 assets-cdn.github.com</span><br><span class="line">185.199.110.153 assets-cdn.github.com</span><br><span class="line">185.199.111.153 assets-cdn.github.com</span><br></pre></td></tr></table></figure><h2 id="修改host文件，在host文件添加上面地址"><a href="#修改host文件，在host文件添加上面地址" class="headerlink" title="修改host文件，在host文件添加上面地址"></a>修改host文件，在host文件添加上面地址</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">140.82.113.3 github.com</span><br><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br><span class="line">185.199.108.153 assets-cdn.github.com</span><br><span class="line">185.199.109.153 assets-cdn.github.com</span><br><span class="line">185.199.110.153 assets-cdn.github.com</span><br><span class="line">185.199.111.153 assets-cdn.github.com</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;打开下面网站获取IP地址&quot;&gt;&lt;a href=&quot;#打开下面网站获取IP地址&quot; class=&quot;headerlink&quot; title=&quot;打开下面网站获取IP地址&quot;&gt;&lt;/a&gt;打开下面网站获取IP地址&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com.ip
      
    
    </summary>
    
    
      <category term="git" scheme="http://iwantjingjing.com/categories/git/"/>
    
    
      <category term="git" scheme="http://iwantjingjing.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>java9改进的Javadoc</title>
    <link href="http://iwantjingjing.com/2021/06/12/java9%E6%94%B9%E8%BF%9B%E7%9A%84Javadoc/"/>
    <id>http://iwantjingjing.com/2021/06/12/java9%E6%94%B9%E8%BF%9B%E7%9A%84Javadoc/</id>
    <published>2021-06-12T07:17:59.000Z</published>
    <updated>2021-06-12T07:29:31.572Z</updated>
    
    <content type="html"><![CDATA[<p>javadoc 工具可以生成 Java 文档， Java 9 的 javadoc 的输出现在符合兼容 HTML5 标准。</p><p>Java 9 之前的旧版本文档</p><p>考虑以下文件代码 C:/JAVA/Tester.java:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line">  * @author MahKumar</span><br><span class="line">  * @version 0.1</span><br><span class="line">*&#x2F;</span><br><span class="line">public class Tester &#123;</span><br><span class="line">   &#x2F;**</span><br><span class="line">      * Default method to be run to print </span><br><span class="line">      * &lt;p&gt;Hello world&lt;&#x2F;p&gt;</span><br><span class="line">      * @param args command line arguments</span><br><span class="line">   *&#x2F;</span><br><span class="line">   public static void main(String []args) &#123;</span><br><span class="line">      System.out.println(&quot;Hello World&quot;);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用 jdk 7 的 javadoc 生成文档：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">C:\JAVA&gt;javadoc -d C:&#x2F;JAVA Tester.java</span><br><span class="line">Loading source file tester.java...</span><br><span class="line">Constructing Javadoc information...</span><br><span class="line">Standard Doclet version 1.7.0_21</span><br><span class="line">Building tree for all the packages and classes...</span><br><span class="line">Generating C:\JAVA\Tester.html...</span><br><span class="line">Generating C:\JAVA\package-frame.html...</span><br><span class="line">Generating C:\JAVA\package-summary.html...</span><br><span class="line">Generating C:\JAVA\package-tree.html...</span><br><span class="line">Generating C:\JAVA\constant-values.html...</span><br><span class="line">Building index for all the packages and classes...</span><br><span class="line">Generating C:\JAVA\overview-tree.html...</span><br><span class="line">Generating C:\JAVA\index-all.html...</span><br><span class="line">Generating C:\JAVA\deprecated-list.html...</span><br><span class="line">Building index for all classes...</span><br><span class="line">Generating C:\JAVA\allclasses-frame.html...</span><br><span class="line">Generating C:\JAVA\allclasses-noframe.html...</span><br><span class="line">Generating C:\JAVA\index.html...</span><br><span class="line">Generating C:\JAVA\help-doc.html...</span><br></pre></td></tr></table></figure><p>执行以上命令会再 C:/JAVA 命令下生成文档页面，如下图所示：<br><img src="img.png" alt="img.png"></p><p>Java 9 生成的文档兼容 HTML5 标准</p><p>使用 jdk 9 javadoc 命令中的 -html5 参数可以让生成的文档支持 HTML5 标准：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">C:\JAVA&gt; javadoc -d C:&#x2F;JAVA -html5 Tester.java</span><br><span class="line">Loading source file Tester.java...</span><br><span class="line">Constructing Javadoc information...</span><br><span class="line">Standard Doclet version 9.0.1</span><br><span class="line">Building tree for all the packages and classes...</span><br><span class="line">Generating C:\JAVA\Tester.html...</span><br><span class="line">Generating C:\JAVA\package-frame.html...</span><br><span class="line">Generating C:\JAVA\package-summary.html...</span><br><span class="line">Generating C:\JAVA\package-tree.html...</span><br><span class="line">Generating C:\JAVA\constant-values.html...</span><br><span class="line">Building index for all the packages and classes...</span><br><span class="line">Generating C:\JAVA\overview-tree.html...</span><br><span class="line">Generating C:\JAVA\index-all.html...</span><br><span class="line">Generating C:\JAVA\deprecated-list.html...</span><br><span class="line">Building index for all classes...</span><br><span class="line">Generating C:\JAVA\allclasses-frame.html...</span><br><span class="line">Generating C:\JAVA\allclasses-frame.html...</span><br><span class="line">Generating C:\JAVA\allclasses-noframe.html...</span><br><span class="line">Generating C:\JAVA\allclasses-noframe.html...</span><br><span class="line">Generating C:\JAVA\index.html...</span><br><span class="line">Generating C:\JAVA\help-doc.html...</span><br></pre></td></tr></table></figure><p>执行以上命令会再 C:/JAVA 命令下生成文档页面，如下图所示：</p><p><img src="img_1.png" alt="img_1.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;javadoc 工具可以生成 Java 文档， Java 9 的 javadoc 的输出现在符合兼容 HTML5 标准。&lt;/p&gt;
&lt;p&gt;Java 9 之前的旧版本文档&lt;/p&gt;
&lt;p&gt;考虑以下文件代码 C:/JAVA/Tester.java:&lt;/p&gt;
&lt;figure clas
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>java9JShell</title>
    <link href="http://iwantjingjing.com/2021/06/12/java9JShell/"/>
    <id>http://iwantjingjing.com/2021/06/12/java9JShell/</id>
    <published>2021-06-12T07:06:38.000Z</published>
    <updated>2021-06-12T07:13:19.975Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java-9-REPL-JShell"><a href="#Java-9-REPL-JShell" class="headerlink" title="Java 9 REPL (JShell)"></a>Java 9 REPL (JShell)</h1><p>REPL(Read Eval Print Loop)意为交互式的编程环境。</p><p>JShell 是 Java 9 新增的一个交互式的编程环境工具。它允许你无需使用类或者方法包装来执行 Java 语句。它与 Python 的解释器类似，可以直接 输入表达式并查看其执行结果。</p><p>执行 JSHELL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ jshell</span><br><span class="line">|  Welcome to JShell -- Version 9-ea</span><br><span class="line">|  For an introduction type: &#x2F;help intro</span><br><span class="line">jshell&gt;</span><br></pre></td></tr></table></figure><p>查看 JShell 命令</p><p>输入 /help 可以查看 JShell相关的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">jshell&gt; &#x2F;help</span><br><span class="line">|  Type a Java language expression, statement, or declaration.</span><br><span class="line">|  Or type one of the following commands:</span><br><span class="line">|  &#x2F;list [&lt;name or id&gt;|-all|-start]</span><br><span class="line">|  list the source you have typed</span><br><span class="line">|  &#x2F;edit &lt;name or id&gt;</span><br><span class="line">|  edit a source entry referenced by name or id</span><br><span class="line">|  &#x2F;drop &lt;name or id&gt;</span><br><span class="line">|  delete a source entry referenced by name or id</span><br><span class="line">|  &#x2F;save [-all|-history|-start] &lt;file&gt;</span><br><span class="line">|  Save snippet source to a file.</span><br><span class="line">|  &#x2F;open &lt;file&gt;</span><br><span class="line">|  open a file as source input</span><br><span class="line">|  &#x2F;vars [&lt;name or id&gt;|-all|-start]</span><br><span class="line">|  list the declared variables and their values</span><br><span class="line">|  &#x2F;methods [&lt;name or id&gt;|-all|-start]</span><br><span class="line">|  list the declared methods and their signatures</span><br><span class="line">|  &#x2F;types [&lt;name or id&gt;|-all|-start]</span><br><span class="line">|  list the declared types</span><br><span class="line">|  &#x2F;imports </span><br><span class="line">|  list the imported items</span><br></pre></td></tr></table></figure><p>执行 JShell 命令<br>/imports 命令用于查看已导入的包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">jshell&gt; &#x2F;imports</span><br><span class="line">|    import java.io.*</span><br><span class="line">|    import java.math.*</span><br><span class="line">|    import java.net.*</span><br><span class="line">|    import java.nio.file.*</span><br><span class="line">|    import java.util.*</span><br><span class="line">|    import java.util.concurrent.*</span><br><span class="line">|    import java.util.function.*</span><br><span class="line">|    import java.util.prefs.*</span><br><span class="line">|    import java.util.regex.*</span><br><span class="line">|    import java.util.stream.*</span><br><span class="line">jshell&gt;</span><br></pre></td></tr></table></figure><p>JShell 执行计算<br>以下实例执行 JShell 简单计算：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">jshell&gt; 3+1</span><br><span class="line">$1 &#x3D;&#x3D;&gt; 4</span><br><span class="line">jshell&gt; 13%7</span><br><span class="line">$2 &#x3D;&#x3D;&gt; 6</span><br><span class="line">jshell&gt; $2</span><br><span class="line">$2 &#x3D;&#x3D;&gt; 6</span><br><span class="line">jshell&gt;</span><br></pre></td></tr></table></figure><p>JShell 创建与使用函数<br>创建一个函数 doubled() ，将传入的整型参数乘于 2 后返回：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jshell&gt; int doubled(int i)&#123; return i*2;&#125;</span><br><span class="line">|  created method doubled(int)</span><br><span class="line">jshell&gt; doubled(6)</span><br><span class="line">$3 &#x3D;&#x3D;&gt; 12</span><br><span class="line">jshell&gt;</span><br></pre></td></tr></table></figure><p>退出 JShell</p><p>输入 /exit 命令退出 jshell：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jshell&gt; &#x2F;exit</span><br><span class="line">| Goodbye</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Java-9-REPL-JShell&quot;&gt;&lt;a href=&quot;#Java-9-REPL-JShell&quot; class=&quot;headerlink&quot; title=&quot;Java 9 REPL (JShell)&quot;&gt;&lt;/a&gt;Java 9 REPL (JShell)&lt;/h1&gt;&lt;p&gt;RE
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>java9模块系统</title>
    <link href="http://iwantjingjing.com/2021/06/12/java9%E6%A8%A1%E5%9D%97%E7%B3%BB%E7%BB%9F/"/>
    <id>http://iwantjingjing.com/2021/06/12/java9%E6%A8%A1%E5%9D%97%E7%B3%BB%E7%BB%9F/</id>
    <published>2021-06-12T06:48:21.000Z</published>
    <updated>2021-06-12T07:04:43.980Z</updated>
    
    <content type="html"><![CDATA[<p>Java 9 最大的变化之一是引入了模块系统（Jigsaw 项目）。<br>模块就是代码和数据的封装体。模块的代码被组织成多个包，每个包中包含Java类和接口；模块的数据则包括资源文件和其他静态信息。<br>Java 9 模块的重要特征是在其工件（artifact）的根目录中包含了一个描述模块的 module-info.class 文 件。 工件的格式可以是传统的 JAR 文件或是 Java 9 新增的 JMOD 文件。这个文件由根目录中的源代码文件 module-info.java 编译而来。该模块声明文件可以描述模块的不同特征。<br>在 module-info.java 文件中，我们可以用新的关键词module来声明一个模块，如下所示。下面给出了一个模块com.mycompany.mymodule的最基本的模块声明。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">module com.runoob.mymodule &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建模块"><a href="#创建模块" class="headerlink" title="创建模块"></a>创建模块</h2><p>接下来我们创建一个 com.runoob.greetings 的模块。</p><p><strong>第一步</strong></p><p>创建文件夹 C:&gt;JAVA\src，然后在该目录下再创建与模块名相同的文件夹 com.runoob.greetings。</p><p><strong>第二步</strong><br>在 C:&gt;JAVA\src\com.runoob.greetings 目录下创建 module-info.java 文件，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">module com.runoob.greetings &#123; &#125;</span><br></pre></td></tr></table></figure><p>module-info.java 用于创建模块。这一步我们创建了 com.runoob.greetings 模块。</p><p><strong>第三步</strong><br>在模块中添加源代码文件，在目录 C:&gt;JAVA\src\com.runoob.greetings\com\runoob\greetings 中创建文件 Java9Tester.java，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">package com.runoob.greetings;</span><br><span class="line"></span><br><span class="line">public class Java9Tester &#123;</span><br><span class="line">   public static void main(String[] args) &#123;</span><br><span class="line">      System.out.println(&quot;Hello World!&quot;);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>第四步</strong><br>创建文件夹 C:&gt;JAVA\mods，然后在该目录下创建 com.runoob.greetings 文件夹，编译模块到这个目录下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:&#x2F;&gt;JAVA&gt; javac -d mods&#x2F;com.runoob.greetings </span><br><span class="line">   src&#x2F;com.runoob.greetings&#x2F;module-info.java </span><br><span class="line">   src&#x2F;com.runoob.greetings&#x2F;com&#x2F;runoob&#x2F;greetings&#x2F;Java9Tester.java</span><br></pre></td></tr></table></figure><p><strong>第五步</strong><br>执行模块，查看输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:&#x2F;&gt;JAVA&gt; java --module-path mods -m com.runoob.greetings&#x2F;com.runoob.greetings.Java9Tester</span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure><p>module-path 指定了模块所在的路径。<br>-m 指定主要模块。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Java 9 最大的变化之一是引入了模块系统（Jigsaw 项目）。&lt;br&gt;模块就是代码和数据的封装体。模块的代码被组织成多个包，每个包中包含Java类和接口；模块的数据则包括资源文件和其他静态信息。&lt;br&gt;Java 9 模块的重要特征是在其工件（artifact）的根目录
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>java9新特性</title>
    <link href="http://iwantjingjing.com/2021/06/12/java9%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <id>http://iwantjingjing.com/2021/06/12/java9%E6%96%B0%E7%89%B9%E6%80%A7/</id>
    <published>2021-06-12T06:35:16.000Z</published>
    <updated>2021-11-25T07:48:13.524Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java9新特性"><a href="#java9新特性" class="headerlink" title="java9新特性"></a>java9新特性</h1><p>Java 9 发布于 2017 年 9 月 22 日，带来了很多新特性，其中最主要的变化是已经实现的模块化系统。接下来我们会详细介绍 Java 9 的新特性。</p><ul><li><p>模块系统：模块是一个包的容器，java9最大的变化之一是引入了<br>模块系统（Jigsaw项目）。</p></li><li><p>REPL(JShell):交互式编程环境。</p></li><li><p>HTTP2客户端：HTTP/2标准是是HTTP协议的最新版本，新的 HTTPClient API 支持 WebSocket 和 HTTP2 流以及服务器推送特性。</p></li><li><p>改进的 Javadoc：Javadoc 现在支持在 API 文档中的进行搜索。另外，Javadoc 的输出现在符合兼容 HTML5 标准。</p></li><li><p>多版本兼容 JAR 包：多版本兼容 JAR 功能能让你创建仅在特定版本的 Java 环境中运行库程序时选择使用的 class 版本。</p></li><li><p>集合工厂方法：List，Set 和 Map 接口中，新的静态工厂方法可以创建这些集合的不可变实例。</p></li><li><p>私有接口方法：在接口中使用private私有方法。我们可以使用 private 访问修饰符在接口中编写私有方法。</p></li><li><p>进程 API: 改进的 API 来控制和管理操作系统进程。引进 java.lang.ProcessHandle 及其嵌套接口 Info 来让开发者逃离时常因为要获取一个本地进程的 PID 而不得不使用本地代码的窘境。</p></li><li><p>改进的 Stream API：改进的 Stream API 添加了一些便利的方法，使流处理更容易，并使用收集器编写复杂的查询。</p></li><li><p>改进 try-with-resources：如果你已经有一个资源是 final 或等效于 final 变量,您可以在 try-with-resources 语句中使用该变量，而无需在 try-with-resources 语句中声明一个新变量。</p></li><li><p>改进的弃用注解 @Deprecated：注解 @Deprecated 可以标记 Java API 状态，可以表示被标记的 API 将会被移除，或者已经破坏。</p></li><li><p>改进钻石操作符(Diamond Operator) ：匿名类可以使用钻石操作符(Diamond Operator)。</p></li><li><p>改进 Optional 类：java.util.Optional 添加了很多新的有用方法，Optional 可以直接转为 stream。</p></li><li><p>多分辨率图像 API：定义多分辨率图像API，开发者可以很容易的操作和展示不同分辨率的图像了。</p></li><li><p>改进的 CompletableFuture API ： CompletableFuture 类的异步机制可以在 ProcessHandle.onExit 方法退出时执行操作。</p></li><li><p>轻量级的 JSON API：内置了一个轻量级的JSON API</p></li><li><p>响应式流（Reactive Streams) API: Java 9中引入了新的响应式流 API 来支持 Java 9 中的响应式编程。</p></li></ul><p>更多的新特性可以参阅官网：<a href="https://docs.oracle.com/javase/9/whatsnew/toc.htm" target="_blank" rel="noopener">What’s New in JDK 9</a></p><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk9-doc-downloads-3850606.html" target="_blank" rel="noopener">JDK 9 下载地址</a><br>在关于 Java 9 文章的实例，我们均使用 jdk 1.9 环境，你可以使用以下命令查看当前 jdk 的版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ java -version</span><br><span class="line">java version &quot;9-ea&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 9-ea+163)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 9-ea+163, mixed mode)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;java9新特性&quot;&gt;&lt;a href=&quot;#java9新特性&quot; class=&quot;headerlink&quot; title=&quot;java9新特性&quot;&gt;&lt;/a&gt;java9新特性&lt;/h1&gt;&lt;p&gt;Java 9 发布于 2017 年 9 月 22 日，带来了很多新特性，其中最主要的变化是已
      
    
    </summary>
    
    
      <category term="java" scheme="http://iwantjingjing.com/categories/java/"/>
    
    
      <category term="java" scheme="http://iwantjingjing.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Electron教程</title>
    <link href="http://iwantjingjing.com/2021/06/09/Electron%E6%95%99%E7%A8%8B/"/>
    <id>http://iwantjingjing.com/2021/06/09/Electron%E6%95%99%E7%A8%8B/</id>
    <published>2021-06-09T07:47:47.000Z</published>
    <updated>2021-06-09T07:54:43.459Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.electronjs.org/" target="_blank" rel="noopener">官网</a><br><a href="https://www.w3cschool.cn/electronmanual/lz4y1ql3.html" target="_blank" rel="noopener">w3c教程</a><br><a href="https://zh.wikipedia.org/wiki/Electron" target="_blank" rel="noopener">维基</a><br><a href="https://search.bilibili.com/all?keyword=Electron%E6%95%99%E7%A8%8B&from_source=web_search" target="_blank" rel="noopener">bilibili</a><br><a href="https://www.google.com.hk/search?q=mac+%E6%90%AD%E5%BB%BAElectron%E7%8E%AF%E5%A2%83&oq=mac+%E6%90%AD%E5%BB%BAElectron%E7%8E%AF%E5%A2%83&aqs=chrome..69i57.13096j0j4&sourceid=chrome&ie=UTF-8" target="_blank" rel="noopener">mac 搭建Electron环境</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.electronjs.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.w3cschool.cn/electronmanual/lz4y1ql3.
      
    
    </summary>
    
    
      <category term="Electron" scheme="http://iwantjingjing.com/categories/Electron/"/>
    
    
      <category term="Electron" scheme="http://iwantjingjing.com/tags/Electron/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch的工作原理</title>
    <link href="http://iwantjingjing.com/2021/04/18/ElasticSearch%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
    <id>http://iwantjingjing.com/2021/04/18/ElasticSearch%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</id>
    <published>2021-04-18T11:14:32.000Z</published>
    <updated>2021-04-18T11:18:37.326Z</updated>
    
    <content type="html"><![CDATA[<h2 id="启动过程"><a href="#启动过程" class="headerlink" title="启动过程"></a>启动过程</h2><p>当ElasticSearch的节点启动后，它会利用多播(multicast)(或者单播，如果用户更改了配置)寻找集群中的其它节点，并与之建立连接。</p><p>在集群中，一个节点被选举成主节点(master node)。这个节点负责管理集群的状态，当群集的拓扑结构改变时把索引分片分派到相应的节点上。</p><h2 id="ElasticSearch如何建立索引"><a href="#ElasticSearch如何建立索引" class="headerlink" title="ElasticSearch如何建立索引"></a>ElasticSearch如何建立索引</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">索引的不变性</span><br><span class="line">由于倒排索引的结构特性，在索引建立完成后对其进行修改将会非常复杂。再加上几层索引嵌套，更让索引的更新变成了几乎不可能的动作。</span><br><span class="line">所以索性设计成不可改变的：倒排索引被写入磁盘后是不可改变的，它永远不会修改。</span><br><span class="line"></span><br><span class="line">不变性有重要的价值：</span><br><span class="line">1.不需要锁。如果你从来不更新索引，你就不需要担心多进程同时修改数据的问题。</span><br><span class="line">2.一旦索引被读入内核的文件系统缓存，便会留在哪里，由于其不变性。只要文件系统缓存中还有足够的空间，那么大部分读请求会直接请求内存，而不会命中磁盘。这提供了很大的性能提升。</span><br><span class="line">3.其它缓存(像filter缓存)，在索引的生命周期内始终有效。它们不需要在每次数据改变时被重建，因为数据不会变化。</span><br><span class="line">4.写入单个大的倒排索引允许数据压缩，减少磁盘 I&#x2F;O 和 需要被缓存到内存的索引的使用量。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;启动过程&quot;&gt;&lt;a href=&quot;#启动过程&quot; class=&quot;headerlink&quot; title=&quot;启动过程&quot;&gt;&lt;/a&gt;启动过程&lt;/h2&gt;&lt;p&gt;当ElasticSearch的节点启动后，它会利用多播(multicast)(或者单播，如果用户更改了配置)寻找集群中的其它
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ElasticSearch背后的核心理念</title>
    <link href="http://iwantjingjing.com/2021/04/18/ElasticSearch%E8%83%8C%E5%90%8E%E7%9A%84%E6%A0%B8%E5%BF%83%E7%90%86%E5%BF%B5/"/>
    <id>http://iwantjingjing.com/2021/04/18/ElasticSearch%E8%83%8C%E5%90%8E%E7%9A%84%E6%A0%B8%E5%BF%83%E7%90%86%E5%BF%B5/</id>
    <published>2021-04-18T11:11:29.000Z</published>
    <updated>2021-04-18T11:13:03.926Z</updated>
    
    <content type="html"><![CDATA[<p>ElasticSearch是构建在极少数的几个概念之上的。ElasticSearch的开发团队希望它能够快速上手，可扩展性强。而且这些核心特性体现在ElasticSearch的各个方面。从架构的角度来看，这些主要特性是：</p><ul><li><p>开箱即用。安装好ElasticSearch后，所有参数的默认值都自动进行了比较合理的设置，基本不需要额外的调整。包括内置的发现机制(比如Field类型的自动匹配)和自动化参数配置。</p></li><li><p>天生集群。ElasticSearch默认工作在集群模式下。节点都将视为集群的一部分，而且在启动的过程中自动连接到集群中。</p></li><li><p>自动容错。ElasticSearch通过P2P网络进行通信，这种工作方式消除了单点故障。节点自动连接到集群中的其它机器，自动进行数据交换及以节点之间相互监控。索引分片</p></li><li><p>扩展性强。无论是处理能力和数据容量上都可以通过一种简单的方式实现扩展，即增添新的节点。</p></li><li><p>近实时搜索和版本控制。由于ElasticSearch天生支持分布式，所以延迟和不同节点上数据的短暂性不一致无可避免。ElasticSearch通过版本控制(versioning)的机制尽量减少问题的出现。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ElasticSearch是构建在极少数的几个概念之上的。ElasticSearch的开发团队希望它能够快速上手，可扩展性强。而且这些核心特性体现在ElasticSearch的各个方面。从架构的角度来看，这些主要特性是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;开箱即用。安装好El
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ElasticSearch概念-基础概念</title>
    <link href="http://iwantjingjing.com/2021/04/18/ElasticSearch%E6%A6%82%E5%BF%B5-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/"/>
    <id>http://iwantjingjing.com/2021/04/18/ElasticSearch%E6%A6%82%E5%BF%B5-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/</id>
    <published>2021-04-18T11:03:01.000Z</published>
    <updated>2021-04-18T11:10:33.784Z</updated>
    
    <content type="html"><![CDATA[<h2 id="索引-Index"><a href="#索引-Index" class="headerlink" title="索引(Index)"></a>索引(Index)</h2><p>ElasticSearch把数据存放到一个或者多个索引(indices)中。如果用关系型数据库模型对比，索引(index)的地位与数据库实例(database)相当。索引存放和读取的基本单元是文档(Document)。我们也一再强调，ElasticSearch内部用Apache Lucene实现索引中数据的读写。读者应该清楚的是：在ElasticSearch中被视为单独的一个索引(index)，在Lucene中可能不止一个。这是因为在分布式体系中，ElasticSearch会用到分片(shards)和备份(replicas)机制将一个索引(index)存储多份。</p><h2 id="文档-Document"><a href="#文档-Document" class="headerlink" title="文档(Document)"></a>文档(Document)</h2><p>在ElasticSearch的世界中，文档(Document)是主要的存在实体(在Lucene中也是如此)。所有的ElasticSearch应用需求到最后都可以统一建模成一个检索模型：检索相关文档。文档(Document)由一个或者多个域(Field)组成，每个域(Field)由一个域名(此域名非彼域名)和一个或者多个值组成(有多个值的值称为多值域(multi-valued))。在ElasticSeach中，每个文档(Document)都可能会有不同的域(Field)集合；也就是说文档(Document)是没有固定的模式和统一的结构。文档(Document)之间保持结构的相似性即可(Lucene中的文档(Document)也秉持着相同的规定)。实际上，ElasticSearch中的文档(Document)就是Lucene中的文档(Document)。从客户端的角度来看，文档(Document)就是一个JSON对象(关于JSON格式的相关信息,请参看hhtp://en.wikipedia.org/wiki/JSON)。</p><h3 id="参数映射-Mapping"><a href="#参数映射-Mapping" class="headerlink" title="参数映射(Mapping)"></a>参数映射(Mapping)</h3><p>在  1.1节 认识Apache Lucene  中已经提到，所有的文档(Document)在存储之前都必须经过分析(analyze)流程。用户可以配置输入文本分解成Token的方式；哪些Token应该被过滤掉；或者其它的的处理流程，比如去除HTML标签。此外，ElasticSearch提供的各种特性，比如排序的相关信息。保存上述的配置信息，这就是参数映射(Mapping)在ElasticSearch中扮演的角色。尽管ElasticSearch可以根据域的值自动识别域的类型(field type)，在生产应用中，都是需要自己配置这些信息以避免一些奇的问题发生。要保证应用的可控性。</p><h2 id="文档类型-Type"><a href="#文档类型-Type" class="headerlink" title="文档类型(Type)"></a>文档类型(Type)</h2><p>每个文档在ElasticSearch中都必须设定它的类型。文档类型使得同一个索引中在存储结构不同文档时，只需要依据文档类型就可以找到对应的参数映射(Mapping)信息，方便文档的存取。</p><h2 id="节点-Node"><a href="#节点-Node" class="headerlink" title="节点(Node)"></a>节点(Node)</h2><p>单独一个ElasticSearch服务器实例称为一个节点。对于许多应用场景来说，部署一个单节点的ElasticSearch服务器就足够了。但是考虑到容错性和数据过载，配置多节点的ElasticSearch集群是明智的选择。</p><h2 id="集群-Cluster"><a href="#集群-Cluster" class="headerlink" title="集群(Cluster)"></a>集群(Cluster)</h2><p>集群是多个ElasticSearch节点的集合。这些节点齐心协力应对单个节点无法处理的搜索需求和数据存储需求。集群同时也是应对由于部分机器(节点)运行中断或者升级导致无法提供服务这一问题的利器。ElasticSearch提供的集群各个节点几乎是无缝连接(所谓无缝连接，即集群对外而言是一个整体，增加一个节点或者去掉一个节点对用户而言是透明的&lt;个人理解，仅供参考&gt;)。在ElasticSearch中配置一个集群非常简单，在我们看来，这是在与同类产品中竞争所体现出的最大优势。</p><h2 id="分片索引-Shard"><a href="#分片索引-Shard" class="headerlink" title="分片索引(Shard)"></a>分片索引(Shard)</h2><p>前面已经提到，集群能够存储超出单机容量的信息。为了实现这种需求，ElasticSearch把数据分发到多个存储Lucene索引的物理机上。这些Lucene索引称为分片索引，这个分发的过程称为索引分片(Sharding)。在ElasticSearch集群中，索引分片(Sharding)是自动完成的，而且所有分片索引(Shard)是作为一个整体呈现给用户的。需要注意的是，尽管索引分片这个过程是自动的，但是在应用中需要事先调整好参数。因为集群中分片的数量需要在索引创建前配置好，而且服务器启动后是无法修改的，至少目前无法修改。</p><h2 id="索引副本-Replica"><a href="#索引副本-Replica" class="headerlink" title="索引副本(Replica)"></a>索引副本(Replica)</h2><p>通过索引分片机制(Sharding)可以向ElasticSearch集群中导入超过单机容量的数据，客户端操作任意一个节点即可实现对集群数据的读写操作。当集群负载增长，用户搜索请求阻塞在单个节点上时，通过索引副本(Replica)机制就可以解决这个问题。索引副本(Replica)机制的的思路很简单：为索引分片创建一份新的拷贝，它可以像原来的主分片一样处理用户搜索请求。同时也顺便保证了数据的安全性。即如果主分片数据丢失，ElasticSearch通过索引副本使得数据不丢失。索引副本可以随时添加或者删除，所以用户可以在需要的时候动态调整其数量。</p><h2 id="时间之门-Gateway"><a href="#时间之门-Gateway" class="headerlink" title="时间之门(Gateway)"></a>时间之门(Gateway)</h2><p>在运行的过程中，ElasticSearch会收集集群的状态、索引的参数等信息。这些数据被存储在Gateway中。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;索引-Index&quot;&gt;&lt;a href=&quot;#索引-Index&quot; class=&quot;headerlink&quot; title=&quot;索引(Index)&quot;&gt;&lt;/a&gt;索引(Index)&lt;/h2&gt;&lt;p&gt;ElasticSearch把数据存放到一个或者多个索引(indices)中。如果用关系型
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
